<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="12:DemoAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7faa004ee020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7faa00478dc0"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7faa00478dc0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7faa002b5590"/></to>
    </wire>
    <wire loc="13:DemoAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faa004e1330"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa00298020"/></to>
    </wire>
    <wire loc="19:DemoAppC.nc">
      <from><interface-ref name="Timer_tem" scoped="" ref="0x7faa004d7810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa9ffe04370"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9ffe04370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:DemoAppC.nc">
      <from><interface-ref name="Timer_lig" scoped="" ref="0x7faa004d4cb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa9ffdfecb0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9ffdfecb0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:DemoAppC.nc">
      <from><interface-ref name="Timer_hum" scoped="" ref="0x7faa004cd1b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa9ffdf7750"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9ffdf7750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:DemoAppC.nc">
      <from><interface-ref name="TemRead" scoped="" ref="0x7faa004c4840"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fa9ffafa310"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7fa9ffafa310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fa9fe165020"/></to>
    </wire>
    <wire loc="26:DemoAppC.nc">
      <from><interface-ref name="HumRead" scoped="" ref="0x7faa004c29a0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fa9ffaf8240"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7fa9ffaf8240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fa9fe164e40"/></to>
    </wire>
    <wire loc="30:DemoAppC.nc">
      <from><interface-ref name="LigRead" scoped="" ref="0x7faa004c6110"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fa9ffaf2750"/></to>
    </wire>
    <wire loc="47:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fa9ffaf2750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fa9fe076760"/></to>
    </wire>
    <wire loc="36:DemoAppC.nc">
      <from><interface-ref name="RadioAMSend" scoped="" ref="0x7faa004abbe0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa9feb17020"/></to>
    </wire>
    <wire loc="64:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa9feb17020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa9fdc64b60"/></to>
    </wire>
    <wire loc="40:DemoAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faa004a15b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9feb0a020"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa9feb0a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9ff6ed3f0"/>
      <arguments>
        <value cst="I:150">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:DemoAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7faa004b54b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9ff6ec630"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa9ff6ec630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9ff6ac760"/></to>
    </wire>
    <wire loc="42:DemoAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7faa004a7c00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff6ef080"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff6ef080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff6b1880"/></to>
    </wire>
    <wire loc="37:DemoP.nc">
      <from><interface-ref name="sendPacket" scoped="" ref="0x7faa004a3410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fe6faad0"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fdaddca0"/></to>
    </wire>
    <wire loc="59:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fea83540"/></to>
    </wire>
    <wire loc="65:../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fe722470"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fec75dd0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fecfeb50"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fed1d750"/></to>
    </wire>
    <wire loc="52:../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fed3e080"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fee8f620"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fef7cc60"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9ff53d7d0"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fddcd020"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9ff3cf020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9ff5e8cc0"/></to>
    </wire>
    <wire loc="37:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9ff7bd150"/></to>
    </wire>
    <wire loc="96:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fe040060"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9ffa41660"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fe0caa00"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa00020b80"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7faa002b5c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7faa009e43a0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7faa009e43a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7faa0058f140"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7faa002a86c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa004701e0"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa004701e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa0046d3c0"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa002a8dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7faa0046dad0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7faa0046f900"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7faa0046f900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa0044ea40"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7faa0046c1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa00466510"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7faa0046c8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa00270c40"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa0044ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa004367e0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7faa00444130"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7faa00434020"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7faa006674c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7faa00433360"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7faa003f05a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa0032e6d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7faa003de020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa00326b30"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7faa003e7700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa00333160"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7faa003cba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa0030dcb0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7faa003eeaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa00334480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7faa003d2020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa0030d020"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7faa003c8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa002f5cb0"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7faa003d95a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa00306220"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7faa003f1b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa003839d0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7faa003cea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa0031c2f0"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7faa003d43e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa0031d610"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7faa003dd5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa0031e220"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7faa003e6700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa0032c7a0"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7faa003caa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa003042f0"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7faa003dcbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa003166d0"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7faa003ed890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa0032dac0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7faa00401060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa00392c80"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7faa003d2da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa00305610"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7faa003f80c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa00335020"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7faa003d8a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa002ff6d0"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7faa003e16d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa0033ca90"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7faa003cca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa003147a0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7faa003eacf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa0033dde0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7faa003d31f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa00315ac0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7faa003c9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa002fd7a0"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7faa003da0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa0030fb30"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7faa003e06c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa0038bc80"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7faa003d1b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa002feac0"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7faa003cfa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa00324cb0"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7faa003d0a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa002f5020"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7faa003d5570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa00324020"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7faa003d6020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa002f8b30"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7faa00390c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003905b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7faa0038f2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7faa002f0a90"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7faa0038f940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7faa002ec260"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa0033b930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa00392c80"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa00338020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003905b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa00332020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa00392c80"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa003317a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003905b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa0032b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa00392c80"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa0032ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003905b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7faa00389c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003895b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7faa003882f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7faa002ec9f0"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7faa00388940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7faa002eb240"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa00323b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa0038bc80"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa003212f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003895b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa0031b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa0038bc80"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa0031a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003895b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa00313610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa0038bc80"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa00312c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003895b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa0030cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa0038bc80"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa0030a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003895b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa00303160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa0038bc80"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa003027a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003895b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa002fc610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa0038bc80"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa002fbc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003895b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa002f4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa0038bc80"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa002f22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa003895b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa0058d040"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7faa00589490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7faa0097b3b0"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa00270c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa0029b8d0"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7faa002907b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7faa00273360"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7faa00273360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7faa00058020"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7faa00296980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7faa002726a0"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7faa002726a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7faa00044b90"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7faa00295ca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7faa002719c0"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7faa002719c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7faa0003f710"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa000472f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7faa00218200"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7faa00218200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000f5740"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa00043de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7faa00216200"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7faa00216200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000f0100"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa0003e930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7faa00214200"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7faa00214200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000ecd10"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7faa0025a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0018e100"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7faa00245020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0015fd10"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7faa001fc560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00150d10"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7faa001d7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000c5100"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7faa001fa580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0014b740"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7faa00241020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00154100"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7faa0022d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00125e00"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7faa00208200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000cfd10"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7faa001f4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00142d10"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7faa001e3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000e1100"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7faa001cf580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000c0d10"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7faa00254020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00180100"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7faa001f1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0013d740"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7faa0024f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00176740"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7faa0023b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00146100"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7faa00227200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00117d10"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7faa00212200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000e6740"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7faa00202200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000c0d10"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7faa0025e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00198d10"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7faa00249020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00168860"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7faa00235020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00138100"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7faa001fe580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00150d10"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7faa001dd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000d3100"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7faa001d1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000c0d10"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7faa001e9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000fad10"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7faa00231020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0012ea60"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7faa0021c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000fe100"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7faa0020c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000d8740"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7faa001db570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000cfd10"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7faa001ef570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00108d10"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7faa00258020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0018ad10"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7faa00243020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0015a740"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7faa00210200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000e1100"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7faa0023f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00150d10"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7faa0022b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00120740"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7faa00206200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000ca740"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7faa001eb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000fe100"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7faa0026b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa001a26d0"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7faa0024d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00171100"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7faa00239020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00142d10"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7faa00225200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00112740"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7faa001e7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00138100"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7faa001e1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000ddd10"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7faa001d5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000c0d10"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7faa00220200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00108d10"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7faa001e5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00134d10"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7faa0025c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00193740"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7faa00247020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00163270"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7faa00233020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00134d10"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7faa001ed580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00103740"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7faa001d9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000ca740"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7faa0022f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00129460"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7faa0021a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000fad10"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7faa0020a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000d3100"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7faa00256020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00185740"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7faa0020e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000ddd10"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7faa00251020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0017bd10"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7faa0023d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0014b740"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7faa00229200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0011b100"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7faa00204200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000c5100"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7faa00260020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0019c100"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7faa0024b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0016dd10"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7faa00237020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0013d740"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7faa00222200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa0010c100"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7faa001f6560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00146100"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7faa001df570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000d8740"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7faa001f8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00146100"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7faa0021e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00103740"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7faa001d3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000c5100"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7faa001cd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa000e6740"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7faa002001f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa00154100"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa0001da40"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7faa0001da40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa9ffe26150"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa00020b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9ffea1020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7faa00013500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa9ffe17790"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa9ffea1020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fe21b380"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fa9ffe20640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa9ffe752f0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa9ffe70850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9ffea1870"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa9ffea1870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9fe214020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa9ffe0ca60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa9fff1ab50"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa9fff1ab50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa9ffefdcf0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa9fe21b380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fe1ffa30"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fa9fe20e780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9fe21bbd0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa9fe21bbd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9fe1fe340"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa9fe2103d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa9fff1ab50"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fe1fa4c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fe2047b0"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fe2047b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff76cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fe1f9a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fe203da0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fe203da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fff72a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fe1f8da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fe2010c0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fe2010c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fff6f3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff76cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa003e06c0"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fff72a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7faa003de020"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fff6f3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7faa003d5570"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff76cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa003e06c0"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fff72a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7faa003dcbe0"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fff6f3f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7faa003d31f0"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff76cd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa003e06c0"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fff72a40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7faa003da0c0"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fff6f3f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7faa003d2020"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff76cd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa003e06c0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fff72a40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7faa003d95a0"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fff6f3f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7faa003d2da0"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff76cd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa003e06c0"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fff72a40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7faa003d8a50"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fff6f3f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7faa003d1b80"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff76cd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa003e06c0"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fff72a40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7faa003d6020"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fff6f3f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7faa003d0a20"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fa9ffedf0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa9fff18b70"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa9fff18b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa9fff11b80"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff03c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa003e06c0"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fa9ffe6c9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fa9ffe1ba00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7fa9ffaf7900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7fa9fe1646d0"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fa9ffaf9aa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fa9fe1667a0"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7fa9fe161620"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ffd9b620"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7fa9fe15f020"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fa9ffd9a8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7fa9fe1602f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ffd9b620"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7fa9fe15e610"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fa9ffd9a8a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7fa9ffd9a8a0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fa9ffd1c020"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ffd9b620"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ffd0b9e0"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ffd0b9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ffb50210"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fa9ffd1b610"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7fa9ffd0a830"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fa9ffd0a830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ffd05b70"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7fa9ffd1a7a0"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7fa9ffd08b40"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fa9ffd08b40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ffd00690"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fa9ffd19930"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7fa9ffd06020"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fa9ffd06020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa9ffbdca30"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9ffd18560"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa9ffb0d1e0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9ffb0d1e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9ffd138d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></to>
    </wire>
    <wire loc="102:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7fa9ffd11800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7fa9ffd11020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ffb50210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fe0c6230"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ffd04de0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7faa00258020"/></to>
    </wire>
    <wire loc="57:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ffcff930"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7faa00256020"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ffcfa480"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7faa00254020"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7fa9ffceea80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ffcfb1b0"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fa9ffcecce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ffd05b70"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fa9ffcea020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ffd00690"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9ffcf3770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa9ffcdec10"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9ffcdec10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fa9ffbdb610"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fa9ffcccbc0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fa9ffcccbc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fa9ffcb9a30"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa9ffb49280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9ffcf6a80"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ffb19020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ffb4d400"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ffb4d400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe0c4400"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9ffb1a2f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9ffb4f7a0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9ffb4f7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fe0c57a0"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fa9ffce9ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fa9ffccdbc0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fa9ffcbaa30"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fa9ffcc3bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fa9ffcafbc0"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fa9ffccabc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fa9ffcb7a30"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fa9ffcc8bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fa9ffcb4a30"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fa9ffccfbc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fa9ffcbca30"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fa9ffcc5bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fa9ffcb1a30"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fa9ffcc2bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fa9ffcaebc0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fa9ffcd0bf0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fa9ffcc09c0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fa9ffcc7bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fa9ffcb3a30"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fa9ffccebc0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fa9ffcbba30"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fa9ffcc4c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fa9ffcb0bc0"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fa9ffccbbc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fa9ffcb8a30"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fa9ffcc9bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fa9ffcb5a30"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fa9ffcd4bc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fa9ffcbda30"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fa9ffcc6bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fa9ffcb2a30"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9ffb4f020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe0c5020"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe0c4cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ffb4dcd0"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa9fe0c3500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa9fe0c8060"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa9fe0c07a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa9fe090b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9ffb49280"/></to>
    </wire>
    <wire loc="81:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa9fe08f720"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa9ffb49d00"/></to>
    </wire>
    <wire loc="83:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fe08fcf0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9ffb1a2f0"/></to>
    </wire>
    <wire loc="84:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe08e930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ffb19020"/></to>
    </wire>
    <wire loc="78:../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fa9fe08c160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fa9fe08c940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fa9fe076760"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fa9ffac1ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fa9ff6f6020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fa9fe071380"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fa9fe071380"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fa9ff7c91d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7fa9ffaf2020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7fa9ff7028a0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe073020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9ff6fe300"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe06d0e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9ff6fe300"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa9ffab4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe073020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fa9ffab1450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fa9fe067400"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fa9fe067400"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fa9ffa4a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7fa9ffab7640"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fe068660"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fe068660"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fa9ff8afd20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe065660"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe073020"/></to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7fa9ffa86e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fa9fe066400"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fa9ffa49960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fa9fe066cf0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fa9ffa48920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fa9ff8aa1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ffa57cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fa9fe0552a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe065660"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa9ff8a9740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fa9fe056020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7fa9ffa49960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fa9ffa3faf0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7fa9ffa461d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7fa9ffa3c910"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fa9ffa48920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fa9ffa3eab0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fa9ffa4a1d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fa9ffa40370"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ffa57cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff8ca520"/></to>
    </wire>
    <wire loc="98:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff8ca520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fe03e6c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fa9ffa3b280"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff8c9b20"/></to>
    </wire>
    <wire loc="100:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff8c9b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe03dcb0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fa9ffa2d0d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fa9ff95a020"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fa9ffa28be0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7faa00210200"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fa9ffa26c80"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7faa0020e200"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fa9ffa24c80"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7faa0020c200"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fa9ffa21c80"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7faa0020a200"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fa9ffa1fc80"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7faa00208200"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fa9ffa1dc80"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7faa00206200"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fa9ffa1bc80"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7faa00204200"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fa9ffa19c80"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7faa00202200"/></to>
    </wire>
    <wire loc="74:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fa9ffa39020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7faa00401060"/></to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fa9ffa2c880"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7faa003f1b10"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fa9ffa2bd30"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7faa003f80c0"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fa9ffa29120"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7faa003eacf0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fa9ffa29e60"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7faa003eeaa0"/></to>
    </wire>
    <wire loc="99:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9ff8c93a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe03d530"/></to>
    </wire>
    <wire loc="101:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe03c610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff8c8570"/></to>
    </wire>
    <wire loc="103:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa9fe03cdd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fa9fe040670"/></to>
    </wire>
    <wire loc="68:../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa9fe03a900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7fa9ff8afd20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fa9ff847ca0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fa9ff842030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7fa9ff8aa1d0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa9ff83f020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fa9ff8a9740"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fa9ff842d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fa9ff8a5240"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fa9ff8419c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fa9ff8a5e00"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fa9ff8a2a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa9ff80d4e0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9ff80d4e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fa9ff89b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa9ff806020"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9ff806020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fa9ff8976c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa9ff800b40"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9ff800b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fa9ff8a49a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fa9ff95a020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7fa9ff83c7f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fdfff280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe06d0e0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9ff7c55e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe06d0e0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff7c2280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fe002360"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fe002360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fa9ff8afd20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fa9ff7c4c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fa9fe001020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fa9fe001020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fa9ffa4a1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fa9ff7c91d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fa9ff747cb0"/></to>
    </wire>
    <wire loc="32:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9ff7b7b10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9ff7c55e0"/></to>
    </wire>
    <wire loc="33:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff7188f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff7c2280"/></to>
    </wire>
    <wire loc="35:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fa9ff71cbf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fa9ff7bde70"/></to>
    </wire>
    <wire loc="38:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fa9ff7b81d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fa9ff7c4c90"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa9ff7b4020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9ff74f970"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa9ff74f970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9fdfeb020"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7fa9ff78c380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7fa9ff79aaa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7fa9ff793100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa9ff74f120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fdff2450"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa9fdff2450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fdfd7ca0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fa9fdfe5780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9fdff2ca0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa9fdff2ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9fdfd55b0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa9fdfe83d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa9fff1ab50"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fdfd2710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fdfdc880"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fdfdc880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff76cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fdfd1da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fdfda020"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fdfda020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fff72a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fdfcf0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fdfd9440"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fdfd9440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fff6f3f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fa9fe000020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fa9ffa49960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fa9fe000910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fa9ffa48920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fa9ff8aa1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ffa57cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fa9fdf8c120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fdfff280"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa9ff8a9740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fa9fdf8edc0"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff6b1880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff689b70"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa9ff6ee1d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa9ff6b0980"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa9ff6b0980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa9fec3ae80"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fa9ff6ec020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fa9ff6ae900"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fa9ff6ae900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fa9fec36db0"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa9ff6ac760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9fec34a80"/></to>
    </wire>
    <wire loc="89:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa9ff6cfcd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa9fee0a550"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa9fee0a550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa9fedfca80"/></to>
    </wire>
    <wire loc="86:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9ff6beb20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9ff69fbb0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9ff69fbb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9ff677b40"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa9ff6ed3f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9ff6afcb0"/></to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa9ff6afcb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9fec361d0"/></to>
    </wire>
    <wire loc="85:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9ff6d39f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9ff6aa810"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9ff6aa810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9ff678990"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9ff6d94e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9ff6ad020"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9ff6ad020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9fec35430"/></to>
    </wire>
    <wire loc="90:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa9ff6c9dc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa9fee06660"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa9fee06660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa9fedf8af0"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff689b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9fec69b80"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9ff697d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9fec328b0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fa9ff68ad20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fa9fec33ce0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9ff6a2970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9ff67a9e0"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9ff67a9e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee0f660"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9ff677b40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9fec69080"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9ff678990"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fa9fee0c6e0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa9ff695020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa9ff676790"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa9ff676790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa9fec54020"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa9ff69ea80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa9ff6774c0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa9ff6774c0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa9fee0ba70"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fa9fec290f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff686d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa9fec30860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fa9ff6834e0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fa9ff6834e0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fa9fecd1c90"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa9fec2f690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fa9ff67a390"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fa9ff67a390"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fa9fecd0a50"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa9fec2b4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa9ff037b20"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fec2fce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee0f660"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee0f660"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee01d10"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fec2eb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee0b0c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee0b0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fedfd640"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fa9fec2d610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fa9ff5ec550"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fa9ff5ec550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fa9ff5e40c0"/></to>
    </wire>
    <wire loc="106:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fa9fec2a1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9ff66f020"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9ff66f020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9ff66a4c0"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9fec29d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa9fec69b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fa9fec65d90"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa9fee0ba70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa9fedfc020"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa9fec54020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa9fec52400"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fa9fecd1c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fa9fecc7a20"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9fec69080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9fec612d0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fa9ff684020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9fecd15e0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa9fecd15e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fa9fecc7370"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa9fee0c6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fa9fedfec50"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff686d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fecd4be0"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fecd4be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fecc97b0"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fa9ff679240"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9fecd38e0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa9fecd38e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fa9fecc84d0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fa9ff6846e0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fa9feccf170"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fa9feccf170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fa9fecc4020"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fa9fecd0a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fa9fecc6840"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fa9fec65d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff671020"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff671020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff66eb80"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa9fecce6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9fed23220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa9fed23220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9fed21a10"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa9fed22020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9fec57340"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa9fec57340"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa9fec54d70"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa9fec54d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9fec6dce0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa9fec6dce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa9fec66860"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa9fec66860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9ff671b10"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa9ff671b10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9ff66b790"/></to>
    </wire>
    <wire loc="107:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa9fecce020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9fec6a980"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa9fec6a980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa9fec65690"/></to>
    </wire>
    <wire loc="108:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa9fec65690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9fed05a90"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa9fed05a90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9fed01e20"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa9fed02950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9ff670940"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa9ff670940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9fee937c0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa9fee937c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9fee8d020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff669320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff5fa020"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff5fa020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff5e5390"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fa9ff661880"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fa9ff5f84b0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fa9ff5f84b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fa9ff5e2020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fa9ff667ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa9fef8d6c0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fa9ff667ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa9fee965c0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fa9fee965c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa9fee8fca0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fa9fef8d6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa9fef7b320"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa9ff659810"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa9fef8a020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa9fef8a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9fef7bbc0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fa9ff660700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9fef8acb0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9fef8acb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9fef7a970"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9ff656b00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee0f660"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9ff64d130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee0b0c0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa9ff655b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa9fed44a20"/></to>
    </wire>
    <wire loc="56:../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa9fed44a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa9fed3da20"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fa9ff648850"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa9fed46aa0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa9fed46aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa9ff3d4280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9ff657470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fa9ff6432a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fa9ff6442a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fa9ff6462b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fa9ff5ea830"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fa9ff5e1500"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fa9ff5de3a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa9ff53a220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa9ff53a220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa9ff534af0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa9ff5d95c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fa9ff4f5e60"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa9ff4f5e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4e8b60"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fa9ff5d8830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fa9ff4f16a0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fa9ff4f16a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4d9d70"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fa9ff5d7b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fa9ff4efce0"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fa9ff4efce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4cf710"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fa9ff5d5020"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fa9ff4b8d60"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fa9ff4b8d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa9ff4968a0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa9ff5c00d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff0c3e20"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff0c3e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff455950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa9ff5c2120"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fa9ff0bf7b0"/></to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa9ff0bf7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa9ff5c2830"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fa9ff0beae0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa9ff0beae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa9ff5c1940"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fa9ff0c0ad0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa9ff0c0ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9ff5c1020"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9ff0bd160"/></to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9ff0bd160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa9ff5c69b0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fa9ff0b4870"/></to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa9ff0b4870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa9ff5ce3c0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fa9ff0b2880"/></to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa9ff0b2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa9ff5cec70"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fa9ff0b10a0"/></to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa9ff0b10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9ff5c9570"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9ff0b9e50"/></to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9ff0b9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9ff5c9e40"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9ff0b8670"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9ff0b8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa9ff5d3200"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fa9ff0a4500"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa9ff0a4500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa9ff5cb830"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fa9ff0a5ce0"/></to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa9ff0a5ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9ff5c5720"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9ff0b6e50"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9ff0b6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa9ff5c4020"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fa9ff0b8e50"/></to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa9ff0b8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa9ff5c48d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fa9ff0b7e50"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa9ff0b7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fa9ff5bebd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff090a80"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff090a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff455950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fa9ff5c0e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff0649e0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff0649e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff455950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa9ff5d06b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa9ff037b20"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa9ff5dc970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa9ff036d20"/></to>
    </wire>
    <wire loc="23:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa9ff036d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa9ff01c310"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fa9ff5b3820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fa9ff5b4940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa9ff53d7d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9ff534260"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa9ff534260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fdf64860"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa9ff534af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9fdf63140"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa9fdf64860"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fdf5ca10"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa9fdf63140"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9fdf565f0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa9fdf5ca10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fdf40510"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fa9fdf50d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9fdf5b2a0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa9fdf5b2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa9fdf40da0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa9fdf529b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa9ff51e080"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa9ff51e080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa9ff519cd0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fdf3b020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fdf451b0"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fdf451b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff76cd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fdf3a760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fdf448f0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fdf448f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fff72a40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fdf39a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fdf43c10"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fdf43c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fff6f3f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fa9ff5150f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa9fff18b70"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fa9ff4f3090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4e2710"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fa9ff4f2390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4dd1d0"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fa9ff53bb10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4ec020"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fa9ff4f09b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4d4b60"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4eb2f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7faa0025a020"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4e7de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7faa0022d200"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4e1930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7faa0025c020"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4dc480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7faa0026b020"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4d7020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7faa00225200"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4d3de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7faa0022f200"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4cd930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7faa00227200"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fa9ff4b8150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa9ff4b1a20"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa9ff4b7a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa9ff4938b0"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9ff49d5d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7faa003dd5a0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fa9ff49c8f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7faa003cea20"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff49b7a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7faa0022f200"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fa9ff495480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fa9ffccdbc0"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fa9ff492480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fa9ffcd0bf0"/></to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa9ff0bf160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9ff0b3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa9ff0ab0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa9ff0b20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa9ff09f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa9ff0a2500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa9ff0be490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa9ff0a8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9ff0a3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa9ff0ad880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa9ff0af0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff0c1a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff452670"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff452670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff44c920"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9ff0bde00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa9ff0bc490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa9ff0a6c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa9ff0bcbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9ff0a3ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa9ff0a80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa9ff0b7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa9ff0a90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa9ff0ab880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa9ff0a9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa9ff0a1ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa9ff0a2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa9ff0af880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa9ff0aa0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa9ff0a4ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa9ff0b1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa9ff09fce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa9ff0c0480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa9ff0b9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa9ff0b6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa9ff0ac0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa9ff0ac880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9ff0b30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa9ff0ba2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa9ff0b9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9ff0bd7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa9ff0a5500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa9ff0a1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa9ff0ad0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa9ff0aa880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa9ff0bfe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa9ff0b00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa9ff0ba940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa9ff0b0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa9ff0a60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa9ff09e9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff448bb0"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff445020"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff445db0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff455950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff449810"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff444ba0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fa9ff440020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa9ff3d8770"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa9ff3d8770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa9ff3d4280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa9ff443400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff3b7c40"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff3b7c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fde6c770"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa9ff441080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa9ff0eb8f0"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa9ff0eb8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa9fde6bbe0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa9ff437680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa9ff0ea020"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa9ff0ea020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa9fde6ad70"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9ff440df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fa9ff433120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa9ff3d4280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa9ff3cfb70"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa9fde6ad70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa9ff3483f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa9fde6bbe0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa9ff34ac20"/></to>
    </wire>
    <wire loc="105:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fde6c770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff34b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fde6b440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fde62d90"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fde62d90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9ff1d52c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa9ff34ac20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa9ff2cf440"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fa9fde6a2b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fa9ff349320"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fa9ff349320"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fa9ff2cfa50"/></to>
    </wire>
    <wire loc="111:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa9ff345510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa9fde695a0"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fde535d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff34a430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fa9ff346280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fde62140"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fde62140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff1d6020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa9ff3416a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9fde5b760"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9fde5b760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa9ff1d94d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff34a430"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff2d0c40"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa9ff3483f0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa9ff2ce700"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff34b1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff2d1e80"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa9ff2cde00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa9ff345510"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fa9ff2cd060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fa9ff346280"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa9ff2c7de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa9ff3416a0"/></to>
    </wire>
    <wire loc="98:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fa9ff2cc490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9ff2bf860"/></to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9ff2bf860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fa9ff2b3020"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9ff2c65a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fa9ff2c5c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa9ff2b58a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa9ff2ae750"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9ff2b83b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa9ff2afdc0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fa9ff280700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7faa001fe580"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fa9ff27e670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7faa001fa580"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fa9ff27b670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7faa001f8580"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fa9ff279670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7faa001f1580"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fa9ff277670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7faa001f4580"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fa9ff2855b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fa9ff1a5020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa9fde5a020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa9ff1d83f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa9fde5a630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa9ff1b1350"/></to>
    </wire>
    <wire loc="11:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa9ff1b1350"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fa9ff1a5020"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9fde61d40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9ff2bf860"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fde615a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff1d5ad0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff1d5ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff1baa70"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff1d48a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fde535d0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9ff1d52c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9ff1bb6c0"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9ff1bb6c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fddc96c0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fa9ff1d94d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa9ff1d2d60"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff1d6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff1bc890"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9ff1bc890"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fddca850"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa9ff1d83f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa9ff1d1710"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff1baa70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fddc8a70"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff1b83e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff1d48a0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff1bfbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff1baa70"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fa9ff1d1d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9ff2b83b0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fa9ff1bf5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa9ff2b58a0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9ff1bbe40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fddc9e40"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fddc7400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff1b83e0"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa9fddc7bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa9fddcd630"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa9fddc5de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fa9ff19e0c0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fa9ff2b3020"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fa9ff19ad40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7faa001fe580"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fa9ff198cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7faa001f8580"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9ff083c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa9ff08eda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9ff087b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9ff081670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa9ff07ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa9ff081e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa9ff06d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa9ff06f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa9ff08b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa9ff075670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9ff0702f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa9ff085c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa9ff084c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa9ff07b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa9ff07de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa9ff080670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff08f760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff452670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9ff08aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa9ff089120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa9ff074a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa9ff089870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9ff070ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9ff08bdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa9ff076e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa9ff084480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9ff085480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa9ff08e750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa9ff077e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa9ff078670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa9ff076670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa9ff06ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa9ff06fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa9ff07c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa9ff078e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa9ff072ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa9ff07e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa9ff06dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa9ff08e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa9ff087370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa9ff083480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa9ff07be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa9ff080e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa9ff07a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa9ff082670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa9ff08d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9ff082e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa9ff088020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa9ff088cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa9ff0722f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa9ff073ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9ff08a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa9ff0732f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa9ff06e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa9ff07ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa9ff077670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa9ff08daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa9ff08b770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa9ff07ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa9ff088670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa9ff07d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa9ff075e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa9ff06c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9ff057c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa9ff061da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9ff05ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9ff054670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa9ff04de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa9ff054e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa9ff0402f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa9ff0432f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa9ff05f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa9ff048670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9ff0442f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa9ff059c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa9ff058c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa9ff04e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa9ff051e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa9ff053670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff062760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff452670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9ff05eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa9ff05c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa9ff047a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa9ff05c870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9ff044ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9ff05fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa9ff04ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa9ff058480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9ff059480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa9ff061750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa9ff04be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa9ff04c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa9ff04a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa9ff041ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa9ff043ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa9ff04f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa9ff04ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa9ff045ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa9ff052670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa9ff040ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa9ff061100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa9ff05a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa9ff057480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa9ff04ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa9ff053e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa9ff04d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa9ff055670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa9ff060450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9ff055e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa9ff05b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa9ff05bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa9ff0452f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa9ff046ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9ff05e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa9ff0462f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa9ff0412f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa9ff04fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa9ff04b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa9ff060aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa9ff05f770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa9ff052e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa9ff05b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa9ff051670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa9ff048e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa9ff03f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fa9ff019880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fa9ff00e020"/></to>
    </wire>
    <wire loc="20:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fa9ff00e020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fa9ff008140"/></to>
    </wire>
    <wire loc="16:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fa9ff004bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fa9ff00dc50"/></to>
    </wire>
    <wire loc="21:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fa9ff00dc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fa9fefef150"/></to>
    </wire>
    <wire loc="17:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fa9ff007530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa9fefa3a10"/></to>
    </wire>
    <wire loc="18:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fa9feff4540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fa9feff5590"/></to>
    </wire>
    <wire loc="11:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fa9feff5590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa9fefa19e0"/></to>
    </wire>
    <wire loc="18:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fa9fefe9910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fa9feff1c90"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fa9feff1c90"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fa9fefc7a90"/></to>
    </wire>
    <wire loc="19:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fa9fefef9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fa9feff4540"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa9fefb4020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fa9fefaf530"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fa9fefaf530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa9fefabe50"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fefa7020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7faa00401060"/></to>
    </wire>
    <wire loc="9:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9fefa0c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7faa00249020"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa9fef86990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa9fef79900"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fa9fef88150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fa9fef780f0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fa9fef78ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa9ff53a220"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fa9fef6c500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fa9ff53bb10"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa9fef65820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fa9ff4f5e60"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fa9fef64b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fa9ff4f09b0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fa9fef6d880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fa9ff4b8150"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa9fef62020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9feec7c30"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9feec7c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff455950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9fef62d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9feec58f0"/></to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9feec58f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff452670"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa9fef5f6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fa9feec42f0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa9feec42f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa9fef5fde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fa9feec3cc0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa9feec3cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa9fef5e530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fa9feec2370"/></to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa9feec2370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9fef5ec60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9feec1d00"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9feec1d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa9fef60e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fa9feebbc60"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa9feebbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa9fef61780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fa9feea27a0"/></to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa9feea27a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9fef60550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9feea72f0"/></to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9feea72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9fef5c3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9feebc480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9feebc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9fef5b5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9feeb8e50"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9feeb8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9fef5a020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9feeb7670"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9feeb7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa9fef5ce80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fa9feebe7b0"/></to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa9feebe7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa9fef599c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fa9feea4ad0"/></to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa9feea4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa9fef5a890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fa9feea62f0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa9feea62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa9fef59130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fa9feea6ad0"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa9feea6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fa9fef54d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fa9fee96df0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fa9fee96df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fa9fee8e550"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fef74d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee0f660"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fef73bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee0b0c0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa9fef72950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa9fee0a550"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa9fef67be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa9fee02480"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa9fee02480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa9fedf48b0"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9fef576c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9feebac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa9feec3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9feebdc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa9feeb0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa9feeb7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa9feea32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa9feeab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa9feebcc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa9feeb1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa9feeb4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa9feeb6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa9feebf370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa9feeaaa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa9feebfac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9feea7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9feec1060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa9feeade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa9feebb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa9feec4940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa9feeaee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa9feeaf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa9feead670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa9feeb2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa9feeafe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa9feea8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa9feeb5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa9feea3ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa9feebd490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa9feeba480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa9feeb1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa9feeb6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa9feeb0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa9feeb8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa9feec3670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa9feebe160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa9feebee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa9feea82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa9feea9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9feec16b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa9feea92f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa9feea42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa9feeb2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa9feeae670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa9feec29c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa9feeb5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa9feeb4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa9feeabe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fa9fee92020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fa9fee8d7c0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9fee78150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa9fee8c020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fa9ff4f5e60"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fa9fee8b380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fa9ff4f3090"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fa9fee896b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fa9ff4f2390"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa9fee88a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa9ff4b7a20"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa9fee876e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fed92520"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fed92520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9ff455950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa9fee86530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fa9fed6f480"/></to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa9fed6f480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9fee85ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9fed8c060"/></to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9fed8c060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa9fee853a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fa9fed8cd00"/></to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa9fed8cd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee84330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee0f660"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee831e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee0b0c0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa9fee81d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa9fee0a550"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fa9fee83b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fa9ff5ec550"/></to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9fee7c3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9fed84840"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9fed84840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9fee7ccb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9fed83060"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9fed83060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa9fee7db10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fa9fed8bae0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa9fed8bae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa9fee7a6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fa9fed70c60"/></to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa9fed70c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa9fee7b590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fa9fed72c60"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa9fed72c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa9fee7be00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fa9fed71480"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa9fed71480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9fee79020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9fed72480"/></to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9fed72480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa9fee798b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fa9fed91c20"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa9fed91c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fa9fee6c9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa9fed9f020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa9ff51e080"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fa9fedf23b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa9feda1cf0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fa9fedf16e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7faa00013500"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa9fed9a0b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9fed85620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa9fed90940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9fed88620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa9fed7b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa9fed83840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa9fed8ecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa9fed77060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9fed73c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa9fed87620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa9fed86620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa9fed7d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa9fed7f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa9fed81060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9fed912b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff452670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9fed8c6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa9fed76480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa9fed8b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9fed8d9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa9fed78840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa9fed87e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9fed88e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa9fed902f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa9fed79840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa9fed7a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa9fed78060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa9fed70480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa9fed7e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa9fed7a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa9fed73480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa9fed80060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa9fed8ae00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa9fed86e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa9fed7d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa9fed81840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa9fed7b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa9fed84060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa9fed8e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa9fed8a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa9fed74c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa9fed74480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa9fed76c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa9fed71c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa9fed7e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa9fed79060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa9fed8e670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa9fed8d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa9fed80840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa9fed8a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa9fed7f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa9fed77840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa9fed6d160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fa9fed42920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fa9fed3e940"/></to>
    </wire>
    <wire loc="54:../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa9fed48990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fed3e080"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa9fed1de60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa9fed22020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa9fed1bae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa9fed1e690"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa9fed1e690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa9ff3d4280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa9fed1a8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa9fed44a20"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fed19170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee0b0c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa9fed02200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa9fecfe550"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa9fecfd3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa9fed02950"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fecfda70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee0b0c0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa9fecc4d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa9fecce6b0"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa9fecc3b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa9fecce020"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fecc22f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee0f660"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fecc1170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee0b0c0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa9fecc1b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa9fec74410"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fa9fec95db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fa9fec68800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa9fec63580"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa9fec63580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa9ff3d4280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9fec4f1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9ff678990"/></to>
    </wire>
    <wire loc="63:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa9fdc64b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa9fdc57e30"/></to>
    </wire>
    <wire loc="65:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa9feb17c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9fdc638b0"/></to>
    </wire>
    <wire loc="64:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa9fdc638b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9ff6ec630"/></to>
    </wire>
    <wire loc="66:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9feb168b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9fdc61590"/></to>
    </wire>
    <wire loc="65:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9fdc61590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9ff6d94e0"/></to>
    </wire>
    <wire loc="67:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa9feb14020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fa9fdc60c10"/></to>
    </wire>
    <wire loc="66:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa9fdc60c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9ff6d39f0"/></to>
    </wire>
    <wire loc="60:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa9fdc55ad0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9feb7b930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9fdc54720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9ff6d94e0"/></to>
    </wire>
    <wire loc="53:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa9feb7b930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9feb2d4b0"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa9feb2b400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa9ff6ee1d0"/></to>
    </wire>
    <wire loc="55:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9feb2a060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9ff6d94e0"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa9feb29720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9ff6ec630"/></to>
    </wire>
    <wire loc="169:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fa9feb28480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fa9feb28c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa9feb0a5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9ff6ec630"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9feb09270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9ff6d94e0"/></to>
    </wire>
    <wire loc="66:../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa9fe7215a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fa9fe74d720"/></to>
    </wire>
    <wire loc="67:../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa9fe71b020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa9fe755020"/></to>
    </wire>
    <wire loc="63:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa9fe755020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa9fdc03900"/></to>
    </wire>
    <wire loc="68:../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa9fe71bc70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9fe755c30"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa9fe755c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9feae5470"/></to>
    </wire>
    <wire loc="71:../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fa9fe6fd7d0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fa9fe71fc90"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa9feae5470"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9fea88d60"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9fe7538b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9feae4120"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9feae4120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9fea8a6c0"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa9fe751020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9feae3800"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9feae3800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9fea87a10"/></to>
    </wire>
    <wire loc="60:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa9fdc025f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9feaf4390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9fdc01270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9feae4120"/></to>
    </wire>
    <wire loc="54:../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa9feaf4390"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9feaf2dd0"/></to>
    </wire>
    <wire loc="55:../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa9feaf1be0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa9feae7b10"/></to>
    </wire>
    <wire loc="63:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa9feae7b10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa9feadf300"/></to>
    </wire>
    <wire loc="56:../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa9feaf08b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa9feae4120"/></to>
    </wire>
    <wire loc="57:../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa9feaed020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa9feae5470"/></to>
    </wire>
    <wire loc="169:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fa9feaedcb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fa9feaec500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa9feaeaa90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9fea83b90"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa9fea83b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9fea747c0"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa9feae6e40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9fea8a0d0"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa9fea83540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa9fea74170"/></to>
    </wire>
    <wire loc="60:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9fea7c2b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa9feae2300"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa9fea864a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9fea7f790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa9fea85120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9fea80c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fa9fea78970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7fa9fe76c8c0"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa9fea7f790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa9fe944de0"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa9fea80c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa9fe9446c0"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7fa9fe943c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fa9fea78970"/></to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9fea68020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa9fea7c2b0"/></to>
    </wire>
    <wire loc="71:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9fe941920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa9fea7c2b0"/></to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9fe938cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa9fea7c2b0"/></to>
    </wire>
    <wire loc="74:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fa9fe942590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fa9fea69c40"/></to>
    </wire>
    <wire loc="75:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fa9fe942e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fa9fea6d720"/></to>
    </wire>
    <wire loc="77:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fa9fea6c020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fa9fe93de00"/></to>
    </wire>
    <wire loc="78:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fa9fea62860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa9fe912080"/></to>
    </wire>
    <wire loc="17:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fa9fe912080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa9fe77f080"/></to>
    </wire>
    <wire loc="80:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fa9fe92fd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fa9fe912890"/></to>
    </wire>
    <wire loc="13:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fa9fe912890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fa9fe785440"/></to>
    </wire>
    <wire loc="332:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fa9fea0e6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fa9fea454f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fa9fea11c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fa9fea0aa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7fa9fe93f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7fa9fe93f800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fa9fe910020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fa9fe784440"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fa9fe784440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fa9fe8fc020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fa9fe785440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fa9fe8fe860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa9fe783020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa9fe77f8e0"/></to>
    </wire>
    <wire loc="19:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fe77e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fe786020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fe786020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fe9017a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe786c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fdb475d0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fdb475d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe7c5510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa9fe8f9450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa9fe783020"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fdb417c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe900a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fa9fe8fb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fdb48880"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fdb48880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fe7c6280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa9fe8f81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9fdb41020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9fdb41020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa9fe7c7510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe900a30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe88ddc0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fa9fe8fc020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fa9fe88b890"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fa9fe8fe860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fa9fe88c6d0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fe9017a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fe88d020"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa9fe8893e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa9fe8f9450"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fa9fe88a5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fa9fe8fb1d0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa9fe8845b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa9fe8f81d0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fa9fe889a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9fe8774d0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9fe8774d0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fa9fe86fcc0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa9fe882020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa9fe7e0080"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa9fe7e0080"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa9fff18b70"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa9fe880120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9fe872080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa9fe86a910"/></to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa9fe87ab70"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa9fe86f410"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fa9fe869210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7faa001ed580"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fa9fe8671f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7faa001eb580"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fa9fe8651f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7faa001e9580"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fa9fe8621f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7faa001e5580"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fa9fe8601f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7faa001e7580"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9fdb465a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9fe8774d0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fdb47d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe7c5d20"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe7c5d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe7ba060"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe7c4af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fdb417c0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe7c5510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe7bcbd0"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe7bcbd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fdad93a0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fa9fe7c7510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa9fe7c2230"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fe7c6280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fe7bde30"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa9fe7bde30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa9fdada540"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe7ba060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fdad78b0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fa9fe7c02f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9fe872080"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe7ba930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe7c4af0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe7bf120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe7ba060"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fe7a09d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fe7bb400"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fe7bb400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fdad9b20"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa9fe7b4b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa9fe87ab70"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fdad6210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe7ba930"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa9fdad69d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa9fdadc330"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa9fdad4c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa9fdaa43a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa9fe7b4b20"/></to>
    </wire>
    <wire loc="82:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa9fdaa4b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa9fe7a0400"/></to>
    </wire>
    <wire loc="84:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fdaa20f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fe7a09d0"/></to>
    </wire>
    <wire loc="85:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fdaa2d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe79f720"/></to>
    </wire>
    <wire loc="114:../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7fa9fe714020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fa9fe6f7170"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fa9fe6fd7d0"/></to>
    </wire>
    <wire loc="44:../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fa9fe6ef220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7faa00478dc0"/></to>
    </wire>
    <wire loc="47:../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fa9fe6ef940"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa9feaeaa90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="DemoP" loc="6:DemoP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.Timer_tem" loc="44(DemoAppC.Timer_tem):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <value cst="I:9">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.Timer_lig" loc="44(DemoAppC.Timer_lig):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.Timer_hum" loc="44(DemoAppC.Timer_hum):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.TempAndHumid" loc="45(DemoAppC.TempAndHumid):../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.TempAndHumid.SensirionSht11ReaderP" loc="45(DemoAppC.TempAndHumid.SensirionSht11ReaderP):../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.LightSensor" loc="40(DemoAppC.LightSensor):../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.LightSensor.AdcReadClientC" loc="47(DemoAppC.LightSensor.AdcReadClientC):../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient" loc="43(DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient):../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.LightSensor.AdcReadStreamClientC" loc="47(DemoAppC.LightSensor.AdcReadStreamClientC):../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient" loc="43(DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient):../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../tos/system/StateImplC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f09e0"/>
            <typename><typedef-ref name="TMicro" ref="0x7faa004f0d50"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f09e0"/>
            <typename><typedef-ref name="TMicro" ref="0x7faa004f0d50"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../tos/system/RandomC.nc">
      <documentation loc="33:../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DemoAppC.AMSenderC" loc="47(DemoAppC.AMSenderC):../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:150">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.AMSenderC.SenderC" loc="47(DemoAppC.AMSenderC.SenderC):../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(DemoAppC.AMSenderC.SenderC.AMQueueEntryP):../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.AMReceiverC" loc="43(DemoAppC.AMReceiverC):../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:150">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../tos/system/QueueC.nc">
      <documentation loc="33:../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:../../tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7faa003c3230" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7faa003c35d0" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7faa003c3980" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7faa003c3d00" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7faa003c20d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7faa003c2440" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7faa003c27d0" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7faa003c2b60" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7faa003c1020" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7faa00385950" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7faa00385d20" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7faa001c89f0" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7faa001c8da0" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7faa001c71a0" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7faa001c7550" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7faa001c78c0" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fa9fff4f3b0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fa9fff4f3b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fa9fff12c70" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fa9fff12c70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fa9ffefc570" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fa9ffefc570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fa9ffefcd40" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fa9ffefcd40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fa9ffefb160" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fa9ffefb160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fa9ffefb940" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fa9ffefb940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fa9ffefbd10" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fa9ffefa540" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fa9ffefa540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fa9ffedb6d0" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fa9ffedb6d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fa9ffed8020" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fa9ffed8020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fa9ffed8410" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fa9ffed8410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fa9ffed8bf0" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fa9ffed8bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fa9ffed7020" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa9ffe9ccc0" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa9ffe9ccc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa9ffe67230" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa9ffe67230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fa9ffe67560" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa9ffe18dd0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa9ffe18dd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fa9ffbc97d0" loc="89:../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fa9ffbb72f0" loc="42:../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fa9ffb9ed80" loc="52:../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fa9ff923850" loc="83:../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fa9ff91a3b0" loc="42:../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7fa9ff749660" loc="23:../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7fa9ff7499b0" loc="23:../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa9ff7499b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa9fefc4020" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa9fefc4020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa9fefc47b0" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa9fefc47b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fa9feb9f6b0" loc="47:../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fa9feb963a0" loc="47:../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fa9feb8f0d0" loc="43:../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fa9feb76c80" loc="45:../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fa9feb126e0" loc="43:../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fa9feb035e0" loc="47:../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7fa9fe74f490" loc="42:../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fa9fe74f490"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7fa9fe74f810" loc="42:../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Timer_tem" ref="0x7faa004d7810" loc="13:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer_tem" scoped="" ref="0x7faa004d7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa004d5cf0"/>
        <function-ref name="fired" scoped="" ref="0x7faa004d6300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa004d50d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa004d6c00"/>
        <function-ref name="getdt" scoped="" ref="0x7faa004d4660"/>
        <function-ref name="gett0" scoped="" ref="0x7faa004d41e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa004d6780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa004ec480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa004d56e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa004ec950"/>
        <function-ref name="stop" scoped="" ref="0x7faa004ece20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7faa004ee020" loc="9:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7faa004ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7faa004ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7faa004b54b0" loc="23:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7faa004b54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa004b5830"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faa004b59c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa004b5b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa004b5ce0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faa004b5e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7faa004a7c00" loc="25:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7faa004a7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faa004b4020"/>
        <function-ref name="stopDone" scoped="" ref="0x7faa004b41b0"/>
        <function-ref name="start" scoped="" ref="0x7faa004b4340"/>
        <function-ref name="stop" scoped="" ref="0x7faa004b44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer_lig" ref="0x7faa004d4cb0" loc="14:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer_lig" scoped="" ref="0x7faa004d4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa004cf220"/>
        <function-ref name="fired" scoped="" ref="0x7faa004d17c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa004d0590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa004d0110"/>
        <function-ref name="getdt" scoped="" ref="0x7faa004cfb20"/>
        <function-ref name="gett0" scoped="" ref="0x7faa004cf6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa004d1c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa004d2940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa004d0ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa004d2e10"/>
        <function-ref name="stop" scoped="" ref="0x7faa004d1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMSend" ref="0x7faa004abbe0" loc="24:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAMSend" scoped="" ref="0x7faa004abbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa004be020"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa004be1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa004be340"/>
        <function-ref name="cancel" scoped="" ref="0x7faa004be4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa004be660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendPacket" ref="0x7faa004a3410" loc="37:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendPacket" scoped="" ref="0x7faa004a3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa004a3890"/>
        <function-ref name="runTask" scoped="" ref="0x7faa004a3a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7faa004a15b0" loc="26:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7faa004a15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faa004a1930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer_hum" ref="0x7faa004cd1b0" loc="15:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer_hum" scoped="" ref="0x7faa004cd1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa004ca630"/>
        <function-ref name="fired" scoped="" ref="0x7faa004ccbf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa004cb990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa004cb510"/>
        <function-ref name="getdt" scoped="" ref="0x7faa004c8020"/>
        <function-ref name="gett0" scoped="" ref="0x7faa004caab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa004cb090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa004cdda0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa004ca020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa004cc2a0"/>
        <function-ref name="stop" scoped="" ref="0x7faa004cc770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LigRead" ref="0x7faa004c6110" loc="19:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LigRead" scoped="" ref="0x7faa004c6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faa004c6d00"/>
        <function-ref name="readDone" scoped="" ref="0x7faa004c21e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faa004e1330" loc="10:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa004e1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa004e16b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa004e1840"/>
        <function-ref name="led1On" scoped="" ref="0x7faa004e19d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa004e1b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa004e1cf0"/>
        <function-ref name="get" scoped="" ref="0x7faa004e1e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa004ed030"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa004ed670"/>
        <function-ref name="set" scoped="" ref="0x7faa004ed1c0"/>
        <function-ref name="led0On" scoped="" ref="0x7faa004ed350"/>
        <function-ref name="led2On" scoped="" ref="0x7faa004ed4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumRead" ref="0x7faa004c29a0" loc="20:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumRead" scoped="" ref="0x7faa004c29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faa004c15c0"/>
        <function-ref name="readDone" scoped="" ref="0x7faa004c1a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TemRead" ref="0x7faa004c4840" loc="18:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemRead" scoped="" ref="0x7faa004c4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faa004c7480"/>
        <function-ref name="readDone" scoped="" ref="0x7faa004c7900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7faa00471320" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7faa00471320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa004716a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7faa00478dc0" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7faa00478dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7faa00475180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa004701e0" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa004701e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa00470560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7faa0046c1f0" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7faa0046c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa0046c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa0046d3c0" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa0046d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa0046d740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7faa0046dad0" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7faa0046dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa0046de50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7faa0046c8d0" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7faa0046c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa0046cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa00466510" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa00466510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa00466890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7faa0046f900" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7faa0046f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa0046fc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7faa00444130" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7faa00444130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7faa0044a020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7faa00444640"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7faa004447d0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7faa00444960"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7faa004444b0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7faa00444af0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7faa00444c80"/>
        <function-ref name="initClocks" scoped="" ref="0x7faa00444e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa0044ea40" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa0044ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa0044edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7faa00434020" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7faa00434020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7faa00433020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7faa00434530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7faa004346c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7faa00434850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7faa004343a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7faa004349e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7faa00434b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7faa00434d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7faa00433360" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7faa00433360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7faa004336e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa004367e0" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa004367e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa00436b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7faa003f05a0" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7faa003f05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003f0920"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003f0ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003f0c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003f0dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003ef020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003ef1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003ef340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003ef4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003ef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7faa003de020" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7faa003de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003de3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003de530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003de6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003de850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003de9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003deb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003ded00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003dd020"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7faa003e7700" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7faa003e7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003e7a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa003e7c10"/>
        <function-ref name="captured" scoped="" ref="0x7faa003e7da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003e6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003e61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa003e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7faa003cba20" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7faa003cba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003cbda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa003ca020"/>
        <function-ref name="captured" scoped="" ref="0x7faa003ca1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003ca340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003ca4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa003ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7faa003eeaa0" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7faa003eeaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003eee20"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa003ed020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003ed1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa003ed340"/>
        <function-ref name="fired" scoped="" ref="0x7faa003ed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7faa003d2020" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7faa003d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003d23a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa003d2530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003d26c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa003d2850"/>
        <function-ref name="fired" scoped="" ref="0x7faa003d29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7faa003c8a20" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7faa003c8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003c8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa003c7020"/>
        <function-ref name="captured" scoped="" ref="0x7faa003c71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003c7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003c74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa003c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7faa003d95a0" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7faa003d95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003d9920"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003d9ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003d9c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003d9dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003d8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003d81b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003d8340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003d84d0"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7faa003f1b10" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7faa003f1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003f9020"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003f91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003f9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003f94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003f9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003f97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003f9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003f9b10"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003f9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7faa003cea20" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7faa003cea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003ceda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa003cc020"/>
        <function-ref name="captured" scoped="" ref="0x7faa003cc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003cc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003cc4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa003cc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7faa003d43e0" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7faa003d43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003d4760"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa003d48f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003d4a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa003d4c10"/>
        <function-ref name="fired" scoped="" ref="0x7faa003d4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7faa003dd5a0" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7faa003dd5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003dda20"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003ddbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003ddd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003dc020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003dc1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003dc340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003dc4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003dc660"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7faa003e6700" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7faa003e6700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003e6a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa003e6c10"/>
        <function-ref name="captured" scoped="" ref="0x7faa003e6da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003e0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003e01b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa003e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7faa003caa20" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7faa003caa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003cada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa003c9020"/>
        <function-ref name="captured" scoped="" ref="0x7faa003c91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003c9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003c94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa003c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7faa003dcbe0" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7faa003dcbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003db020"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003db1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003db340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003db4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003db660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003db7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003db980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003dbb10"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003dbca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7faa003ed890" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7faa003ed890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003edc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa003edda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003e8020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa003e81b0"/>
        <function-ref name="fired" scoped="" ref="0x7faa003e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7faa00401060" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7faa00401060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa004013e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa00401570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa00401700"/>
        <function-ref name="get" scoped="" ref="0x7faa00401890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa00401a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa00401bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa00401d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa00400020"/>
        <function-ref name="overflow" scoped="" ref="0x7faa004001b0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa00400340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa004004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7faa003d2da0" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7faa003d2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003d1180"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa003d1310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003d14a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa003d1630"/>
        <function-ref name="fired" scoped="" ref="0x7faa003d17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7faa003f80c0" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7faa003f80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003f8440"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003f85d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003f8760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003f88f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003f8a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003f8c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003f8da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003f0020"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7faa003d8a50" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7faa003d8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003d8dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003d7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003d71b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003d7340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003d74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003d7660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003d77f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003d7980"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003d7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7faa003e16d0" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7faa003e16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003e1a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa003e1be0"/>
        <function-ref name="captured" scoped="" ref="0x7faa003e1d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003e7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003e71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa003e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7faa003cca20" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7faa003cca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003ccda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa003cb020"/>
        <function-ref name="captured" scoped="" ref="0x7faa003cb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003cb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003cb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa003cb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7faa003eacf0" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7faa003eacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003ee0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa003ee230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003ee3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa003ee550"/>
        <function-ref name="fired" scoped="" ref="0x7faa003ee6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7faa003d31f0" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7faa003d31f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003d3570"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa003d3700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003d3890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa003d3a20"/>
        <function-ref name="fired" scoped="" ref="0x7faa003d3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7faa003c9a20" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7faa003c9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003c9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa003c8020"/>
        <function-ref name="captured" scoped="" ref="0x7faa003c81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003c8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003c84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa003c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7faa003da0c0" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7faa003da0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003da440"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003da5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003da760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003da8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003daa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003dac10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003dada0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003d9020"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7faa003e06c0" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7faa003e06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa003e0a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa003e0bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003e0d60"/>
        <function-ref name="get" scoped="" ref="0x7faa003df020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003df1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003df340"/>
        <function-ref name="getMode" scoped="" ref="0x7faa003df4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003df660"/>
        <function-ref name="overflow" scoped="" ref="0x7faa003df7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa003df980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa003dfb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7faa003d1b80" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7faa003d1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003d0020"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa003d01b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003d0340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa003d04d0"/>
        <function-ref name="fired" scoped="" ref="0x7faa003d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7faa003cfa20" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7faa003cfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003cfda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa003ce020"/>
        <function-ref name="captured" scoped="" ref="0x7faa003ce1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003ce340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003ce4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa003ce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7faa003d0a20" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7faa003d0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003cf020"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa003cf1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003cf340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa003cf4d0"/>
        <function-ref name="fired" scoped="" ref="0x7faa003cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7faa003d5570" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7faa003d5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003d58f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa003d5a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003d5c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa003d5da0"/>
        <function-ref name="fired" scoped="" ref="0x7faa003d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7faa003d6020" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7faa003d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003d63a0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003d6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003d66c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003d6850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003d69e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003d6b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003d6d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003d5020"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7faa0038f2f0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7faa0038f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa0038f670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7faa00390c20" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7faa00390c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa0038f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7faa0038f940" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7faa0038f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa0038fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7faa003905b0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa003905b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa00390950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faa00392c80" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa00392c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa003910a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa00391230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003913c0"/>
        <function-ref name="get" scoped="" ref="0x7faa00391550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003916e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa00391870"/>
        <function-ref name="getMode" scoped="" ref="0x7faa00391a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa00391b90"/>
        <function-ref name="overflow" scoped="" ref="0x7faa00391d20"/>
        <function-ref name="setMode" scoped="" ref="0x7faa00390020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa003901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7faa003882f0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7faa003882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa00388670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7faa00389c20" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7faa00389c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa00388020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7faa00388940" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7faa00388940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa00388cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7faa003895b0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa003895b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa00389950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faa0038bc80" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa0038bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa0038a0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa0038a230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa0038a3c0"/>
        <function-ref name="get" scoped="" ref="0x7faa0038a550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa0038a6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa0038a870"/>
        <function-ref name="getMode" scoped="" ref="0x7faa0038aa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa0038ab90"/>
        <function-ref name="overflow" scoped="" ref="0x7faa0038ad20"/>
        <function-ref name="setMode" scoped="" ref="0x7faa00389020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa003891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa0033ca90" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa0033ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa0033ce10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa0033b020"/>
        <function-ref name="captured" scoped="" ref="0x7faa0033b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa0033b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa0033b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa0033b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa003839d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa003839d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa00383d50"/>
        <function-ref name="getControl" scoped="" ref="0x7faa0033d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa0033d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa0033d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa0033d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa0033d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa0033d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa0033d980"/>
        <function-ref name="setControl" scoped="" ref="0x7faa0033db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa00338020" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa00338020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa003383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa0033dde0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa0033dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa0033c180"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa0033c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa0033c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa0033c630"/>
        <function-ref name="fired" scoped="" ref="0x7faa0033c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa0033b930" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa0033b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa0033bcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa0033be40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa00339020"/>
        <function-ref name="get" scoped="" ref="0x7faa003391b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa00339340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003394d0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa00339660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003397f0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa00339980"/>
        <function-ref name="setMode" scoped="" ref="0x7faa00339b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa00339ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa00333160" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa00333160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003334e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa00333670"/>
        <function-ref name="captured" scoped="" ref="0x7faa00333800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa00333990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa00333b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa00333cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa00335020" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa00335020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003353a0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa00335530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003356c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa00335850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003359e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa00335b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa00335d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa00334020"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa003317a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa003317a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa00331b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa00334480" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa00334480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa00334800"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa00334990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa00334b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa00334cb0"/>
        <function-ref name="fired" scoped="" ref="0x7faa00334e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa00332020" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa00332020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa003323a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa00332530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003326c0"/>
        <function-ref name="get" scoped="" ref="0x7faa00332850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003329e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa00332b70"/>
        <function-ref name="getMode" scoped="" ref="0x7faa00332d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa00331020"/>
        <function-ref name="overflow" scoped="" ref="0x7faa003311b0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa00331340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa003314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa0032c7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa0032c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa0032cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa0032ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7faa0032ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa0032b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa0032b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa0032b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa0032e6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa0032e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa0032ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7faa0032ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa0032ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa0032d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa0032d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa0032d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa0032d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa0032d660"/>
        <function-ref name="setControl" scoped="" ref="0x7faa0032d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa0032ac50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa0032ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa00328020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa0032dac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa0032dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa0032de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa0032c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa0032c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa0032c340"/>
        <function-ref name="fired" scoped="" ref="0x7faa0032c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa0032b610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa0032b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa0032b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa0032bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa0032bcb0"/>
        <function-ref name="get" scoped="" ref="0x7faa0032be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa0032a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa0032a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa0032a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa0032a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa0032a660"/>
        <function-ref name="setMode" scoped="" ref="0x7faa0032a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa0032a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa00324cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa00324cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003230a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa00323230"/>
        <function-ref name="captured" scoped="" ref="0x7faa003233c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa00323550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003236e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa00323870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa00326b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa00326b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa00325020"/>
        <function-ref name="getControl" scoped="" ref="0x7faa003251b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa00325340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa003254d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa00325660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa003257f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa00325980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa00325b10"/>
        <function-ref name="setControl" scoped="" ref="0x7faa00325ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa003212f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa003212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa00321670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa00324020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa00324020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa003243a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa00324530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003246c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa00324850"/>
        <function-ref name="fired" scoped="" ref="0x7faa003249e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa00323b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa00323b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa00322020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa003221b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa00322340"/>
        <function-ref name="get" scoped="" ref="0x7faa003224d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa00322660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003227f0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa00322980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa00322b10"/>
        <function-ref name="overflow" scoped="" ref="0x7faa00322ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa00322e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa00321020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa0031c2f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa0031c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa0031c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa0031c800"/>
        <function-ref name="captured" scoped="" ref="0x7faa0031c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa0031cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa0031ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa0031ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa0031e220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa0031e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa0031e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa0031e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa0031e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa0031ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa0031ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa0031ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa0031d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa0031d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7faa0031d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa0031a7a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa0031a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa0031ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa0031d610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa0031d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa0031d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa0031db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa0031dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa0031de40"/>
        <function-ref name="fired" scoped="" ref="0x7faa0031c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa0031b160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa0031b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa0031b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa0031b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa0031b800"/>
        <function-ref name="get" scoped="" ref="0x7faa0031b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa0031bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa0031bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa0031be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa0031a020"/>
        <function-ref name="overflow" scoped="" ref="0x7faa0031a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa0031a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa0031a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa003147a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa003147a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa00314b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa00314cb0"/>
        <function-ref name="captured" scoped="" ref="0x7faa00314e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa00313020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003131b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa00313340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa003166d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa003166d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa00316a50"/>
        <function-ref name="getControl" scoped="" ref="0x7faa00316be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa00316d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa00315020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa003151b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa00315340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa003154d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa00315660"/>
        <function-ref name="setControl" scoped="" ref="0x7faa003157f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa00312c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa00312c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa00311020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa00315ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa00315ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa00315e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa00314020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa003141b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa00314340"/>
        <function-ref name="fired" scoped="" ref="0x7faa003144d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa00313610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa00313610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa00313990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa00313b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa00313cb0"/>
        <function-ref name="get" scoped="" ref="0x7faa00313e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa00312020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa003121b0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa00312340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa003124d0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa00312660"/>
        <function-ref name="setMode" scoped="" ref="0x7faa003127f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa00312980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa0030dcb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa0030dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa0030c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa0030c230"/>
        <function-ref name="captured" scoped="" ref="0x7faa0030c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa0030c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa0030c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa0030c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa0030fb30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa0030fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa0030e020"/>
        <function-ref name="getControl" scoped="" ref="0x7faa0030e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa0030e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa0030e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa0030e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa0030e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa0030e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa0030eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7faa0030eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa0030a2f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa0030a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa0030a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa0030d020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa0030d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa0030d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa0030d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa0030d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa0030d850"/>
        <function-ref name="fired" scoped="" ref="0x7faa0030d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa0030cb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa0030cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa0030b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa0030b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa0030b340"/>
        <function-ref name="get" scoped="" ref="0x7faa0030b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa0030b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa0030b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa0030b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa0030bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7faa0030bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa0030be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa0030a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa003042f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa003042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa00304670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa00304800"/>
        <function-ref name="captured" scoped="" ref="0x7faa00304990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa00304b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa00304cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa00304e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa00306220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa00306220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa003065a0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa00306730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa003068c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa00306a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa00306be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa00306d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa00305020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa003051b0"/>
        <function-ref name="setControl" scoped="" ref="0x7faa00305340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa003027a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa003027a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa00302b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa00305610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa00305610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa00305990"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa00305b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa00305cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa00305e40"/>
        <function-ref name="fired" scoped="" ref="0x7faa00304020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa00303160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa00303160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa003034e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa00303670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa00303800"/>
        <function-ref name="get" scoped="" ref="0x7faa00303990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa00303b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa00303cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa00303e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa00302020"/>
        <function-ref name="overflow" scoped="" ref="0x7faa003021b0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa00302340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa003024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa002fd7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa002fd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa002fdb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa002fdcb0"/>
        <function-ref name="captured" scoped="" ref="0x7faa002fde40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa002fc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa002fc1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa002fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa002ff6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa002ff6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa002ffa50"/>
        <function-ref name="getControl" scoped="" ref="0x7faa002ffbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa002ffd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa002fe020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa002fe1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa002fe340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa002fe4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa002fe660"/>
        <function-ref name="setControl" scoped="" ref="0x7faa002fe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa002fbc50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa002fbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa002fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa002feac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa002feac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa002fee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa002fd020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa002fd1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa002fd340"/>
        <function-ref name="fired" scoped="" ref="0x7faa002fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa002fc610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa002fc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa002fc990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa002fcb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa002fccb0"/>
        <function-ref name="get" scoped="" ref="0x7faa002fce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa002fb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa002fb1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa002fb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa002fb4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa002fb660"/>
        <function-ref name="setMode" scoped="" ref="0x7faa002fb7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa002fb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa002f5cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa002f5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa002f40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa002f4230"/>
        <function-ref name="captured" scoped="" ref="0x7faa002f43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa002f4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa002f46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa002f4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa002f8b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa002f8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa002f6020"/>
        <function-ref name="getControl" scoped="" ref="0x7faa002f61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa002f6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa002f64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa002f6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa002f67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa002f6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa002f6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7faa002f6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa002f22f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa002f22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa002f2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa002f5020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa002f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa002f53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa002f5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa002f56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa002f5850"/>
        <function-ref name="fired" scoped="" ref="0x7faa002f59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa002f4b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa002f4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa002f3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa002f31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa002f3340"/>
        <function-ref name="get" scoped="" ref="0x7faa002f34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa002f3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa002f37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa002f3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa002f3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7faa002f3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa002f3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa002f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7faa002eb240" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7faa002eb240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa002eb5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7faa002f0a90" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7faa002f0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa002f0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7faa002ec260" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7faa002ec260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa002ec5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7faa002ec9f0" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7faa002ec9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa002ecd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7faa006674c0" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7faa006674c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7faa00667840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7faa0097b3b0" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7faa0097b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7faa0097b730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7faa0097b8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7faa0097ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7faa007a3bc0" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7faa007a3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7faa008df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7faa0044cb40" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7faa0044cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7faa002b4b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7faa002b41b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7faa002b4340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7faa002b44d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7faa002b4020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7faa002b4660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7faa002b47f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7faa002b4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7faa002a8dc0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7faa002a8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa002a7180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7faa002b5590" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7faa002b5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7faa002b5910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7faa002a86c0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7faa002a86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa002a8a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7faa002b5c00" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7faa002b5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa002a8020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7faa002a81b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7faa002a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7faa00a53410" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7faa00a53410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa00a53790"/>
        <function-ref name="runTask" scoped="" ref="0x7faa00a53920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7faa009e43a0" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7faa009e43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa009e4720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7faa009e48b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7faa009e4a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7faa0058d040" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7faa0058d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa0058d3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7faa0058d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7faa00589490" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7faa00589490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7faa00589810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7faa005899a0"/>
        <function-ref name="sleep" scoped="" ref="0x7faa00589b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7faa0058f140" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7faa0058f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa0058f4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7faa0058f650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7faa0058f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7faa00476590" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa00476590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa00476910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa00476aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7faa00476c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa00476dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa0029c020"/>
        <function-ref name="get" scoped="" ref="0x7faa0029c1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa0029c340"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa0029c980"/>
        <function-ref name="set" scoped="" ref="0x7faa0029c4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7faa0029c660"/>
        <function-ref name="led2On" scoped="" ref="0x7faa0029c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7faa002907b0" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7faa002907b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00290b30"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00290cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00290e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00296020"/>
        <function-ref name="get" scoped="" ref="0x7faa002961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00296340"/>
        <function-ref name="set" scoped="" ref="0x7faa002964d0"/>
        <function-ref name="clr" scoped="" ref="0x7faa00296660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa0029b8d0" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa0029b8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa0029bc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7faa00296980" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7faa00296980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00296d00"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00295020"/>
        <function-ref name="toggle" scoped="" ref="0x7faa002951b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00295340"/>
        <function-ref name="get" scoped="" ref="0x7faa002954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00295660"/>
        <function-ref name="set" scoped="" ref="0x7faa002957f0"/>
        <function-ref name="clr" scoped="" ref="0x7faa00295980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7faa00298020" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa00298020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa002983a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa00298530"/>
        <function-ref name="led1On" scoped="" ref="0x7faa002986c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa00298850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa002989e0"/>
        <function-ref name="get" scoped="" ref="0x7faa00298b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa00298d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa002974d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00297020"/>
        <function-ref name="led0On" scoped="" ref="0x7faa002971b0"/>
        <function-ref name="led2On" scoped="" ref="0x7faa00297340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7faa00295ca0" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7faa00295ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0028f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0028f230"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0028f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0028f550"/>
        <function-ref name="get" scoped="" ref="0x7faa0028f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0028f870"/>
        <function-ref name="set" scoped="" ref="0x7faa0028fa00"/>
        <function-ref name="clr" scoped="" ref="0x7faa0028fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7faa00273360" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7faa00273360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002736e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00273870"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00273a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00273b90"/>
        <function-ref name="get" scoped="" ref="0x7faa00273d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00272020"/>
        <function-ref name="set" scoped="" ref="0x7faa002721b0"/>
        <function-ref name="clr" scoped="" ref="0x7faa00272340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7faa002726a0" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7faa002726a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00272a20"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00272bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00272d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00271020"/>
        <function-ref name="get" scoped="" ref="0x7faa002711b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00271340"/>
        <function-ref name="set" scoped="" ref="0x7faa002714d0"/>
        <function-ref name="clr" scoped="" ref="0x7faa00271660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7faa00270c40" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa00270c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa0026f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7faa002719c0" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7faa002719c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00271d40"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00270020"/>
        <function-ref name="toggle" scoped="" ref="0x7faa002701b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00270340"/>
        <function-ref name="get" scoped="" ref="0x7faa002704d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00270660"/>
        <function-ref name="set" scoped="" ref="0x7faa002707f0"/>
        <function-ref name="clr" scoped="" ref="0x7faa00270980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7faa0025a020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7faa0025a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0025a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0025a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0025a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0025a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0025a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0025ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0025ad00"/>
        <function-ref name="get" scoped="" ref="0x7faa00259020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00259340"/>
        <function-ref name="set" scoped="" ref="0x7faa002594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00259660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00259a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00259c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7faa00245020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7faa00245020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002453a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00245530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002456c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00245850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002459e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00245b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00245d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00244020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00244340"/>
        <function-ref name="set" scoped="" ref="0x7faa002444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00244660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00244a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00244c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7faa001fc560" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7faa001fc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001fc8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001fca70"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001fcc00"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001fcd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001fb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001fb340"/>
        <function-ref name="get" scoped="" ref="0x7faa001fb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001fb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001fb7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001fb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001fbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001fbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001fa020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7faa001d7570" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7faa001d7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001d78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001d7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001d7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001d7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001d6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001d6340"/>
        <function-ref name="get" scoped="" ref="0x7faa001d64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001d6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001d67f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001d6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001d6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001d6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001d5020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7faa001fa580" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7faa001fa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001fa900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001faa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001fac20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001fadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001f9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001f91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001f9340"/>
        <function-ref name="get" scoped="" ref="0x7faa001f94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001f9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001f97f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001f9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001f9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001f9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001f8020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7faa00241020" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7faa00241020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00241530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002416c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00241850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002419e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00241b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00241d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00240020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00240340"/>
        <function-ref name="set" scoped="" ref="0x7faa002404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00240660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00240a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00240c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7faa0022d200" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7faa0022d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0022d580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0022d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0022d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0022da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0022dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0022dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0022c020"/>
        <function-ref name="get" scoped="" ref="0x7faa0022c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0022c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0022c4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa0022c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0022c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0022c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0022cc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa0022cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7faa00218200" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7faa00218200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00218580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00218710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002188a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00218a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00218bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00218d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00217020"/>
        <function-ref name="get" scoped="" ref="0x7faa002171b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00217340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002174d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00217660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002177f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00217980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00217c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00217da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7faa00208200" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7faa00208200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00208580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00208710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002088a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00208a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00208bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00208d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00207020"/>
        <function-ref name="get" scoped="" ref="0x7faa002071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00207340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002074d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00207660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002077f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00207980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00207c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00207da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7faa001f4580" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7faa001f4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001f4900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001f4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001f4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001f4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001f2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001f21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001f2340"/>
        <function-ref name="get" scoped="" ref="0x7faa001f24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001f2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001f27f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001f2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001f2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001f2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001f1020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7faa001e3570" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7faa001e3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001e38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001e3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001e3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001e3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001e2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001e21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001e2340"/>
        <function-ref name="get" scoped="" ref="0x7faa001e24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001e2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001e27f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001e2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001e2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001e2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001e1020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7faa001cf580" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7faa001cf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001cf900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001cfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001cfc20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001cfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001ce020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001ce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001ce340"/>
        <function-ref name="get" scoped="" ref="0x7faa001ce4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001ce660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001ce7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001ce980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001ceb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001ceca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001cd020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7faa00254020" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7faa00254020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00254530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002546c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00254850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002549e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00254b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00254d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00253020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00253340"/>
        <function-ref name="set" scoped="" ref="0x7faa002534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00253660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00253a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00253c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7faa001f1580" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7faa001f1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001f1900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001f1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001f1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001f1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001f0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001f0340"/>
        <function-ref name="get" scoped="" ref="0x7faa001f04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001f0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001f07f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001f0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001f0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001f0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001ef020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7faa0024f020" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7faa0024f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0024f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0024f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0024f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0024f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0024f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0024fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0024fd00"/>
        <function-ref name="get" scoped="" ref="0x7faa0024e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0024e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0024e340"/>
        <function-ref name="set" scoped="" ref="0x7faa0024e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0024e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0024e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0024ea80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0024ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7faa0023b020" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7faa0023b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0023b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0023b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0023b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0023b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0023b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0023bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0023bd00"/>
        <function-ref name="get" scoped="" ref="0x7faa0023a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0023a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0023a340"/>
        <function-ref name="set" scoped="" ref="0x7faa0023a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0023a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0023a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0023aa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0023ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7faa00227200" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7faa00227200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00227580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00227710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002278a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00227a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00227bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00227d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00226020"/>
        <function-ref name="get" scoped="" ref="0x7faa002261b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00226340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002264d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00226660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002267f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00226980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00226c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00226da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7faa00212200" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7faa00212200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00212580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00212710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002128a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00212a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00212bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00212d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00211020"/>
        <function-ref name="get" scoped="" ref="0x7faa002111b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00211340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002114d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00211660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002117f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00211980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00211c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00211da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7faa00202200" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7faa00202200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00202580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00202710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002028a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00202a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00202bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00202d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00201020"/>
        <function-ref name="get" scoped="" ref="0x7faa002011b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00201340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002014d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00201660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002017f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00201980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00201c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00201da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7faa0025e020" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7faa0025e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0025e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0025e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0025e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0025e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0025e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0025eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0025ed00"/>
        <function-ref name="get" scoped="" ref="0x7faa0025d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0025d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0025d340"/>
        <function-ref name="set" scoped="" ref="0x7faa0025d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0025d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0025d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0025da80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0025dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7faa00249020" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7faa00249020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002494a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00249630"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002497c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00249950"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00249ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00249c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00249e00"/>
        <function-ref name="get" scoped="" ref="0x7faa00248020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002481b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00248340"/>
        <function-ref name="set" scoped="" ref="0x7faa002484d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00248660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002487f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00248a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00248c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7faa00235020" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7faa00235020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002353a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00235530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002356c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00235850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002359e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00235b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00235d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00234020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002341b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00234340"/>
        <function-ref name="set" scoped="" ref="0x7faa002344d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00234660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002347f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00234a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00234c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7faa001fe580" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7faa001fe580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001fe900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001fea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001fec20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001fedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001fd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001fd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001fd340"/>
        <function-ref name="get" scoped="" ref="0x7faa001fd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001fd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001fd7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001fd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001fdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001fdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001fc020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7faa001dd570" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7faa001dd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001dd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001dda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001ddc10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001ddda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001dc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001dc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001dc340"/>
        <function-ref name="get" scoped="" ref="0x7faa001dc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001dc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001dc7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001dc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001dcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001dcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001db020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7faa001d1570" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7faa001d1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001d18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001d1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001d1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001d1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001d0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001d01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001d0340"/>
        <function-ref name="get" scoped="" ref="0x7faa001d04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001d0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001d07f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001d0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001d0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001d0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001cf020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7faa001e9580" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7faa001e9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001e9900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001e9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001e9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001e9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001e8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001e81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001e8340"/>
        <function-ref name="get" scoped="" ref="0x7faa001e84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001e8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001e87f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001e8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001e8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001e8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001e7020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7faa00231020" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7faa00231020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002315a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00231730"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002318c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00231a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00231be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00231d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00230020"/>
        <function-ref name="get" scoped="" ref="0x7faa002301b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00230340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002304d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00230660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002307f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00230980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00230c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00230da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7faa0021c200" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7faa0021c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0021c580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0021c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0021c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0021ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0021cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0021cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0021b020"/>
        <function-ref name="get" scoped="" ref="0x7faa0021b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0021b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0021b4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa0021b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0021b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0021b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0021bc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa0021bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7faa0020c200" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7faa0020c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0020c580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0020c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0020c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0020ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0020cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0020cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0020b020"/>
        <function-ref name="get" scoped="" ref="0x7faa0020b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0020b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0020b4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa0020b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0020b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0020b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0020bc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa0020bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7faa001db570" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7faa001db570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001db8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001dba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001dbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001dbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001da020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001da1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001da340"/>
        <function-ref name="get" scoped="" ref="0x7faa001da4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001da660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001da7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001da980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001dab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001daca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001d9020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7faa001ef570" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7faa001ef570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001ef8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001efa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001efc10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001efda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001ee340"/>
        <function-ref name="get" scoped="" ref="0x7faa001ee4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001ee660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001ee7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001ee980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001eeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001eeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001ed020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7faa00258020" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7faa00258020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00258530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002586c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00258850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002589e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00258b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00258d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00257020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002571b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00257340"/>
        <function-ref name="set" scoped="" ref="0x7faa002574d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00257660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002577f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00257a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00257c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7faa00243020" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7faa00243020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002433a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00243530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002436c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00243850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002439e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00243b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00243d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00242020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002421b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00242340"/>
        <function-ref name="set" scoped="" ref="0x7faa002424d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00242660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002427f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00242a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00242c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7faa00210200" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7faa00210200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00210580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00210710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002108a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00210a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00210bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00210d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0020f020"/>
        <function-ref name="get" scoped="" ref="0x7faa0020f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0020f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0020f4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa0020f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0020f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0020f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0020fc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa0020fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7faa0023f020" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7faa0023f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0023f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0023f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0023f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0023f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0023f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0023fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0023fd00"/>
        <function-ref name="get" scoped="" ref="0x7faa0023e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0023e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0023e340"/>
        <function-ref name="set" scoped="" ref="0x7faa0023e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0023e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0023e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0023ea80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0023ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7faa0022b200" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7faa0022b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0022b580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0022b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0022b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0022ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0022bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0022bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0022a020"/>
        <function-ref name="get" scoped="" ref="0x7faa0022a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0022a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0022a4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa0022a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0022a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0022a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0022ac10"/>
        <function-ref name="clr" scoped="" ref="0x7faa0022ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7faa00216200" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7faa00216200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00216580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00216710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002168a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00216a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00216bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00216d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00215020"/>
        <function-ref name="get" scoped="" ref="0x7faa002151b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00215340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002154d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00215660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002157f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00215980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00215c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00215da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7faa00206200" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7faa00206200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00206580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00206710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002068a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00206a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00206bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00206d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00205020"/>
        <function-ref name="get" scoped="" ref="0x7faa002051b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00205340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002054d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00205660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002057f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00205980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00205c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00205da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7faa001eb580" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7faa001eb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001eb900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001eba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001ebc20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001ebdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001ea020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001ea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001ea340"/>
        <function-ref name="get" scoped="" ref="0x7faa001ea4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001ea660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001ea7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001ea980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001eab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001eaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001e9020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7faa0026b020" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7faa0026b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0026b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0026b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0026b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0026b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0026b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0026bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0026bd00"/>
        <function-ref name="get" scoped="" ref="0x7faa0026a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0026a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0026a340"/>
        <function-ref name="set" scoped="" ref="0x7faa0026a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0026a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0026a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0026aa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0026ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7faa0024d020" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7faa0024d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0024d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0024d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0024d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0024d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0024d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0024db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0024dd00"/>
        <function-ref name="get" scoped="" ref="0x7faa0024c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0024c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0024c340"/>
        <function-ref name="set" scoped="" ref="0x7faa0024c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0024c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0024c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0024ca80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0024cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7faa00239020" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7faa00239020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002393a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00239530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002396c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00239850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002399e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00239b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00239d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00238020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00238340"/>
        <function-ref name="set" scoped="" ref="0x7faa002384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00238660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00238a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00238c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7faa00225200" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7faa00225200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00225580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00225710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002258a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00225a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00225bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00225d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00224020"/>
        <function-ref name="get" scoped="" ref="0x7faa002241b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00224340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002244d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00224660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002247f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00224980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00224c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00224da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7faa001e7580" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7faa001e7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001e7900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001e7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001e7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001e7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001e6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001e6340"/>
        <function-ref name="get" scoped="" ref="0x7faa001e64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001e6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001e67f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001e6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001e6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001e6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001e5020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7faa001e1570" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7faa001e1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001e18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001e1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001e1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001e1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001e0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001e01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001e0340"/>
        <function-ref name="get" scoped="" ref="0x7faa001e04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001e0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001e07f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001e0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001e0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001e0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001df020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7faa001d5570" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7faa001d5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001d58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001d5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001d5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001d5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001d4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001d41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001d4340"/>
        <function-ref name="get" scoped="" ref="0x7faa001d44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001d4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001d47f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001d4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001d4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001d4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001d3020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7faa00220200" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7faa00220200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00220580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00220710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002208a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00220a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00220bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00220d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0021f020"/>
        <function-ref name="get" scoped="" ref="0x7faa0021f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0021f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0021f4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa0021f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0021f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0021f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0021fc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa0021fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7faa001e5580" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7faa001e5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001e5900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001e5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001e5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001e5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001e4340"/>
        <function-ref name="get" scoped="" ref="0x7faa001e44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001e4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001e47f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001e4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001e4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001e4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001e3020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7faa0025c020" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7faa0025c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0025c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0025c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0025c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0025c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0025c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0025cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0025cd00"/>
        <function-ref name="get" scoped="" ref="0x7faa0025b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0025b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0025b340"/>
        <function-ref name="set" scoped="" ref="0x7faa0025b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0025b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0025b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0025ba80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0025bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7faa00247020" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7faa00247020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00247530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002476c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00247850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002479e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00247b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00247d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00246020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00246340"/>
        <function-ref name="set" scoped="" ref="0x7faa002464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00246660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00246a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00246c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7faa00233020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7faa00233020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00233530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002336c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00233850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00233b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00233d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00232020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00232340"/>
        <function-ref name="set" scoped="" ref="0x7faa002324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00232660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00232a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00232c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7faa001ed580" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7faa001ed580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001ed900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001eda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001edc20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001eddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001ec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001ec340"/>
        <function-ref name="get" scoped="" ref="0x7faa001ec4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001ec660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001ec7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001ec980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001ecb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001ecca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001eb020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7faa001d9570" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7faa001d9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001d98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001d9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001d9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001d9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001d8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001d81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001d8340"/>
        <function-ref name="get" scoped="" ref="0x7faa001d84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001d8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001d87f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001d8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001d8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001d8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001d7020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7faa0022f200" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7faa0022f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0022f580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0022f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0022f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0022fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0022fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0022fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0022e020"/>
        <function-ref name="get" scoped="" ref="0x7faa0022e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0022e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0022e4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa0022e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0022e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0022e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0022ec10"/>
        <function-ref name="clr" scoped="" ref="0x7faa0022eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7faa0021a200" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7faa0021a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0021a580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0021a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0021a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0021aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0021abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0021ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00219020"/>
        <function-ref name="get" scoped="" ref="0x7faa002191b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00219340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002194d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00219660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002197f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00219980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00219c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00219da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7faa0020a200" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7faa0020a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0020a580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0020a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0020a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0020aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0020abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0020ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00209020"/>
        <function-ref name="get" scoped="" ref="0x7faa002091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00209340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002094d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00209660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002097f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00209980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00209c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00209da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7faa00256020" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7faa00256020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002563a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00256530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002566c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00256850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002569e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00256b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00256d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00255020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00255340"/>
        <function-ref name="set" scoped="" ref="0x7faa002554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00255660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00255a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00255c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7faa0020e200" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7faa0020e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0020e580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0020e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0020e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0020ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0020ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0020ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0020d020"/>
        <function-ref name="get" scoped="" ref="0x7faa0020d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0020d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0020d4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa0020d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0020d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0020d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0020dc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa0020dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7faa00251020" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7faa00251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00251530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002516c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00251850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002519e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00251b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00251d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00250020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002501b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00250340"/>
        <function-ref name="set" scoped="" ref="0x7faa002504d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00250660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002507f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00250a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00250c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7faa0023d020" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7faa0023d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0023d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0023d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0023d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0023d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0023d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0023db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0023dd00"/>
        <function-ref name="get" scoped="" ref="0x7faa0023c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0023c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0023c340"/>
        <function-ref name="set" scoped="" ref="0x7faa0023c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0023c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0023c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0023ca80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0023cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7faa00229200" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7faa00229200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00229580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00229710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002298a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00229a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00229bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00229d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00228020"/>
        <function-ref name="get" scoped="" ref="0x7faa002281b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00228340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002284d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00228660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002287f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00228980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00228c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00228da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7faa00214200" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7faa00214200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00214580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00214710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00214a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00214bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00214d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00213020"/>
        <function-ref name="get" scoped="" ref="0x7faa002131b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00213340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002134d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00213660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002137f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00213980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00213c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00213da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7faa00204200" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7faa00204200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00204580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00204710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002048a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00204a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00204bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00204d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00203020"/>
        <function-ref name="get" scoped="" ref="0x7faa002031b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00203340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002034d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00203660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002037f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00203980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00203c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00203da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7faa00260020" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7faa00260020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002603a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00260530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002606c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00260850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002609e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00260b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00260d00"/>
        <function-ref name="get" scoped="" ref="0x7faa0025f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0025f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0025f340"/>
        <function-ref name="set" scoped="" ref="0x7faa0025f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0025f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0025f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0025fa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0025fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7faa0024b020" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7faa0024b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0024b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0024b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0024b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0024b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0024b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0024bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0024bd00"/>
        <function-ref name="get" scoped="" ref="0x7faa0024a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0024a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0024a340"/>
        <function-ref name="set" scoped="" ref="0x7faa0024a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0024a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0024a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0024aa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0024ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7faa00237020" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7faa00237020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa002373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00237530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002376c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00237850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa002379e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00237b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00237d00"/>
        <function-ref name="get" scoped="" ref="0x7faa00236020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa002361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00236340"/>
        <function-ref name="set" scoped="" ref="0x7faa002364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00236660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa002367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00236a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00236c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7faa00222200" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7faa00222200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00222580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00222710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa002228a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00222a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00222bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00222d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00221020"/>
        <function-ref name="get" scoped="" ref="0x7faa002211b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00221340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa002214d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00221660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa002217f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00221980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00221c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00221da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7faa001f6560" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7faa001f6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001f68e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001f6a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001f6c00"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001f6d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001f5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001f51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001f5340"/>
        <function-ref name="get" scoped="" ref="0x7faa001f54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001f5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001f57f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001f5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001f5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001f5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001f4020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7faa001df570" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7faa001df570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001df8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001dfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001dfc10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001dfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001de020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001de1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001de340"/>
        <function-ref name="get" scoped="" ref="0x7faa001de4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001de660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001de7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001de980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001deb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001deca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001dd020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7faa001f8580" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7faa001f8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001f8900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001f8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001f8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001f8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001f7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001f71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001f7340"/>
        <function-ref name="get" scoped="" ref="0x7faa001f74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001f7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001f77f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001f7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001f7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001f7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001f6020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001f61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7faa0021e200" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7faa0021e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0021e580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0021e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0021e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0021ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0021ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0021ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0021d020"/>
        <function-ref name="get" scoped="" ref="0x7faa0021d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0021d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0021d4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa0021d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0021d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0021d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0021dc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa0021dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7faa001d3570" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7faa001d3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001d38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001d3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001d3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001d3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001d2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001d21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001d2340"/>
        <function-ref name="get" scoped="" ref="0x7faa001d24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001d2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001d27f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001d2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001d2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001d2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001d1020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7faa001cd580" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7faa001cd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001cd900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001cda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001cdc20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001cddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001cc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001cc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001cc340"/>
        <function-ref name="get" scoped="" ref="0x7faa001cc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001cc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001cc7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001cc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001ccb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001ccca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001cb020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7faa002001f0" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7faa002001f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00200970"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00200b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00200c90"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00200e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001ff020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001ff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001ff340"/>
        <function-ref name="get" scoped="" ref="0x7faa001ff4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001ff660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001ff7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa001ff980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001ffb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001ffca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001fe020"/>
        <function-ref name="clr" scoped="" ref="0x7faa001fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa001a26d0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa001a26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001a2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faa001a2be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001a2d70"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001a01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001a0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001a04d0"/>
        <function-ref name="get" scoped="" ref="0x7faa001a0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001a07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001a0980"/>
        <function-ref name="set" scoped="" ref="0x7faa001a0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001a0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001a0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0019f120"/>
        <function-ref name="clr" scoped="" ref="0x7faa0019f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0019c100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0019c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0019c480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0019c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0019c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0019c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0019cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0019cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0019cde0"/>
        <function-ref name="get" scoped="" ref="0x7faa0019b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0019b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0019b340"/>
        <function-ref name="set" scoped="" ref="0x7faa0019b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0019b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0019b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0019ba80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0019bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00198d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00198d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001970e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00197270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00197400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00197590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00197720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001978b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00197a40"/>
        <function-ref name="get" scoped="" ref="0x7faa00197bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00197d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00196020"/>
        <function-ref name="set" scoped="" ref="0x7faa001961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00196340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00196760"/>
        <function-ref name="clr" scoped="" ref="0x7faa001968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00193740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00193740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00193ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00193c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00193de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00192020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001921b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00192340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001924d0"/>
        <function-ref name="get" scoped="" ref="0x7faa00192660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001927f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00192980"/>
        <function-ref name="set" scoped="" ref="0x7faa00192b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00192ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00192e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00191120"/>
        <function-ref name="clr" scoped="" ref="0x7faa001912b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0018e100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0018e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0018e480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0018e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0018e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0018e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0018eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0018ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0018ede0"/>
        <function-ref name="get" scoped="" ref="0x7faa0018d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0018d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0018d340"/>
        <function-ref name="set" scoped="" ref="0x7faa0018d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0018d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0018d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0018da80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0018dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0018ad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0018ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001890e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00189270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00189400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00189590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00189720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001898b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00189a40"/>
        <function-ref name="get" scoped="" ref="0x7faa00189bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00189d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00188020"/>
        <function-ref name="set" scoped="" ref="0x7faa001881b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00188340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001884d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00188760"/>
        <function-ref name="clr" scoped="" ref="0x7faa001888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00185740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00185740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00185ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00185c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00185de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00184020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001841b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00184340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001844d0"/>
        <function-ref name="get" scoped="" ref="0x7faa00184660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00184980"/>
        <function-ref name="set" scoped="" ref="0x7faa00184b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00184ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00184e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00183120"/>
        <function-ref name="clr" scoped="" ref="0x7faa001832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00180100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00180100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00180480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00180610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001807a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00180930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00180ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00180c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00180de0"/>
        <function-ref name="get" scoped="" ref="0x7faa0017f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0017f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0017f340"/>
        <function-ref name="set" scoped="" ref="0x7faa0017f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0017f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0017f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0017fa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0017fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0017bd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0017bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0017a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0017a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0017a400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0017a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0017a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0017a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0017aa40"/>
        <function-ref name="get" scoped="" ref="0x7faa0017abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0017ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00179020"/>
        <function-ref name="set" scoped="" ref="0x7faa001791b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00179340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001794d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00179760"/>
        <function-ref name="clr" scoped="" ref="0x7faa001798f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00176740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00176740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00176ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00176c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00176de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00175020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001751b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00175340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001754d0"/>
        <function-ref name="get" scoped="" ref="0x7faa00175660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001757f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00175980"/>
        <function-ref name="set" scoped="" ref="0x7faa00175b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00175ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00175e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00174120"/>
        <function-ref name="clr" scoped="" ref="0x7faa001742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00171100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00171100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00171480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00171610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001717a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00171930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00171ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00171c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00171de0"/>
        <function-ref name="get" scoped="" ref="0x7faa00170020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001701b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00170340"/>
        <function-ref name="set" scoped="" ref="0x7faa001704d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00170660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001707f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00170a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00170c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0016dd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0016dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0016c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0016c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0016c400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0016c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0016c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0016c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0016ca40"/>
        <function-ref name="get" scoped="" ref="0x7faa0016cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0016cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0016b020"/>
        <function-ref name="set" scoped="" ref="0x7faa0016b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0016b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0016b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0016b760"/>
        <function-ref name="clr" scoped="" ref="0x7faa0016b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00168860" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00168860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00168be0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00168d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00167020"/>
        <function-ref name="toggle" scoped="" ref="0x7faa001671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00167340"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00167660"/>
        <function-ref name="get" scoped="" ref="0x7faa001677f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00167980"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00167b10"/>
        <function-ref name="set" scoped="" ref="0x7faa00167ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00167e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00166020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa001662b0"/>
        <function-ref name="clr" scoped="" ref="0x7faa00166440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00163270" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00163270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001635f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00163780"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00163910"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00163aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00163c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00163dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00162020"/>
        <function-ref name="get" scoped="" ref="0x7faa001621b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00162340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa001624d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00162660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa001627f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00162980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00162c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00162da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0015fd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0015fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0015e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0015e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0015e400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0015e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0015e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0015e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0015ea40"/>
        <function-ref name="get" scoped="" ref="0x7faa0015ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0015ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0015d020"/>
        <function-ref name="set" scoped="" ref="0x7faa0015d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0015d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0015d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0015d760"/>
        <function-ref name="clr" scoped="" ref="0x7faa0015d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0015a740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0015a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0015aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0015ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0015ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00158020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001581b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00158340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001584d0"/>
        <function-ref name="get" scoped="" ref="0x7faa00158660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001587f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00158980"/>
        <function-ref name="set" scoped="" ref="0x7faa00158b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00158ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00158e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00157120"/>
        <function-ref name="clr" scoped="" ref="0x7faa001572b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00154100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00154100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00154480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00154610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001547a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00154930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00154ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00154c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00154de0"/>
        <function-ref name="get" scoped="" ref="0x7faa00153020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00153340"/>
        <function-ref name="set" scoped="" ref="0x7faa001534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00153660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00153a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00153c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00150d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00150d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0014f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0014f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0014f400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0014f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0014f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0014f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0014fa40"/>
        <function-ref name="get" scoped="" ref="0x7faa0014fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0014fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0014e020"/>
        <function-ref name="set" scoped="" ref="0x7faa0014e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0014e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0014e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0014e760"/>
        <function-ref name="clr" scoped="" ref="0x7faa0014e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0014b740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0014b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0014bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0014bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0014bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0014a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0014a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0014a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0014a4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa0014a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0014a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0014a980"/>
        <function-ref name="set" scoped="" ref="0x7faa0014ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0014aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0014ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00149120"/>
        <function-ref name="clr" scoped="" ref="0x7faa001492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00146100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00146100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00146480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00146610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001467a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00146930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00146ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00146c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00146de0"/>
        <function-ref name="get" scoped="" ref="0x7faa00145020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00145340"/>
        <function-ref name="set" scoped="" ref="0x7faa001454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00145660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00145a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00145c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00142d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00142d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001410e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00141270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00141400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00141590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00141720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001418b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00141a40"/>
        <function-ref name="get" scoped="" ref="0x7faa00141bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00141d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00140020"/>
        <function-ref name="set" scoped="" ref="0x7faa001401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00140340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00140760"/>
        <function-ref name="clr" scoped="" ref="0x7faa001408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0013d740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0013d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0013dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0013dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0013dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0013c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0013c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0013c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0013c4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa0013c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0013c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0013c980"/>
        <function-ref name="set" scoped="" ref="0x7faa0013cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0013cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0013ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0013b120"/>
        <function-ref name="clr" scoped="" ref="0x7faa0013b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00138100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00138100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00138480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00138610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001387a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00138930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00138ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00138c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00138de0"/>
        <function-ref name="get" scoped="" ref="0x7faa00137020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00137340"/>
        <function-ref name="set" scoped="" ref="0x7faa001374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00137660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00137a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa00137c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00134d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00134d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001320e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00132270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00132400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00132590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00132720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001328b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00132a40"/>
        <function-ref name="get" scoped="" ref="0x7faa00132bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00132d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00131020"/>
        <function-ref name="set" scoped="" ref="0x7faa001311b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00131340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001314d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00131760"/>
        <function-ref name="clr" scoped="" ref="0x7faa001318f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0012ea60" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0012ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0012ede0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0012d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0012d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0012d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0012d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0012d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0012d7f0"/>
        <function-ref name="get" scoped="" ref="0x7faa0012d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0012db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0012dca0"/>
        <function-ref name="set" scoped="" ref="0x7faa0012de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0012c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0012c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0012c440"/>
        <function-ref name="clr" scoped="" ref="0x7faa0012c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00129460" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00129460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001297e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00129970"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00129b00"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00129c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00129e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00128020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001281b0"/>
        <function-ref name="get" scoped="" ref="0x7faa00128340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001284d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00128660"/>
        <function-ref name="set" scoped="" ref="0x7faa001287f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00128980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00128b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00128da0"/>
        <function-ref name="clr" scoped="" ref="0x7faa00127020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00125e00" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00125e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001241c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00124350"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa001244e0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00124670"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00124800"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00124990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00124b20"/>
        <function-ref name="get" scoped="" ref="0x7faa00124cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00124e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00123020"/>
        <function-ref name="set" scoped="" ref="0x7faa001231b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00123340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001234d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00123760"/>
        <function-ref name="clr" scoped="" ref="0x7faa001238f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00120740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00120740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00120ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00120c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00120de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0011f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0011f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0011f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0011f4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa0011f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0011f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0011f980"/>
        <function-ref name="set" scoped="" ref="0x7faa0011fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0011fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0011fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0011e120"/>
        <function-ref name="clr" scoped="" ref="0x7faa0011e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0011b100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0011b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0011b480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0011b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0011b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0011b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0011bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0011bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0011bde0"/>
        <function-ref name="get" scoped="" ref="0x7faa0011a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0011a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0011a340"/>
        <function-ref name="set" scoped="" ref="0x7faa0011a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0011a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0011a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0011aa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0011ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00117d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00117d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001160e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00116270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00116400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00116590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00116720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001168b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00116a40"/>
        <function-ref name="get" scoped="" ref="0x7faa00116bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00116d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00115020"/>
        <function-ref name="set" scoped="" ref="0x7faa001151b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00115340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001154d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00115760"/>
        <function-ref name="clr" scoped="" ref="0x7faa001158f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00112740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00112740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00112ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00112c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00112de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00111020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001111b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00111340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001114d0"/>
        <function-ref name="get" scoped="" ref="0x7faa00111660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001117f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00111980"/>
        <function-ref name="set" scoped="" ref="0x7faa00111b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00111ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00111e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00110120"/>
        <function-ref name="clr" scoped="" ref="0x7faa001102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa0010c100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa0010c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0010c480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0010c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0010c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0010c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0010cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0010cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0010cde0"/>
        <function-ref name="get" scoped="" ref="0x7faa0010b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0010b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0010b340"/>
        <function-ref name="set" scoped="" ref="0x7faa0010b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0010b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0010b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0010ba80"/>
        <function-ref name="clr" scoped="" ref="0x7faa0010bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00108d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00108d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa001070e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00107270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00107400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00107590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00107720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa001078b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00107a40"/>
        <function-ref name="get" scoped="" ref="0x7faa00107bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00107d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00106020"/>
        <function-ref name="set" scoped="" ref="0x7faa001061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00106340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa001064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00106760"/>
        <function-ref name="clr" scoped="" ref="0x7faa001068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa00103740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa00103740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00103ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00103c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00103de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00102020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa001021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00102340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa001024d0"/>
        <function-ref name="get" scoped="" ref="0x7faa00102660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa001027f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00102980"/>
        <function-ref name="set" scoped="" ref="0x7faa00102b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00102ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00102e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00101120"/>
        <function-ref name="clr" scoped="" ref="0x7faa001012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000fe100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000fe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000fe480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000fe610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000fe7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000fe930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000feac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000fec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000fede0"/>
        <function-ref name="get" scoped="" ref="0x7faa000fd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000fd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000fd340"/>
        <function-ref name="set" scoped="" ref="0x7faa000fd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000fd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000fd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000fda80"/>
        <function-ref name="clr" scoped="" ref="0x7faa000fdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000fad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000fad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000f90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000f9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000f9400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000f9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000f9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000f98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000f9a40"/>
        <function-ref name="get" scoped="" ref="0x7faa000f9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000f9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000f8020"/>
        <function-ref name="set" scoped="" ref="0x7faa000f81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000f8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000f84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000f8760"/>
        <function-ref name="clr" scoped="" ref="0x7faa000f88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000f5740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000f5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000f5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000f5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000f5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000f4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000f41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000f4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000f44d0"/>
        <function-ref name="get" scoped="" ref="0x7faa000f4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000f47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000f4980"/>
        <function-ref name="set" scoped="" ref="0x7faa000f4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000f4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000f4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000f3120"/>
        <function-ref name="clr" scoped="" ref="0x7faa000f32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000f0100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000f0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000f0480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000f0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000f07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000f0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000f0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000f0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000f0de0"/>
        <function-ref name="get" scoped="" ref="0x7faa000ef020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000ef1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000ef340"/>
        <function-ref name="set" scoped="" ref="0x7faa000ef4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000ef660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000ef7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000efa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa000efc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000ecd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000ecd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000ea0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000ea270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000ea400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000ea590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000ea720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000ea8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000eaa40"/>
        <function-ref name="get" scoped="" ref="0x7faa000eabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000ead60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000e9020"/>
        <function-ref name="set" scoped="" ref="0x7faa000e91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000e9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000e94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000e9760"/>
        <function-ref name="clr" scoped="" ref="0x7faa000e98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000e6740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000e6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000e6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000e6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000e6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000e5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000e51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000e5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000e54d0"/>
        <function-ref name="get" scoped="" ref="0x7faa000e5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000e57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000e5980"/>
        <function-ref name="set" scoped="" ref="0x7faa000e5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000e5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000e5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000e4120"/>
        <function-ref name="clr" scoped="" ref="0x7faa000e42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000e1100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000e1480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000e1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000e17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000e1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000e1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000e1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000e1de0"/>
        <function-ref name="get" scoped="" ref="0x7faa000e0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000e01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000e0340"/>
        <function-ref name="set" scoped="" ref="0x7faa000e04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000e0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000e07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000e0a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa000e0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000ddd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000ddd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000dc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000dc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000dc400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000dc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000dc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000dc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000dca40"/>
        <function-ref name="get" scoped="" ref="0x7faa000dcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000dcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000db020"/>
        <function-ref name="set" scoped="" ref="0x7faa000db1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000db340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000db4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000db760"/>
        <function-ref name="clr" scoped="" ref="0x7faa000db8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000d8740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000d8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000d8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000d8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000d8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000d74d0"/>
        <function-ref name="get" scoped="" ref="0x7faa000d7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000d7980"/>
        <function-ref name="set" scoped="" ref="0x7faa000d7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000d7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000d7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000d6120"/>
        <function-ref name="clr" scoped="" ref="0x7faa000d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000d3100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000d3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000d3480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000d3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000d37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000d3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000d3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000d3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000d3de0"/>
        <function-ref name="get" scoped="" ref="0x7faa000d2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000d21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000d2340"/>
        <function-ref name="set" scoped="" ref="0x7faa000d24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000d2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000d27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000d2a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa000d2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000cfd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000cfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000ce0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000ce270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000ce400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000ce590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000ce720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000ce8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000cea40"/>
        <function-ref name="get" scoped="" ref="0x7faa000cebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000ced60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000cd020"/>
        <function-ref name="set" scoped="" ref="0x7faa000cd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000cd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000cd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000cd760"/>
        <function-ref name="clr" scoped="" ref="0x7faa000cd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000ca740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000ca740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000caac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000cac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000cade0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000c9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000c91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000c9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000c94d0"/>
        <function-ref name="get" scoped="" ref="0x7faa000c9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000c97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000c9980"/>
        <function-ref name="set" scoped="" ref="0x7faa000c9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000c9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000c9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000c8120"/>
        <function-ref name="clr" scoped="" ref="0x7faa000c82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000c5100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000c5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000c5480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000c5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000c57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000c5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000c5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000c5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000c5de0"/>
        <function-ref name="get" scoped="" ref="0x7faa000c3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000c31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000c3340"/>
        <function-ref name="set" scoped="" ref="0x7faa000c34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000c3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000c37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000c3a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa000c3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa000c0d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa000c0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000bf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000bf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000bf400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000bf590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000bf720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa000bf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000bfa40"/>
        <function-ref name="get" scoped="" ref="0x7faa000bfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa000bfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000be020"/>
        <function-ref name="set" scoped="" ref="0x7faa000be1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000be340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000be4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa000be760"/>
        <function-ref name="clr" scoped="" ref="0x7faa000be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7faa000472f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa000472f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00047670"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00047800"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa00047990"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00047b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00047cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00047e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00046020"/>
        <function-ref name="get" scoped="" ref="0x7faa000461b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00046340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa000464d0"/>
        <function-ref name="set" scoped="" ref="0x7faa00046660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa000467f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa00046980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00046c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa00046da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7faa00058020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7faa00058020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa000583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00058530"/>
        <function-ref name="toggle" scoped="" ref="0x7faa000586c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa00058850"/>
        <function-ref name="get" scoped="" ref="0x7faa000589e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00058b70"/>
        <function-ref name="set" scoped="" ref="0x7faa00058d00"/>
        <function-ref name="clr" scoped="" ref="0x7faa00047020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7faa00043de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa00043de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00042180"/>
        <function-ref name="isInput" scoped="" ref="0x7faa00042310"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa000424a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00042630"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000427c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa00042950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa00042ae0"/>
        <function-ref name="get" scoped="" ref="0x7faa00042c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa00042e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa00041020"/>
        <function-ref name="set" scoped="" ref="0x7faa000411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa00041340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa000414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa00041760"/>
        <function-ref name="clr" scoped="" ref="0x7faa000418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7faa00044b90" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7faa00044b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa00043020"/>
        <function-ref name="isInput" scoped="" ref="0x7faa000431b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa00043340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa000434d0"/>
        <function-ref name="get" scoped="" ref="0x7faa00043660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa000437f0"/>
        <function-ref name="set" scoped="" ref="0x7faa00043980"/>
        <function-ref name="clr" scoped="" ref="0x7faa00043b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7faa0003e930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa0003e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0003ecb0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0003ee40"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa0003d020"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0003d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0003d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa0003d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0003d660"/>
        <function-ref name="get" scoped="" ref="0x7faa0003d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa0003d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa0003db10"/>
        <function-ref name="set" scoped="" ref="0x7faa0003dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa0003de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa0003c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa0003c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7faa0003c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7faa0003f710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7faa0003f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa0003fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7faa0003fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa0003fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa0003e020"/>
        <function-ref name="get" scoped="" ref="0x7faa0003e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa0003e340"/>
        <function-ref name="set" scoped="" ref="0x7faa0003e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faa0003e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9ffe04370" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="DemoAppC.Timer_tem"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ffe04370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffe00870"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffe03e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ffe02c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ffe02780"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ffdff1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ffe00cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffe02300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ffe03020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ffe00260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ffe034f0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffe039c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7faa00026aa0" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7faa00026aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa00022020"/>
        <function-ref name="fired" scoped="" ref="0x7faa00024510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa00023300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa00024e10"/>
        <function-ref name="getdt" scoped="" ref="0x7faa00022920"/>
        <function-ref name="gett0" scoped="" ref="0x7faa000224a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa00024990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa000256b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa00023910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa00025b80"/>
        <function-ref name="stop" scoped="" ref="0x7faa00024090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7faa0001da40" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7faa0001da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa00018020"/>
        <function-ref name="fired" scoped="" ref="0x7faa0001a510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa00019300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa0001ae10"/>
        <function-ref name="getdt" scoped="" ref="0x7faa00018920"/>
        <function-ref name="gett0" scoped="" ref="0x7faa000184a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa0001a990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa0001c670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa00019910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa0001cb40"/>
        <function-ref name="stop" scoped="" ref="0x7faa0001a090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7faa00013500" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7faa00013500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa00015170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa00020b80" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa00020b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa0001d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9ffea1870" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9ffea1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffe9e090"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffe9f090"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9ffe9fa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffe9f550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9ffe9e550"/>
        <function-ref name="start" scoped="" ref="0x7fa9ffea06a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffea0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9ffea1020" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9ffea1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9ffea13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9fe21bbd0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9fe21bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fe2174e0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fe2184e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fe218e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fe2189a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fe2179a0"/>
        <function-ref name="start" scoped="" ref="0x7fa9fe219a80"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe218020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fe21b380" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fe21b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fe21b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fa9fe2010c0" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fe2010c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa9fe201440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa9fe2015d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa9fe201760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa9fe2018f0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fe201a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fa9fe2047b0" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fe2047b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fe204b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9fe204cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fe204e50"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe203020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fe2031b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fe203340"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fe2034d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fe203660"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fe2037f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa9fe203980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa9fe203b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fa9fe203da0" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fe203da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa9fe202180"/>
        <function-ref name="getControl" scoped="" ref="0x7fa9fe202310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fe2024a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa9fe202630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa9fe2027c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fe202950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa9fe202ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa9fe202c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fa9fe202e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fa9fff6f3f0" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fff6f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa9fff6f770"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa9fff6f900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa9fff6fa90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa9fff6fc20"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fff6fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fa9fff76cd0" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff76cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fff730a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9fff73230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fff733c0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fff73550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fff736e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fff73870"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fff73a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fff73b90"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fff73d20"/>
        <function-ref name="setMode" scoped="" ref="0x7fa9fff72020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa9fff721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fa9fff72a40" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fff72a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa9fff72dc0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa9fff71020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fff711b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa9fff71340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa9fff714d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fff71660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa9fff717f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa9fff71980"/>
        <function-ref name="setControl" scoped="" ref="0x7fa9fff71b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fa9fe1f8da0" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fe1f8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa9fe1f7180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa9fe1f7310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa9fe1f74a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa9fe1f7630"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fe1f77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa9fe1fa4c0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fe1fa4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fe1fa840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9fe1fa9d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fe1fab60"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe1facf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fe1fae80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fe1f9030"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fe1f91c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fe1f9350"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fe1f94e0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa9fe1f9670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa9fe1f9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9fe1fe340" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9fe1fe340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fe1fcba0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fe1fdb80"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fe1fc550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fe1fc090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fe1fa090"/>
        <function-ref name="start" scoped="" ref="0x7fa9fe1fd1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe1fd6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fe1ffa30" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fe1ffa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fe1ffdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fa9fe1f9a90" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fe1f9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa9fe1f9e10"/>
        <function-ref name="getControl" scoped="" ref="0x7fa9fe1f8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fe1f81b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa9fe1f8340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa9fe1f84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fe1f8660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa9fe1f87f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa9fe1f8980"/>
        <function-ref name="setControl" scoped="" ref="0x7fa9fe1f8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa9fff1ab50" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9fff1ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fff1e9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fff19360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fff1ee70"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fff19820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fa9fff18b70" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa9fff18b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fff159b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fff14360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fff15e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fff14820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa9fff03c50" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fff03c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fff01020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9fff011b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fff01340"/>
        <function-ref name="get" scoped="" ref="0x7fa9fff014d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fff01660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fff017f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fff01980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fff01b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fff01ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa9fff01e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa9fff00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa9fff11b80" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9fff11b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fff109b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fff03360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fff10e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fff03820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fa9ffedf0f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fa9ffedf0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9ffede020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9ffede9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9ffede4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9ffedee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa9ffefdcf0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9ffefdcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9ffee2b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9ffee1550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9ffee1090"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9ffee1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9fe214020" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9fe214020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fe211870"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fe213840"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fe211220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fe213d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fe211d30"/>
        <function-ref name="start" scoped="" ref="0x7fa9fe214e30"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe213380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fa9fe20e780" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fa9fe20e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fe20a020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fe20b020"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fe20b9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fe20b4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fe20a4e0"/>
        <function-ref name="start" scoped="" ref="0x7fa9fe20d5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe20dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa9fe2103d0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9fe2103d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fe20f240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fe20fbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fe20f700"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fe20e0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fa9ffe6c9c0" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fa9ffe6c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ffe6cd40"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ffe6b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fa9ffe70850" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9ffe70850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffe6c090"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffe6d090"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9ffe6da10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffe6d550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9ffe6c550"/>
        <function-ref name="start" scoped="" ref="0x7fa9ffe6e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffe6ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9ffe752f0" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ffe752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffe71870"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffe74e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ffe72c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ffe72780"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ffe701e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ffe71cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffe72300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ffe74020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ffe71260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ffe744f0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffe749c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fa9ffe1ba00" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fa9ffe1ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ffe1bd80"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ffe19020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fa9ffe20640" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fa9ffe20640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffe1cc40"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffe1d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ffe1c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ffe1dae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ffe1b590"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ffe1b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffe1d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ffe1e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ffe1c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ffe1e860"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffe1ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9ffe26150" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ffe26150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffe21700"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffe24c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ffe23a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ffe235b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ffe20090"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ffe21ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffe23110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ffe26d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ffe210d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ffe242a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffe24790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa9ffe17790" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fa9ffe17790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9ffe0c3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa9ffe0ca60" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9ffe0ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9ffe0b890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9ffe0a260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9ffe0bd50"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9ffe0a720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9ffdfecb0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="DemoAppC.Timer_lig"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ffdfecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffdf9220"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffdfc7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ffdfa590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ffdfa110"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ffdf9b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ffdf96a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffdfcc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ffdfd940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ffdfaba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ffdfde10"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffdfc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9ffdf7750" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="DemoAppC.Timer_hum"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ffdf7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffdf3c40"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffdf51e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ffdf3020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ffdf5ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ffdf2590"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ffdf2110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffdf5660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ffdf6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ffdf3630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ffdf6860"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffdf6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fa9ffaf7900" loc="49:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempAndHumid"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fa9ffaf7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fa9ffaf7c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fa9ffaf8240" loc="48:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempAndHumid"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7fa9ffaf8240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ffaf8e30"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ffaf7300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fa9ffaf9aa0" loc="47:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempAndHumid"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fa9ffaf9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fa9ffaf9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fa9ffafa310" loc="46:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempAndHumid"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7fa9ffafa310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ffaf9020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ffaf94a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7fa9fe15e610" loc="54:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempAndHumid.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7fa9fe15e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fa9fe15e990"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fa9fe15eb20"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fa9fe15ecb0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fa9fe15ee40"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fa9fe15d020"/>
        <function-ref name="reset" scoped="" ref="0x7fa9fe15d1b0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fa9fe15d340"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fa9fe15d4d0"/>
        <function-ref name="resetDone" scoped="" ref="0x7fa9fe15d660"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fa9fe15d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fa9fe1646d0" loc="48:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempAndHumid.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fa9fe1646d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fa9fe164a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fa9fe164e40" loc="49:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempAndHumid.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7fa9fe164e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fe162a80"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9fe161020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fa9fe1667a0" loc="46:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempAndHumid.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fa9fe1667a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fa9fe166b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7fa9fe161620" loc="51:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempAndHumid.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7fa9fe161620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe1619a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe161b30"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe161cc0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe161e50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe160020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7fa9fe15f020" loc="53:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempAndHumid.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7fa9fe15f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fa9fe15f3a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fa9fe15f530"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fa9fe15f6c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fa9fe15f850"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fa9fe15f9e0"/>
        <function-ref name="reset" scoped="" ref="0x7fa9fe15fb70"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fa9fe15fd00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fa9fe15e020"/>
        <function-ref name="resetDone" scoped="" ref="0x7fa9fe15e1b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fa9fe15e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7fa9fe1602f0" loc="52:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempAndHumid.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7fa9fe1602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe160670"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe160800"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe160990"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe160b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe160cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fa9fe165020" loc="47:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempAndHumid.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7fa9fe165020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fe165c10"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9fe1640d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fa9ffd9a8a0" loc="45:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7fa9ffd9a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fa9ffd9ac20"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fa9ffd9adb0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fa9ffd98020"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fa9ffd981b0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fa9ffd98340"/>
        <function-ref name="reset" scoped="" ref="0x7fa9ffd984d0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fa9ffd98660"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fa9ffd987f0"/>
        <function-ref name="resetDone" scoped="" ref="0x7fa9ffd98980"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fa9ffd98b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ffd9b620" loc="44:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ffd9b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ffd9b9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ffd9bb30"/>
        <function-ref name="request" scoped="" ref="0x7fa9ffd9bcc0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ffd9be50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ffd9a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7fa9ffd19930" loc="58:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7fa9ffd19930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ffd19cb0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffd19e40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa9ffd18020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa9ffd181b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7fa9ffd11800" loc="102:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7fa9ffd11800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ffd11b80"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ffd11d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7fa9ffd11020" loc="103:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7fa9ffd11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ffd113a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ffd11530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7fa9ffd1a7a0" loc="57:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7fa9ffd1a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffd1ab20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffd1acb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffd1ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffd19020"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffd191b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffd19340"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffd194d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffd19660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fa9ffd1c020" loc="54:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7fa9ffd1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fa9ffd1c3c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fa9ffd1c550"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fa9ffd1c6e0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fa9ffd1c870"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fa9ffd1ca00"/>
        <function-ref name="reset" scoped="" ref="0x7fa9ffd1cb90"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fa9ffd1cd20"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fa9ffd1b020"/>
        <function-ref name="resetDone" scoped="" ref="0x7fa9ffd1b1b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fa9ffd1b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fa9ffd1b610" loc="56:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fa9ffd1b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffd1b990"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffd1bb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffd1bcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffd1be40"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffd1a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffd1a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffd1a340"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffd1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9ffd138d0" loc="62:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9ffd138d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9ffd13c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9ffd13de0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9ffd12020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9ffd121b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9ffd12340"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffd124d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9ffd12660"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9ffd12ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffd12980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9ffd127f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9ffd12b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa9ffd18560" loc="60:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ffd18560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffd14a20"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffd16020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ffd16da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ffd16920"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ffd134a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ffd13020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffd164a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ffd171b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ffd14410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ffd17680"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffd17b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7fa9ffd06020" loc="47:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7fa9ffd06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ffd063a0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffd06530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa9ffd066c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa9ffd06850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7fa9ffd08b40" loc="46:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7fa9ffd08b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffd07020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffd071b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffd07340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffd074d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffd07660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffd077f0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffd07980"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffd07b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7fa9ffd0a830" loc="45:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fa9ffd0a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffd0abb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffd0ad40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffd08020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffd081b0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffd08340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffd084d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffd08660"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffd087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ffd0b9e0" loc="44:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ffd0b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ffd0bd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ffd0a020"/>
        <function-ref name="request" scoped="" ref="0x7fa9ffd0a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ffd0a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ffd0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9ffd04de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ffd04de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffd03180"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffd03310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffd034a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffd03630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffd037c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffd03950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffd03ae0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffd03c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffd03e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffd02020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffd021b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffd02340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffd024d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffd02760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffd028f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9ffd05b70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ffd05b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffd04020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffd041b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffd04340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffd044d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffd04660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffd047f0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffd04980"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffd04b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9ffcff930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ffcff930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffcffcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffcffe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffcfe020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffcfe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffcfe340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffcfe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffcfe660"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffcfe7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffcfe980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffcfeb10"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffcfeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffcfee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffcfd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffcfd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffcfd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9ffd00690" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ffd00690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffd00a10"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffd00ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffd00d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffcff020"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffcff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffcff340"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffcff4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffcff660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9ffcfa480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ffcfa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffcfa800"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffcfa990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffcfab20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffcfacb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffcfae40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffcf9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffcf91b0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffcf9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffcf94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffcf9660"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffcf97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffcf9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffcf9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffcf9da0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffcf8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9ffcfb1b0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ffcfb1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffcfb530"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffcfb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffcfb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffcfb9e0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffcfbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffcfbd00"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffcfa020"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffcfa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa9ffcf6a80" loc="43:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9ffcf6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ffcf6e00"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ffcf3020"/>
        <function-ref name="start" scoped="" ref="0x7fa9ffcf31b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffcf3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fa9ffce9ba0" loc="50:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7fa9ffce9ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ffce8020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ffce81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fa9ffcea020" loc="47:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7fa9ffcea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffcea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffcea530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffcea6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffcea850"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffcea9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffceab70"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffcead00"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffce9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7fa9ffceea80" loc="45:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7fa9ffceea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffceee00"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffcec020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffcec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffcec340"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffcec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffcec660"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffcec7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffcec980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fa9ffcecce0" loc="46:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fa9ffcecce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffceb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffceb230"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffceb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffceb550"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffceb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffceb870"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffceba00"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffcebb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa9ffcf3770" loc="44:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ffcf3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffcefc40"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcf01e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ffcef020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ffcf0ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ffcee590"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ffcee110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffcf0660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ffcf2390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ffcef630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ffcf2860"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffcf2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9ffcdec10" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ffcdec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffcda110"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcdc6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ffcdb4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ffcdb020"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ffcdaa10"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ffcda590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffcdcb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ffcdd860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ffcdbab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ffcddd30"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffcdc220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fa9ffccdbc0" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fa9ffccdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffccc020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffccc1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffccc340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffccc4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffccc660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffccc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fa9ffcc3bc0" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fa9ffcc3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcc2020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcc21b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcc2340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcc24d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcc2660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcc27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fa9ffccabc0" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fa9ffccabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcc9020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcc91b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcc9340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcc94d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcc9660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcc97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fa9ffcc8bc0" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fa9ffcc8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcc7020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcc71b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcc7340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcc74d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcc7660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcc77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fa9ffccfbc0" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fa9ffccfbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcce020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcce1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcce340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcce4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcce660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fa9ffcc5bc0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fa9ffcc5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcc40a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcc4230"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcc43c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcc4550"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcc46e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcc4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fa9ffcccbc0" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fa9ffcccbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffccb020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffccb1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffccb340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffccb4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffccb660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffccb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fa9ffcc2bc0" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fa9ffcc2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcc1020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcc11b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcc1340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcc14d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcc1660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcc17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fa9ffcd0bf0" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fa9ffcd0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcd4020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcd41b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcd4340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcd44d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcd4660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcd47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fa9ffcc7bc0" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fa9ffcc7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcc6020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcc61b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcc6340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcc64d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcc6660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcc67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fa9ffccebc0" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fa9ffccebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffccd020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffccd1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffccd340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffccd4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffccd660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffccd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fa9ffcc4c40" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fa9ffcc4c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcc3020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcc31b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcc3340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcc34d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcc3660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcc37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fa9ffccbbc0" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fa9ffccbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcca020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcca1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcca340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcca4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcca660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fa9ffcc9bc0" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fa9ffcc9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcc8020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcc81b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcc8340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcc84d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcc8660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcc87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fa9ffcd4bc0" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fa9ffcd4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffccf020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffccf1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffccf340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffccf4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffccf660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffccf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fa9ffcc6bc0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fa9ffcc6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcc5020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcc51b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcc5340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcc54d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcc5660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcc57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fa9ffcbaa30" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fa9ffcbaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcbadb0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcb9020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcb91b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcb9340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcb94d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcb9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fa9ffcafbc0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fa9ffcafbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcae020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcae1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcae340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcae4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcae660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcae7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fa9ffcb7a30" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fa9ffcb7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcb7db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcb5020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcb51b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcb5340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcb54d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcb5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fa9ffcb4a30" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fa9ffcb4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcb4db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcb3020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcb31b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcb3340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcb34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcb3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fa9ffcbca30" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fa9ffcbca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcbcdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcbb020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcbb1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcbb340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcbb4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcbb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fa9ffcb1a30" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fa9ffcb1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcb0020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcb01b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcb0340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcb04d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcb0660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcb07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fa9ffcb9a30" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fa9ffcb9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcb9db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcb8020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcb81b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcb8340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcb84d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcb8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fa9ffcaebc0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fa9ffcaebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcad020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcad1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcad340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcad4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcad660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fa9ffcc09c0" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fa9ffcc09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcc0d40"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcbd020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcbd1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcbd340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcbd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcbd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fa9ffcb3a30" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fa9ffcb3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcb3db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcb2020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcb21b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcb2340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcb24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcb2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fa9ffcbba30" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fa9ffcbba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcbbdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcba020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcba1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcba340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcba4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fa9ffcb0bc0" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fa9ffcb0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcaf020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcaf1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcaf340"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcaf4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcaf660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcaf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fa9ffcb8a30" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fa9ffcb8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcb8db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcb7020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcb71b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcb7340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcb74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fa9ffcb5a30" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fa9ffcb5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcb5db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcb4020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcb41b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcb4340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcb44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcb4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fa9ffcbda30" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fa9ffcbda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcbddb0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcbc020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcbc1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcbc340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcbc4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcbc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fa9ffcb2a30" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fa9ffcb2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffcb2db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffcb1020"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffcb11b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffcb1340"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffcb14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffcb1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fa9ffbdb610" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fa9ffbdb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffbdb990"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffbdbb20"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffbdbcb0"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ffbdbe40"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ffbcd020"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ffbcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa9ffbdca30" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fa9ffbdca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ffbdcdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ffbdb020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa9ffbdb1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa9ffbdb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9ffb4f020" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9ffb4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9ffb4f3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9ffb4f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9ffb4dcd0" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ffb4dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9ffb4c0a0"/>
        <function-ref name="configure" scoped="" ref="0x7fa9ffb4c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa9ffb4f7a0" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9ffb4f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ffb4fb20"/>
        <function-ref name="requested" scoped="" ref="0x7fa9ffb4fcb0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ffb4fe40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ffb4d020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9ffb4d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ffb50210" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ffb50210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ffb505b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ffb50740"/>
        <function-ref name="request" scoped="" ref="0x7fa9ffb508d0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ffb50a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ffb50bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9ffb4d400" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ffb4d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9ffb4d780"/>
        <function-ref name="userId" scoped="" ref="0x7fa9ffb4d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fe0caa00" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fe0caa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fe0cad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa9fe0c8060" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa9fe0c8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fe0c83e0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa9fe0c8570"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa9fe0c8700"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fe0c8890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9fe0c5020" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe0c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9fe0c53c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fe0c5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9fe0c4cf0" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe0c4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9fe0c30e0"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fe0c3270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa9fe0c3500" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa9fe0c3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fe0c3880"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa9fe0c3a10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa9fe0c3ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fe0c3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa9fe0c57a0" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fe0c57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe0c5b20"/>
        <function-ref name="requested" scoped="" ref="0x7fa9fe0c5cb0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe0c5e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe0c4020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fe0c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fe0c2020" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fe0c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fe0c23a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fe0c2530"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fe0c26c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fe0c2850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fe0c29e0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe0c2b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fe0c2d00"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fe0c04d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fe0c01b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fe0c0020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fe0c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fe0c6230" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fe0c6230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe0c65d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe0c6760"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe0c68f0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe0c6a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe0c6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9fe0c4400" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe0c4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fe0c4780"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fe0c4910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa9fe0c07a0" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fa9fe0c07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fe0c0b20"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fe0c0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa9ffb49280" loc="69:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9ffb49280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ffb49600"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ffb49790"/>
        <function-ref name="start" scoped="" ref="0x7fa9ffb49920"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffb49ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa9ffb49d00" loc="71:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa9ffb49d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa9ffb1a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa9ffb1a2f0" loc="72:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9ffb1a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ffb1a670"/>
        <function-ref name="requested" scoped="" ref="0x7fa9ffb1a800"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ffb1a990"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ffb1ab20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9ffb1acb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa9ffb19020" loc="73:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ffb19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9ffb193a0"/>
        <function-ref name="userId" scoped="" ref="0x7fa9ffb19530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa9fe090b20" loc="61:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9fe090b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9fe08f020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9fe08f1b0"/>
        <function-ref name="start" scoped="" ref="0x7fa9fe08f340"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe08f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa9fe08f720" loc="63:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa9fe08f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa9fe08faa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fa9fe08c160" loc="78:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7fa9fe08c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fe08c4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fe08c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa9fe08fcf0" loc="64:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fe08fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe08e0a0"/>
        <function-ref name="requested" scoped="" ref="0x7fa9fe08e230"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe08e3c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe08e550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fe08e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fa9fe08c940" loc="73:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7fa9fe08c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fe08ccc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fe08ce50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fa9fe0903c0" loc="60:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa9fe0903c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fe090740"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe0908d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa9fe08e930" loc="65:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe08e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fe08ecb0"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fe08ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9ffb0d1e0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ffb0d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ffb09630"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffb0bc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ffb0a9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ffb0a550"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ffb08020"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ffb09ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ffb0a0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ffb0ddd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ffb09020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ffb0b2e0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffb0b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fa9ffaf2750" loc="42:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="DemoAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fa9ffaf2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff6f7390"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff6f7810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fa9ff6f6020" loc="43:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="DemoAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fa9ff6f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fa9ff6f5ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fa9ff6f6c10"/>
        <function-ref name="read" scoped="" ref="0x7fa9ff6f55e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff6f35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7fa9ffaf2020" loc="41:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="DemoAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7fa9ffaf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fa9ffaf23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fa9fe076760" loc="48:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fa9fe076760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fe074390"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9fe074810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fa9fe073020" loc="49:../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe073020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9fe073c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7fa9ffab6960" loc="46:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7fa9ffab6960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ffab6ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ffab6e70"/>
        <function-ref name="request" scoped="" ref="0x7fa9ffab5030"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ffab51c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ffab5350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fa9ffac1ad0" loc="38:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fa9ffac1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ffac0750"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ffac0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fa9ffabe530" loc="39:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7fa9ffabe530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ffabd1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ffabd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7fa9ffab92c0" loc="40:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7fa9ffab92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ffab9640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ffab97d0"/>
        <function-ref name="request" scoped="" ref="0x7fa9ffab9960"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ffab9af0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ffab9c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa9ffab4020" loc="48:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fa9ffab4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9ffab4c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fa9ffab1450" loc="49:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fa9ffab1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9ffab17d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fa9ffab1960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fa9ffab1af0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fa9ffab1c80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fa9ffab1e10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fa9ffab0020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fa9ffab01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7fa9ffab7640" loc="44:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7fa9ffab7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ffab79c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ffab7b50"/>
        <function-ref name="request" scoped="" ref="0x7fa9ffab7ce0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ffab7e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ffab6030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7fa9ffa86e40" loc="136:../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7fa9ffa86e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ffa851e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ffa85370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fa9fe066400" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fa9fe066400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9fe066780"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fe066910"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa9fe066aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fa9fe067400" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fa9fe067400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9fe067780"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fa9fe067910"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fa9fe067aa0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fa9fe067c30"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fa9fe067dc0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fa9fe066020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fa9fe0661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fa9fe066cf0" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fa9fe066cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fa9fe0650a0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fa9fe065230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fa9fe065660" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe065660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9fe0643d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fe068660" loc="46:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fe068660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe0689e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe068b70"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe068d00"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe067020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe0671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fa9ffa49960" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fa9ffa49960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9ffa49ce0"/>
        <function-ref name="configure" scoped="" ref="0x7fa9ffa49e70"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa9ffa48030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fa9ffa461d0" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fa9ffa461d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9ffa46550"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffa466e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fa9ffa48920" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fa9ffa48920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fa9ffa48ca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fa9ffa48e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fa9ffa4a1d0" loc="41:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fa9ffa4a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9ffa4a550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fa9ffa4a6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fa9ffa4a870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fa9ffa4aa00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fa9ffa4ab90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fa9ffa4ad20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fa9ffa49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ffa57cc0" loc="40:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ffa57cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ffa4c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ffa4c230"/>
        <function-ref name="request" scoped="" ref="0x7fa9ffa4c3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ffa4c550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ffa4c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fa9ffa3faf0" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fa9ffa3faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9ffa3fe70"/>
        <function-ref name="configure" scoped="" ref="0x7fa9ffa3e030"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa9ffa3e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fa9ffa2d0d0" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fa9ffa2d0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fa9ffa2d450"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fa9ffa2d5e0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fa9ffa2d770"/>
        <function-ref name="isBusy" scoped="" ref="0x7fa9ffa2d900"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fa9ffa2da90"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fa9ffa2dc20"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fa9ffa2ddb0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fa9ffa3a020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fa9ffa3a1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7fa9ffa3a340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fa9ffa3a4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fa9ffa3a660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fa9ffa3a7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fa9ffa3aa80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fa9ffa3ac10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7fa9ffa1fc80" loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fa9ffa1fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffa1e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffa1e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffa1e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffa1e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffa1e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffa1e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffa1ea00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffa1eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffa1ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffa1d020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffa1d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffa1d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffa1d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffa1d760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffa1d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7fa9ffa29e60" loc="53:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fa9ffa29e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa9ffa28210"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa9ffa283a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa9ffa28530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa9ffa286c0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffa28850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7fa9ffa2c880" loc="50:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fa9ffa2c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa9ffa2cc00"/>
        <function-ref name="getControl" scoped="" ref="0x7fa9ffa2cd90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9ffa2b020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa9ffa2b1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa9ffa2b340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9ffa2b4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa9ffa2b660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa9ffa2b7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa9ffa2b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fa9ffa3c910" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fa9ffa3c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9ffa3cc90"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ffa3ce20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7fa9ffa24c80" loc="56:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fa9ffa24c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffa220a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffa22230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffa223c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffa22550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffa226e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffa22870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffa22a00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffa22b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffa22d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffa21020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffa211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffa21340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffa214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffa21760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffa218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fa9ffa3eab0" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fa9ffa3eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fa9ffa3ee30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fa9ffa3c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7fa9ffa19c80" loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fa9ffa19c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffa180a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffa18230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffa183c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffa18550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffa186e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffa18870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffa18a00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffa18b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffa18d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffa17020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffa171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffa17340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffa174d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffa17760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffa178f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7fa9ffa28be0" loc="54:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fa9ffa28be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffa270a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffa27230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffa273c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffa27550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffa276e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffa27870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffa27a00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffa27b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffa27d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffa26020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffa261b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffa26340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffa264d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffa26760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffa268f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9ffa41660" loc="40:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9ffa41660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9ffa419e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7fa9ffa1dc80" loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fa9ffa1dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffa1c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffa1c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffa1c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffa1c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffa1c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffa1c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffa1ca00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffa1cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffa1cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffa1b020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffa1b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffa1b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffa1b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffa1b760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffa1b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7fa9ffa39020" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fa9ffa39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ffa393a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9ffa39530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9ffa396c0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffa39850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9ffa399e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9ffa39b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9ffa39d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9ffa2c020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9ffa2c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa9ffa2c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa9ffa2c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7fa9ffa3b280" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fa9ffa3b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9ffa3b600"/>
        <function-ref name="userId" scoped="" ref="0x7fa9ffa3b790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7fa9ffa2bd30" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fa9ffa2bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa9ffa2a0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa9ffa2a270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9ffa2a400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa9ffa2a590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa9ffa2a720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9ffa2a8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa9ffa2aa40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa9ffa2abd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa9ffa2ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fa9ffa40370" loc="41:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fa9ffa40370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9ffa406f0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fa9ffa40880"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fa9ffa40a10"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fa9ffa40ba0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fa9ffa40d30"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fa9ffa3f020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fa9ffa3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7fa9ffa21c80" loc="57:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fa9ffa21c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffa200a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffa20230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffa203c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffa20550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffa206e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffa20870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffa20a00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffa20b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffa20d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffa1f020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffa1f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffa1f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffa1f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffa1f760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffa1f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7fa9ffa29120" loc="52:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fa9ffa29120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa9ffa294a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa9ffa29630"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa9ffa297c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa9ffa29950"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ffa29ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7fa9ffa26c80" loc="55:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fa9ffa26c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffa250a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffa25230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffa253c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffa25550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffa256e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffa25870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffa25a00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffa25b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffa25d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffa24020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffa241b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffa24340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffa244d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffa24760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffa248f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7fa9ffa1bc80" loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fa9ffa1bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ffa1a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ffa1a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ffa1a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ffa1a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ffa1a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ffa1a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ffa1aa00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ffa1ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ffa1ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ffa19020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ffa191b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ffa19340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ffa194d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ffa19760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ffa198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7fa9ff95a020" loc="46:../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fa9ff95a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fa9ff95a3a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fa9ff95a530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fa9ff95a6c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fa9ff95a850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fa9ff95a9e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fa9ff95ab70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fa9ff95ad00"/>
        <function-ref name="startConversion" scoped="" ref="0x7fa9ff959020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fa9ff9591b0"/>
        <function-ref name="getMem" scoped="" ref="0x7fa9ff959340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fa9ff9594d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fa9ff959660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fa9ff9597f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fa9ff959a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fa9ff959c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9ff8c93a0" loc="86:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9ff8c93a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9ff8c9740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9ff8c98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9ff8c8570" loc="89:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff8c8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9ff8c8910"/>
        <function-ref name="configure" scoped="" ref="0x7fa9ff8c8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff8ca520" loc="85:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff8ca520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff8ca8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff8caa50"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff8cabe0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff8cad70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff8c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9ff8c9b20" loc="87:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff8c9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9ff8c8020"/>
        <function-ref name="userId" scoped="" ref="0x7fa9ff8c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fe040060" loc="44:../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fe040060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fe0403e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fa9fe040670" loc="45:../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fa9fe040670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fe0409f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa9fe040b80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa9fe040d10"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fe03f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9fe03d530" loc="52:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe03d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9fe03d8d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fe03da60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9fe03c610" loc="56:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe03c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9fe03c9b0"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fe03cb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa9fe03cdd0" loc="57:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa9fe03cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fe03a180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa9fe03a310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa9fe03a4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fe03a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fe03e6c0" loc="51:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fe03e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe03ea60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe03ebf0"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe03ed80"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe03d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe03d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9fe03dcb0" loc="53:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe03dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fe03c0a0"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fe03c230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa9fe03a900" loc="68:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fa9fe03a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fe03ac80"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fe03ae10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa9ff8a9740" loc="55:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fa9ff8a9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9ff8a83d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fa9ff8aa1d0" loc="54:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fa9ff8aa1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff8aa550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff8aa6e0"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff8aa870"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff8aaa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff8aab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fa9ff8afd20" loc="52:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fa9ff8afd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff8ac0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff8ac270"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff8ac400"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff8ac590"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff8ac720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fa9ff8a49a0" loc="43:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fa9ff8a49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fa9ff8a4d20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fa9ff8a3020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fa9ff8a31b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fa9ff8a3340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fa9ff8a34d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fa9ff8a3660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fa9ff8a37f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fa9ff8a3980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fa9ff8a3b10"/>
        <function-ref name="getMem" scoped="" ref="0x7fa9ff8a3ca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fa9ff8a3e30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fa9ff8a2020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fa9ff8a21b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fa9ff8a2440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fa9ff8a25d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7fa9ff89b020" loc="45:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fa9ff89b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff898630"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff89aa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ff899920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ff8994a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ff897020"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ff898ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff899020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ff89bc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ff898020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ff89a110"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff89a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7fa9ff8a5e00" loc="39:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fa9ff8a5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ff8a41c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ff8a4350"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff8a44e0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff8a4670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7fa9ff8976c0" loc="46:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fa9ff8976c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff893c40"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff8941e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ff893020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ff894ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ff892590"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ff892110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff894660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ff895390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ff893630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ff895860"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff895d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7fa9ff8a5240" loc="38:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fa9ff8a5240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ff8a55c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ff8a5750"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff8a58e0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff8a5a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7fa9ff8a2a90" loc="44:../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fa9ff8a2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff89d020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff89f510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ff89e300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ff89fe10"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ff89d920"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ff89d4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff89f990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ff8a16b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ff89e910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ff8a1b80"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff89f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa9ff83f020" loc="43:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fa9ff83f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9ff83fc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7fa9ff8419c0" loc="42:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fa9ff8419c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ff841d40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ff840020"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff8401b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff840340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fa9ff842030" loc="40:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fa9ff842030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff8423b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff842540"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff8426d0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff842860"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff8429f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fa9ff847ca0" loc="38:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fa9ff847ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff8440a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff844230"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff8443c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff844550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff8446e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7fa9ff83c7f0" loc="52:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7fa9ff83c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff83cb70"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff83cd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7fa9ff842d80" loc="41:../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fa9ff842d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ff841180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ff841310"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff8414a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff841630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9ff80d4e0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ff80d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff80aa20"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff80b020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ff80bda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ff80b920"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ff8094a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ff809020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff80b4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ff80c110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ff80a410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ff80c5e0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff80cab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9ff806020" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ff806020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff803630"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff805a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ff804920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ff8044a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ff801020"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ff803ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff804020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ff806c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ff803020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ff805110"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff8055e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9ff800b40" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9ff800b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff7fc110"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff7fe5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9ff7fd4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9ff7fd020"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9ff7fca10"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9ff7fc590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff7fea30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9ff7ff750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9ff7fdab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9ff7ffc20"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff7fe130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fa9fe056020" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fa9fe056020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9fe056c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fa9fe0552a0" loc="45:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fa9fe0552a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9fe053020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fa9fe06d0e0" loc="49:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fe06d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9fe06dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fa9fe071380" loc="48:../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fa9fe071380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fa9fe070e60"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fa9fe070020"/>
        <function-ref name="read" scoped="" ref="0x7fa9fe070990"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9fe06e940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7fa9ff7c4c90" loc="23:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fa9ff7c4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9ff7c30a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fa9ff7c3230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fa9ff7c33c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fa9ff7c3550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fa9ff7c36e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fa9ff7c3870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fa9ff7c3a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fa9ff7c55e0" loc="22:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9ff7c55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9ff7c4240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fa9ff7c91d0" loc="20:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fa9ff7c91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fa9ff7c8c40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fa9ff7c9dc0"/>
        <function-ref name="read" scoped="" ref="0x7fa9ff7c8770"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff7c7730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa9ff7c2280" loc="24:../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff7c2280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff7c2600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff7c2790"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff7c2920"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff7c2ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff7c2c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7fa9ff78c380" loc="156:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7fa9ff78c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff78c700"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff78c890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7fa9ff79aaa0" loc="119:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7fa9ff79aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff79ae20"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff799020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7fa9ff793100" loc="135:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7fa9ff793100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff793480"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff793610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fa9ff7b4020" loc="54:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9ff7b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff7b2870"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff7b3840"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9ff7b2220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff7b3d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9ff7b2d30"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff7b4e30"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff7b3380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9ff7bd150" loc="48:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9ff7bd150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7faa009e8800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7faa009e8800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9ff7bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fa9ff7b7b10" loc="53:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9ff7b7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9ff7b6790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fa9ff7b81d0" loc="52:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fa9ff7b81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9ff7b8550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fa9ff7b86e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fa9ff7b8870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fa9ff7b8a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fa9ff7b8b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fa9ff7b8d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fa9ff7b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fa9ff7bde70" loc="49:../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fa9ff7bde70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fa9ff7bb910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fa9ff7bca90"/>
        <function-ref name="read" scoped="" ref="0x7fa9ff7bb440"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff7ba440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9ff74f970" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9ff74f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff74c1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff74d1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9ff74db30"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff74d670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9ff74c670"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff74e7c0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff74ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9ff74f120" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9ff74f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9ff74f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9fdff2ca0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9fdff2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fdfef4e0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdff04e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fdff0e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fdff09a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fdfef9a0"/>
        <function-ref name="start" scoped="" ref="0x7fa9fdff1ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fdff0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fdff2450" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fdff2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fdff27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fa9fdfd9440" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fdfd9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa9fdfd97c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa9fdfd9950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa9fdfd9ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa9fdfd9c70"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdfd9e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fa9fdfdc880" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fdfdc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fdfdcc00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9fdfdcd90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fdfdb020"/>
        <function-ref name="get" scoped="" ref="0x7fa9fdfdb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fdfdb340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fdfdb4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fdfdb660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fdfdb7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fdfdb980"/>
        <function-ref name="setMode" scoped="" ref="0x7fa9fdfdbb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa9fdfdbca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fa9fdfda020" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fdfda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa9fdfda3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa9fdfda530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fdfda6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa9fdfda850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa9fdfda9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fdfdab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa9fdfdad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa9fdfd9020"/>
        <function-ref name="setControl" scoped="" ref="0x7fa9fdfd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fa9fdfcf0c0" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fdfcf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa9fdfcf440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa9fdfcf5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa9fdfcf760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa9fdfcf8f0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdfcfa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa9fdfd2710" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fdfd2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fdfd2a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9fdfd2c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fdfd2db0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fdfd1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fdfd11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fdfd1340"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fdfd14d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fdfd1660"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fdfd17f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa9fdfd1980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa9fdfd1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9fdfd55b0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9fdfd55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fdfd3df0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdfd4df0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fdfd37a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fdfd32e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fdfd22e0"/>
        <function-ref name="start" scoped="" ref="0x7fa9fdfd4420"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fdfd4930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fdfd7ca0" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fdfd7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fdfd50a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fa9fdfd1da0" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fdfd1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa9fdfd0180"/>
        <function-ref name="getControl" scoped="" ref="0x7fa9fdfd0310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fdfd04a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa9fdfd0630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa9fdfd07c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fdfd0950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa9fdfd0ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa9fdfd0c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fa9fdfd0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9fdfeb020" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9fdfeb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fdfe9870"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdfea840"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fdfe9220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fdfead00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fdfe9d30"/>
        <function-ref name="start" scoped="" ref="0x7fa9fdfebe30"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fdfea380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fa9fdfe5780" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fa9fdfe5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fdfe2020"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdfe3020"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fdfe39a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fdfe34e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fdfe24e0"/>
        <function-ref name="start" scoped="" ref="0x7fa9fdfe45d0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fdfe4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa9fdfe83d0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9fdfe83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fdfe7240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fdfe7bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fdfe7700"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fdfe50d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fa9ff71cbf0" loc="26:../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7fa9ff71cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fa9ff719710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fa9ff71b860"/>
        <function-ref name="read" scoped="" ref="0x7fa9ff719220"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff718220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fa9ff747cb0" loc="24:../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fa9ff747cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fa9ff71e850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fa9ff71f940"/>
        <function-ref name="read" scoped="" ref="0x7fa9ff71e360"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff71c360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa9ff7188f0" loc="27:../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff7188f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff718c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff718e20"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff717020"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff7171b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff717340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fa9fe000020" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fa9fe000020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9fe0003a0"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fe000530"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa9fe0006c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fa9fe001020" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fa9fe001020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa9fe0013a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fa9fe001530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fa9fe0016c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fa9fe001850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fa9fe0019e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fa9fe001b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fa9fe001d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fa9fe000910" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fa9fe000910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fa9fe000c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fa9fe000e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fa9fdfff280" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9fdfff280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9fdffd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fe002360" loc="46:../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fe002360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe0026e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe002870"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe002a00"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe002b90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe002d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fa9fdf8edc0" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fa9fdf8edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9fdf8dac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fa9fdf8c120" loc="45:../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fa9fdf8c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9fdf8cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7fa9ff6fe300" loc="44:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fa9ff6fe300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fa9ff6fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7fa9ff7028a0" loc="43:../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7fa9ff7028a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fa9ff702c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa9ff6ef080" loc="61:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff6ef080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ff6ef400"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ff6ef590"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff6ef720"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff6ef8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa9ff6ee1d0" loc="63:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9ff6ee1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff6ee550"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9ff6ee6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9ff6ee870"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9ff6eea00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff6eeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa9ff6ec020" loc="65:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fa9ff6ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9ff6ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa9ff6ec630" loc="67:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9ff6ec630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ff6ec9b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9ff6ecb40"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9ff6eccd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9ff6ece60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9ff6eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fa9ff6cfcd0" loc="70:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa9ff6cfcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa9ff6ca2e0"/>
        <function-ref name="clear" scoped="" ref="0x7fa9ff6caa10"/>
        <function-ref name="isValid" scoped="" ref="0x7fa9ff6d8b60"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff6c9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa9ff6beb20" loc="72:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9ff6beb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa9ff6c4020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa9ff6c41b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa9ff6c4340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa9ff6c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9ff6ed3f0" loc="64:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9ff6ed3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9ff6ed770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa9ff6d39f0" loc="69:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9ff6d39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9ff6d3d70"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9ff6e9020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9ff6e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa9ff6d94e0" loc="68:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9ff6d94e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9ff6d9860"/>
        <function-ref name="source" scoped="" ref="0x7fa9ff6d99f0"/>
        <function-ref name="address" scoped="" ref="0x7fa9ff6d9b80"/>
        <function-ref name="destination" scoped="" ref="0x7fa9ff6d9d10"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9ff6ea020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9ff6ea1b0"/>
        <function-ref name="type" scoped="" ref="0x7fa9ff6ea340"/>
        <function-ref name="setType" scoped="" ref="0x7fa9ff6ea4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9ff6ea660"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9ff6ea7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9ff6ea980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa9ff6c9dc0" loc="71:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa9ff6c9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa9ff6c63f0"/>
        <function-ref name="clear" scoped="" ref="0x7fa9ff6c6b20"/>
        <function-ref name="isValid" scoped="" ref="0x7fa9ff6c8ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff6c52a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa9ff6b1880" loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff6b1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ff6b1c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ff6b1d90"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff6b0020"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff6b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa9ff697d40" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9ff697d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa9ff69f0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa9ff69f270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa9ff69f400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa9ff69f590"/>
        <function-ref name="setCca" scoped="" ref="0x7fa9ff69f720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa9ff69f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa9ff68ad20" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fa9ff68ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa9ff68c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa9ff6ac760" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9ff6ac760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ff6acae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9ff6acc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9ff6ace00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9ff6ab020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9ff6ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa9ff6b0980" loc="56:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9ff6b0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff6b0d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9ff6af020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9ff6af1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9ff6af340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff6af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa9ff6ae900" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fa9ff6ae900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9ff6aec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa9ff6a2970" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9ff6a2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa9ff6a2cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa9ff6a2e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa9ff6aa030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa9ff6aa1c0"/>
        <function-ref name="getPower" scoped="" ref="0x7fa9ff6aa350"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa9ff6aa4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa9ff69fbb0" loc="65:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9ff69fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa9ff69d020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa9ff69d1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa9ff69d340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa9ff69d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9ff6afcb0" loc="57:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9ff6afcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9ff6ae0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa9ff6aa810" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9ff6aa810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9ff6aab90"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9ff6aad20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9ff6a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa9ff695020" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa9ff695020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa9ff6953a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa9ff695530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa9ff6956c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa9ff695850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa9ff6959e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa9ff6ad020" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9ff6ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9ff6ad3a0"/>
        <function-ref name="source" scoped="" ref="0x7fa9ff6ad530"/>
        <function-ref name="address" scoped="" ref="0x7fa9ff6ad6c0"/>
        <function-ref name="destination" scoped="" ref="0x7fa9ff6ad850"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9ff6ad9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9ff6adb70"/>
        <function-ref name="type" scoped="" ref="0x7fa9ff6add00"/>
        <function-ref name="setType" scoped="" ref="0x7fa9ff6ac020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9ff6ac1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9ff6ac340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9ff6ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa9ff69ea80" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa9ff69ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa9ff69ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa9ff689b70" loc="43:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff689b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ff686020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ff6861b0"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff686340"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff6864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa9ff6774c0" loc="55:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa9ff6774c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa9ff677840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa9ff676790" loc="57:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa9ff676790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa9ff676b10"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa9ff676ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa9ff676e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa9ff674020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa9ff6741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa9ff67a9e0" loc="53:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9ff67a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa9ff67ad60"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa9ff678020"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa9ff6781b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa9ff678340"/>
        <function-ref name="getPower" scoped="" ref="0x7fa9ff6784d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa9ff678660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fa9ff6834e0" loc="50:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fa9ff6834e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff683860"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9ff6839f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9ff683b80"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9ff683d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff67a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa9ff677b40" loc="56:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9ff677b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa9ff676020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa9ff6761b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa9ff676340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa9ff6764d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fa9ff684020" loc="47:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fa9ff684020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9ff6843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa9ff678990" loc="54:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9ff678990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9ff678d10"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9ff677020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9ff6771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff686d00" loc="45:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff686d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff6850a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff685230"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff6853c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff685550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff6856e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fa9ff679240" loc="46:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fa9ff679240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff6795c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9ff679750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9ff6798e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9ff679a70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff679c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fa9ff6846e0" loc="48:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fa9ff6846e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ff684a60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9ff684bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9ff684d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9ff683020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9ff6831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fa9ff67a390" loc="51:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fa9ff67a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9ff67a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa9ff671020" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff671020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ff6713a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ff671530"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff6716c0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff671850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa9ff66f020" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9ff66f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa9ff66f3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa9ff66f530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa9ff66f6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa9ff66f850"/>
        <function-ref name="setCca" scoped="" ref="0x7fa9ff66f9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa9ff66fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9ff671b10" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9ff671b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff670020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9ff6701b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9ff670340"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9ff6704d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff670660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9ff670940" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9ff670940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9ff670cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa9ff66eb80" loc="39:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9ff66eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9ff66b020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9ff66b1b0"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff66b340"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff66b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa9ff66a4c0" loc="41:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9ff66a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa9ff66a840"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa9ff66a9d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa9ff66ab60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa9ff66acf0"/>
        <function-ref name="setCca" scoped="" ref="0x7fa9ff66ae80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa9ff669030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fa9ff660700" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fa9ff660700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa9ff660a80"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa9ff660c10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa9ff660da0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa9ff658020"/>
        <function-ref name="setCca" scoped="" ref="0x7fa9ff6581b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa9ff658340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa9ff656b00" loc="50:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9ff656b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa9ff656e80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa9ff654030"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa9ff6541c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa9ff654350"/>
        <function-ref name="getPower" scoped="" ref="0x7fa9ff6544e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa9ff654670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fa9ff659810" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa9ff659810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff659b90"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9ff659d20"/>
        <function-ref name="modify" scoped="" ref="0x7fa9ff660020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff6601b0"/>
        <function-ref name="resend" scoped="" ref="0x7fa9ff660340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9ff66b790" loc="40:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9ff66b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff66bb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9ff66bca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9ff66be30"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9ff66a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff66a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fa9ff655b60" loc="48:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa9ff655b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa9ff657020"/>
        <function-ref name="rand32" scoped="" ref="0x7fa9ff6571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fa9ff667ba0" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fa9ff667ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9ff666020"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff6661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa9ff64d130" loc="51:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9ff64d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa9ff64d4b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa9ff64d640"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa9ff64d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fa9ff661880" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fa9ff661880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fa9ff661c00"/>
        <function-ref name="rfOff" scoped="" ref="0x7fa9ff661d90"/>
        <function-ref name="rxOn" scoped="" ref="0x7fa9ff667020"/>
        <function-ref name="startVReg" scoped="" ref="0x7fa9ff6671b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fa9ff667340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fa9ff6674d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fa9ff667660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fa9ff6677f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9ff657470" loc="49:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9ff657470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9ff6577f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9ff657980"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9ff657b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9ff657ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9ff657e30"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff656020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9ff6561b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9ff6567f0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff656340"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9ff6564d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9ff656660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa9ff669320" loc="43:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff669320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff6696a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff669830"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff6699c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff669b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff669ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fa9ff648850" loc="52:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fa9ff648850"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa9ff648cd0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa9ff648e60"/>
        <function-ref name="isState" scoped="" ref="0x7fa9ff653020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa9ff6531b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa9ff653340"/>
        <function-ref name="forceState" scoped="" ref="0x7fa9ff6534d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fa9ff6432a0" loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fa9ff6432a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff643620"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff6437b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fa9ff6442a0" loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fa9ff6442a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff644620"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff6447b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fa9ff6462b0" loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fa9ff6462b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff646630"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff6467c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fa9ff5ec550" loc="45:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa9ff5ec550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa9ff5ec8d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa9ff5eca60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa9ff5ecbf0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa9ff5ecd80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa9ff5f9020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa9ff5f91b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa9ff5f9340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa9ff5f94d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa9ff5f9660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa9ff5f97f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa9ff5f9980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa9ff5f9b10"/>
        <function-ref name="sync" scoped="" ref="0x7fa9ff5f9ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa9ff5f8020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa9ff5f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fa9ff5ea830" loc="47:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fa9ff5ea830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5e9480"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff5e9900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fa9ff5f84b0" loc="46:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fa9ff5f84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fa9ff5f8830"/>
        <function-ref name="rfOff" scoped="" ref="0x7fa9ff5f89c0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fa9ff5f8b50"/>
        <function-ref name="startVReg" scoped="" ref="0x7fa9ff5f8ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fa9ff5f8e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fa9ff5ea030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fa9ff5ea1c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fa9ff5ea350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff5fa020" loc="44:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff5fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff5fa3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff5fa530"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff5fa6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff5fa850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff5fa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fa9ff5e40c0" loc="46:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa9ff5e40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa9ff5e4440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa9ff5e45d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa9ff5e4760"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa9ff5e48f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa9ff5e4a80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa9ff5e4c10"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa9ff5e4da0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa9ff5e3020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa9ff5e31b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa9ff5e3340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa9ff5e34d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa9ff5e3660"/>
        <function-ref name="sync" scoped="" ref="0x7fa9ff5e37f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa9ff5e3a80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa9ff5e3c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fa9ff5c5720" loc="66:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9ff5c5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5c5aa0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff5c5c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fa9ff5dc970" loc="50:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa9ff5dc970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fa9ff5dccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fa9ff5de3a0" loc="52:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fa9ff5de3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff5dbbe0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff5ddbc0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9ff5db590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff5db0d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9ff5d90d0"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff5dd1f0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff5dd700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fa9ff5c9570" loc="64:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9ff5c9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5c98f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff5c9a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fa9ff5d8830" loc="54:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fa9ff5d8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff5d8bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff5d8d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff5d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff5d71b0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff5d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff5d74d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff5d7660"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff5d77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fa9ff5e1500" loc="48:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fa9ff5e1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5e0130"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff5e05b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fa9ff5b3820" loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fa9ff5b3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff5b3ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff5b3d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fa9ff5c4020" loc="67:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa9ff5c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5c43a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff5c4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fa9ff5c48d0" loc="68:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa9ff5c48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5c4c50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff5c4de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fa9ff5ce3c0" loc="62:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa9ff5ce3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5ce740"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff5ce8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fa9ff5d06b0" loc="57:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa9ff5d06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa9ff5d0a30"/>
        <function-ref name="changed" scoped="" ref="0x7fa9ff5d0bc0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa9ff5d0d50"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa9ff5d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fa9ff5d95c0" loc="53:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa9ff5d95c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff5d9940"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff5d9ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff5d9c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff5d9df0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff5d8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff5d81b0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff5d8340"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff5d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fa9ff5c1020" loc="71:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9ff5c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff5c15a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fa9ff5d7b50" loc="55:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fa9ff5d7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff5d6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff5d61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff5d6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff5d64d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff5d6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff5d67f0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff5d6980"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff5d6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9ff5e8cc0" loc="44:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9ff5e8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9ff5e50a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fa9ff5c9e40" loc="65:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9ff5c9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5c51e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff5c5370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fa9ff5c1940" loc="72:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa9ff5c1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff5c1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa9ff5c00d0" loc="74:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa9ff5c00d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff5c0450"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff5c05e0"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff5c0770"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff5c0900"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff5c0a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fa9ff5bebd0" loc="76:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fa9ff5bebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff5bd020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff5bd1b0"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff5bd340"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff5bd4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff5bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fa9ff5e2020" loc="47:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fa9ff5e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fa9ff5e23a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fa9ff5e2530"/>
        <function-ref name="rxOn" scoped="" ref="0x7fa9ff5e26c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fa9ff5e2850"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fa9ff5e29e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fa9ff5e2b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fa9ff5e2d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fa9ff5e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fa9ff5cec70" loc="63:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa9ff5cec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5c9020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff5c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fa9ff5c69b0" loc="61:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa9ff5c69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5c6d30"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff5ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fa9ff5c2120" loc="69:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa9ff5c2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff5c24a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9ff5bd920" loc="78:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9ff5bd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9ff5bdca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9ff5bde30"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9ff5bc020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9ff5bc1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9ff5bc340"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff5bc4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9ff5bc660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9ff5bcca0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff5bc7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9ff5bc980"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9ff5bcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fa9ff5b4940" loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fa9ff5b4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff5b4cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff5b4e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff5e5390" loc="45:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff5e5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff5e5710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff5e58a0"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff5e5a30"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff5e5bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff5e5d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fa9ff5d3200" loc="60:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa9ff5d3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5d3580"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff5d3710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fa9ff5cb830" loc="59:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa9ff5cb830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff5cbcb0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff5cbe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fa9ff5d5020" loc="56:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fa9ff5d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ff5d53a0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ff5d5530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa9ff5d56c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa9ff5d5850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fa9ff5c0e40" loc="75:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fa9ff5c0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff5be1e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff5be370"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff5be500"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff5be690"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff5be820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fa9ff5c2830" loc="70:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa9ff5c2830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff5c2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9ff53d7d0" loc="45:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9ff53d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9ff53db50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fa9ff53a220" loc="46:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa9ff53a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff538b30"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff539a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9ff5384e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff538020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9ff536020"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff539090"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff5395a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9ff534260" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9ff534260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9ff5345e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fa9ff534af0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa9ff534af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9ff4f9390"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff4fb360"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9ff4fbce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9ff4fb820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9ff4f9850"/>
        <function-ref name="start" scoped="" ref="0x7fa9ff4fc970"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff4fce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9fdf63140" loc="44:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9fdf63140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fdf60b30"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdf629f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fdf604e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fdf60020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fdf5f020"/>
        <function-ref name="start" scoped="" ref="0x7fa9fdf62020"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fdf62530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fdf64860" loc="43:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fdf64860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fdf64be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9fdf5b2a0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9fdf5b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fdf59b30"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdf5aaa0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fdf594e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fdf59020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fdf58020"/>
        <function-ref name="start" scoped="" ref="0x7fa9fdf5a0d0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fdf5a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fdf5ca10" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fdf5ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fdf5cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fa9fdf43c10" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fdf43c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa9fdf42020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa9fdf421b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa9fdf42340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa9fdf424d0"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdf42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fa9fdf451b0" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fdf451b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fdf45530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9fdf456c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fdf45850"/>
        <function-ref name="get" scoped="" ref="0x7fa9fdf459e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fdf45b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fdf45d00"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fdf44020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fdf441b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fdf44340"/>
        <function-ref name="setMode" scoped="" ref="0x7fa9fdf444d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa9fdf44660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fa9fdf448f0" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fdf448f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa9fdf44c70"/>
        <function-ref name="getControl" scoped="" ref="0x7fa9fdf44e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fdf43020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa9fdf431b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa9fdf43340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fdf434d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa9fdf43660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa9fdf437f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa9fdf43980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fa9fdf39a80" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa9fdf39a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa9fdf39e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa9fdf38020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa9fdf381b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa9fdf38340"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdf384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa9fdf3b020" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fdf3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fdf3b3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9fdf3b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fdf3b6c0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fdf3b850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fdf3b9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fdf3bb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fdf3bd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fdf3a020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fdf3a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa9fdf3a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa9fdf3a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9fdf40da0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9fdf40da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fdf3c670"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdf3e610"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fdf3c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fdf3ead0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fdf3cb30"/>
        <function-ref name="start" scoped="" ref="0x7fa9fdf3fbf0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fdf3e150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fdf40510" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fdf40510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fdf40890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fa9fdf3a760" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9fdf3a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa9fdf3aae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa9fdf3ac70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fdf3ae00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa9fdf39020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa9fdf391b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fdf39340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa9fdf394d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa9fdf39660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa9fdf397f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa9ff51e080" loc="43:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9ff51e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9ff51d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9ff51d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9ff51d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9ff51de60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fa9ff5150f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fa9ff5150f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9ff514020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9ff5149a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9ff5144e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9ff514e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa9ff519cd0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9ff519cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9ff518b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9ff516550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9ff516090"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9ff516a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa9fdf565f0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa9fdf565f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fdf53e50"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdf55e00"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fdf53800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fdf53340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fdf52340"/>
        <function-ref name="start" scoped="" ref="0x7fa9fdf55430"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fdf55940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fa9fdf50d20" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fa9fdf50d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fdf4c670"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fdf4d550"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fdf4c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fdf4da10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fdf4cb30"/>
        <function-ref name="start" scoped="" ref="0x7fa9fdf4eb60"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fdf4d090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa9fdf529b0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9fdf529b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fdf517e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fdf501b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fdf51ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fdf50670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fa9ff4f3090" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fa9ff4f3090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4f3410"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4f35a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4f3730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4f38c0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4f3a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4f3be0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4f3d70"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fa9ff4f2390" loc="45:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fa9ff4f2390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4f2710"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4f28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4f2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4f2bc0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4f2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4f1020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4f11b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4f1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fa9ff4f16a0" loc="46:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fa9ff4f16a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4f1a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4f1bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4f1d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4f0020"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4f0340"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4f04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fa9ff4f5e60" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa9ff4f5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4f4210"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4f43a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4f4530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4f46c0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4f4850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4f49e0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4f4b70"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4f4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fa9ff4efce0" loc="48:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fa9ff4efce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4ee0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4ee230"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4ee3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4ee550"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4ee6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4ee870"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4eea00"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4eeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fa9ff53bb10" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fa9ff53bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4f5020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4f51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4f5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4f54d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4f5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4f57f0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4f5980"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4f5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fa9ff4f09b0" loc="47:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fa9ff4f09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4f0d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4ef1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4ef340"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4ef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4ef660"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4ef7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4ef980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9ff4eb2f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4eb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4eb670"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4eb800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff4eb990"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4ebb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4ebcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff4ebe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4ea020"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4ea1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff4ea340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff4ea4d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4ea660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff4ea7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff4ea980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff4eac10"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4eada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9ff4ec020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4ec3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4ec530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4ec6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4ec850"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4ec9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4ecb70"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4ecd00"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9ff4e7de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4e7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4e5180"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4e5310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff4e54a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4e5630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4e57c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff4e5950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4e5ae0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4e5c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff4e5e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff4e4020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4e41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff4e4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff4e44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff4e4760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4e48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9ff4e8b60" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4e8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4e7020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4e74d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4e77f0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4e7980"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4e7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9ff4e1930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4e1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4e1cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4e1e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff4e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4e01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4e0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff4e04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4e0660"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4e07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff4e0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff4e0b10"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4e0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff4e0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff4df020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff4df2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4df440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9ff4e2710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4e2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4e2a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4e2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4e2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4e1020"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4e11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4e1340"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4e14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4e1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9ff4dc480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4dc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4dc800"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4dc990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff4dcb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4dccb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4dce40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff4db020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4db1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4db340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff4db4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff4db660"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4db7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff4db980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff4dbb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff4dbda0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9ff4dd1d0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4dd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4dd550"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4dd6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4dd870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4dda00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4ddb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4ddd20"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4dc020"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9ff4d7020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4d73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4d7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff4d76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4d7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4d79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff4d7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4d7d00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4d6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff4d61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff4d6340"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4d64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff4d6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff4d67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff4d6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9ff4d9d70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4d9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4d8180"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4d8310"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4d84a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4d8630"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4d87c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4d8950"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4d8ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4d8c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9ff4d3de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4d3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4d2180"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4d2310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff4d24a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4d2630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4d27c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff4d2950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4d2ae0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4d2c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff4d2e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff4d1020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff4d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff4d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff4d1760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9ff4d4b60" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4d4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4d3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4d31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4d3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4d34d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4d3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4d37f0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4d3980"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4d3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9ff4cd930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9ff4cd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4cdcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4cde40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff4cc020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4cc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4cc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff4cc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4cc660"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4cc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff4cc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff4ccb10"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4ccca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff4cce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff4cb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff4cb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4cb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9ff4cf710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff4cf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff4cfa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff4cfc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff4cfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff4cd020"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff4cd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff4cd340"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff4cd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4cd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fa9ff4b8150" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fa9ff4b8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa9ff4b84d0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ff4b8660"/>
        <function-ref name="captured" scoped="" ref="0x7fa9ff4b87f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa9ff4b8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fa9ff4b8d60" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fa9ff4b8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ff4b7180"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ff4b7310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa9ff4b74a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa9ff4b7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fa9ff4b7a20" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa9ff4b7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ff4b7da0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ff4b4020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa9ff4b41b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa9ff4b4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fa9ff49c8f0" loc="42:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fa9ff49c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa9ff49cc70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa9ff49ce00"/>
        <function-ref name="captured" scoped="" ref="0x7fa9ff49b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9ff49b1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9ff49b340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa9ff49b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa9ff4b1a20" loc="40:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa9ff4b1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa9ff4b1da0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ff49d020"/>
        <function-ref name="captured" scoped="" ref="0x7fa9ff49d1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa9ff49d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fa9ff49d5d0" loc="41:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa9ff49d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa9ff49d950"/>
        <function-ref name="getControl" scoped="" ref="0x7fa9ff49dae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9ff49dc70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa9ff49de00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa9ff49c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9ff49c1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa9ff49c340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa9ff49c4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa9ff49c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fa9ff49b7a0" loc="43:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9ff49b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff49bb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff49bcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff49be40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff49a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff49a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff49a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff49a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff49a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff49a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff49a980"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff49ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff49aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff49ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff499120"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff4992b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fa9ff495480" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fa9ff495480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ff495800"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff495990"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ff495b20"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ff495cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ff495e40"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ff494020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa9ff4968a0" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fa9ff4968a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ff496c20"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ff496db0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa9ff495020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa9ff4951b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fa9ff492480" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fa9ff492480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9ff492800"/>
        <function-ref name="fired" scoped="" ref="0x7fa9ff492990"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ff492b20"/>
        <function-ref name="edge" scoped="" ref="0x7fa9ff492cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fa9ff492e40"/>
        <function-ref name="getValue" scoped="" ref="0x7fa9ff490020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa9ff4938b0" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fa9ff4938b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ff493c30"/>
        <function-ref name="disable" scoped="" ref="0x7fa9ff493dc0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa9ff492020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa9ff4921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa9ff0b6e50" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9ff0b6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b4410"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa9ff0bf160" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa9ff0bf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0bf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa9ff0b9e50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9ff0b9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b8210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa9ff0b3880" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9ff0b3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b3c00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa9ff0ab0a0" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa9ff0ab0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0ab420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0ab5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa9ff0b20a0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa9ff0b20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b2420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa9ff09f500" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa9ff09f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff09f880"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff09fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa9ff0a2500" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa9ff0a2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a2880"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa9ff0be490" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa9ff0be490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0be810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa9ff0a8880" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa9ff0a8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a8c00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa9ff0a3500" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9ff0a3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a3880"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa9ff0b8e50" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa9ff0b8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b7210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa9ff0b7e50" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa9ff0b7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b6210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa9ff0ad880" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa9ff0ad880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0adc00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0add90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa9ff0af0a0" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa9ff0af0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0af420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0af5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa9ff0b2880" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa9ff0b2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b2c00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa9ff0c1a90" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff0c1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa9ff0c1e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa9ff0c0020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa9ff0c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa9ff0bde00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9ff0bde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0bc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa9ff0bc490" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa9ff0bc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0bc910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa9ff0a6c80" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa9ff0a6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a50a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa9ff0bcbe0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa9ff0bcbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa9ff0a3ce0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9ff0a3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a20a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa9ff0bd160" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9ff0bd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0bd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa9ff0a80a0" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa9ff0a80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a8420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa9ff0b7670" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa9ff0b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b79f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa9ff0b8670" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9ff0b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b89f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa9ff0c0ad0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa9ff0c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0c0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa9ff0a90a0" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa9ff0a90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a9420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa9ff0ab880" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa9ff0ab880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0abc00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0abd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa9ff0a9880" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa9ff0a9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a9c00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa9ff0a1ce0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa9ff0a1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff09f0a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff09f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa9ff0a2ce0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa9ff0a2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a10a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa9ff0af880" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa9ff0af880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0afc00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0afd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa9ff0aa0a0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa9ff0aa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0aa420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0aa5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa9ff0a4ce0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa9ff0a4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a30a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa9ff0b1880" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa9ff0b1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b1c00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa9ff09fce0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa9ff09fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9ff09e0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9ff09e230"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff09e3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9ff09e550"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff09e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa9ff0c0480" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa9ff0c0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0c0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa9ff0b9670" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa9ff0b9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b99f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa9ff0b6670" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa9ff0b6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b69f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa9ff0ac0a0" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa9ff0ac0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0ac420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0ac5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa9ff0b10a0" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa9ff0b10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b1420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa9ff0ac880" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa9ff0ac880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0acc00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0acd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa9ff0b4870" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa9ff0b4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b4bf0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b4d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa9ff0bf7b0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa9ff0bf7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0bfb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa9ff0b30a0" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9ff0b30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b3420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff0c3e20" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff0c3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff0c11c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff0c1350"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff0c14e0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff0c1670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff0c1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa9ff0ba2f0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa9ff0ba2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0ba670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa9ff0b9020" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa9ff0b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0b93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa9ff0a4500" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa9ff0a4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a4880"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa9ff0a5ce0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa9ff0a5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a40a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa9ff0bd7b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9ff0bd7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0bdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa9ff0a5500" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa9ff0a5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a5880"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa9ff0a1500" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa9ff0a1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a1880"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa9ff0ad0a0" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa9ff0ad0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0ad420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0ad5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa9ff0aa880" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa9ff0aa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0aac00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0aad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa9ff0bfe00" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa9ff0bfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0be1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa9ff0beae0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa9ff0beae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0bee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa9ff0b00a0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa9ff0b00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b0420"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa9ff0ba940" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa9ff0ba940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0bacc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa9ff0b0880" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa9ff0b0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0b0c00"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0b0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa9ff0a60a0" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa9ff0a60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0a6820"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0a69b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa9ff09e9b0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa9ff09e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9ff09ed30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9ff09b020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff09b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9ff09b340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff09b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fa9ff451630" loc="41:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fa9ff451630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9ff4519b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9ff451b40"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff451cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9ff451e60"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff450020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa9ff452670" loc="40:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff452670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa9ff4529f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa9ff452b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa9ff452d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fa9ff4508c0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fa9ff4508c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff450c40"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff450dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fa9ff44e6f0" loc="43:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fa9ff44e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff44ea70"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff44ec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff455950" loc="39:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff455950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff455cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff455e60"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff452020"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff4521b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff452340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fa9ff44d510" loc="44:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fa9ff44d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff44d890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fa9ff437680" loc="55:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa9ff437680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff437a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff437b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fa9ff448bb0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fa9ff448bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9ff447020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9ff4471b0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff447340"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9ff4474d0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff447660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa9ff44c920" loc="44:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff44c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa9ff44cca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa9ff44ce30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa9ff449020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fa9ff441080" loc="54:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa9ff441080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa9ff441400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fa9ff440020" loc="56:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fa9ff440020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa9ff4403a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa9ff440530"/>
        <function-ref name="isState" scoped="" ref="0x7fa9ff4406c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa9ff440850"/>
        <function-ref name="requestState" scoped="" ref="0x7fa9ff4409e0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa9ff440b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa9ff443400" loc="53:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa9ff443400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff443780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff443910"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff443aa0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff443c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff443dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fa9ff445020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fa9ff445020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff4453a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff445530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fa9ff445db0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fa9ff445db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff444180"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff444310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9ff440df0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9ff440df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9ff43f1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9ff43f350"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9ff43f4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9ff43f670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9ff43f800"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff43f990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9ff43fb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9ff4391b0"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff43fcb0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9ff43fe40"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9ff439020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff449810" loc="45:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff449810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff449b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff449d20"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff448020"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff4481b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff448340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fa9ff433120" loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fa9ff433120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff4334a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff433630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fa9ff444ba0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fa9ff444ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff443020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa9ff3d8770" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa9ff3d8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa9ff3d8af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa9ff3d8c80"/>
        <function-ref name="isState" scoped="" ref="0x7fa9ff3d8e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa9ff3d5020"/>
        <function-ref name="requestState" scoped="" ref="0x7fa9ff3d51b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa9ff3d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa9ff3d4280" loc="66:../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa9ff3d4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa9ff3d4600"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa9ff3d4790"/>
        <function-ref name="isState" scoped="" ref="0x7fa9ff3d4920"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa9ff3d4ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa9ff3d4c40"/>
        <function-ref name="forceState" scoped="" ref="0x7fa9ff3d4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9ff3cf020" loc="66:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9ff3cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9ff3cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa9ff3cfb70" loc="67:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa9ff3cfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa9ff3ce020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa9ff3ce1b0"/>
        <function-ref name="isState" scoped="" ref="0x7fa9ff3ce340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa9ff3ce4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa9ff3ce660"/>
        <function-ref name="forceState" scoped="" ref="0x7fa9ff3ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa9ff0ea020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa9ff0ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff0ea3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff0ea530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa9ff0eb8f0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa9ff0eb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa9ff0ebc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff3b7c40" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff3b7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff0eb020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff0eb1b0"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff0eb340"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff0eb4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff0eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9fde6b440" loc="82:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fde6b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9fde6b7c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fde6b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa9fde6ad70" loc="87:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa9fde6ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fde69180"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fde69310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fa9fde695a0" loc="89:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa9fde695a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa9fde69920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa9fde6bbe0" loc="83:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa9fde6bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa9fde6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fde6c770" loc="81:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fde6c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fde6caf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fde6cc80"/>
        <function-ref name="request" scoped="" ref="0x7fa9fde6ce10"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fde6b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fde6b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa9fde6a2b0" loc="85:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa9fde6a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa9fde6a630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa9fde6a7c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa9fde6a950"/>
        <function-ref name="write" scoped="" ref="0x7fa9fde6aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa9ff34a430" loc="74:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff34a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9ff34a7b0"/>
        <function-ref name="configure" scoped="" ref="0x7fa9ff34a940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa9ff3483f0" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa9ff3483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff348770"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff348900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fa9ff345510" loc="80:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa9ff345510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa9ff345890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa9ff34ac20" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa9ff34ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa9ff349020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fa9ff346280" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fa9ff346280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff346600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff346790"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff346920"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff346ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff346c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff34b1d0" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff34b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff34b550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff34b6e0"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff34b870"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff34ba00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff34bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa9ff349320" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa9ff349320"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa9ff3496a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa9ff349830"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa9ff3499c0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff349b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fa9ff3416a0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa9ff3416a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9ff341a20"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9ff341bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa9ff2d0c40" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff2d0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9ff2cf020"/>
        <function-ref name="configure" scoped="" ref="0x7fa9ff2cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa9ff2ce700" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa9ff2ce700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9ff2ceaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9ff2cec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fa9ff2cde00" loc="82:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa9ff2cde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa9ff2cc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa9ff2cf440" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa9ff2cf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa9ff2cf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fa9ff2cc490" loc="83:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fa9ff2cc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa9ff2cc810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa9ff2cc9a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa9ff2ccb30"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa9ff2cccc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa9ff2cce50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa9ff2ca020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa9ff2ca1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa9ff2ca340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa9ff2ca4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa9ff2ca660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa9ff2ca7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa9ff2ca980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa9ff2cab10"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa9ff2cada0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa9ff2c9020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa9ff2c91b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa9ff2c9340"/>
        <function-ref name="isUart" scoped="" ref="0x7fa9ff2c94d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa9ff2c9660"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa9ff2c97f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa9ff2c9980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa9ff2c9b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa9ff2c9ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa9ff2c9e30"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9ff2c8020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa9ff2c83b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa9ff2c8540"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa9ff2c86d0"/>
        <function-ref name="tx" scoped="" ref="0x7fa9ff2c8860"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa9ff2c89f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa9ff2c8b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa9ff2c8d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa9ff2c7020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa9ff2c71b0"/>
        <function-ref name="rx" scoped="" ref="0x7fa9ff2c7340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa9ff2c74d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa9ff2c7660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa9ff2c77f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa9ff2c7980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa9ff2c7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9ff2c65a0" loc="85:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9ff2c65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9ff2c6920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9ff2c6ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9ff2c6c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9ff2c6dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9ff2c5020"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff2c51b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9ff2c5340"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9ff2c5980"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff2c5660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9ff2c54d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9ff2c57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fa9ff2cd060" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fa9ff2cd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff2cd400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff2cd590"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff2cd720"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff2cd8b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff2cda40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff2d1e80" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff2d1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff2d0240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff2d03d0"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff2d0560"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff2d06f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff2d0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa9ff2cfa50" loc="78:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa9ff2cfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa9ff2cfdd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa9ff2ce020"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa9ff2ce1b0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff2ce340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fa9ff2c7de0" loc="84:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa9ff2c7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9ff2c6180"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9ff2c6310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fa9ff2c5c50" loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fa9ff2c5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9ff2c4020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9ff2c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fa9ff2b58a0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa9ff2b58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ff2b5c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fa9ff2b83b0" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9ff2b83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9ff2b8730"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9ff2b88c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fa9ff2bf860" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9ff2bf860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa9ff2bfbe0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa9ff2bfd70"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa9ff2bc020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa9ff2bc1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa9ff2bc340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa9ff2bc4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa9ff2bc660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa9ff2bc7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa9ff2bc980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa9ff2bcb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa9ff2bcca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa9ff2bce30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa9ff2bb020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa9ff2bb2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa9ff2bb440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa9ff2bb5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa9ff2bb760"/>
        <function-ref name="isUart" scoped="" ref="0x7fa9ff2bb8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa9ff2bba80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa9ff2bbc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa9ff2bbda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa9ff2ba020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa9ff2ba1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa9ff2ba340"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9ff2ba4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa9ff2ba860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa9ff2ba9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa9ff2bab80"/>
        <function-ref name="tx" scoped="" ref="0x7fa9ff2bad10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa9ff2b9020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa9ff2b91b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa9ff2b9340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa9ff2b94d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa9ff2b9660"/>
        <function-ref name="rx" scoped="" ref="0x7fa9ff2b97f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa9ff2b9980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa9ff2b9b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa9ff2b9ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa9ff2b9e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa9ff2b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fa9ff27b670" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fa9ff27b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff27b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff27bb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff27bd10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff27a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff27a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff27a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff27a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff27a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff27a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff27a980"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff27ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff27aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff27ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff279120"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff2792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa9ff2afdc0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa9ff2afdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9ff2ae180"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9ff2ae310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fa9ff279670" loc="83:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fa9ff279670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff2799f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff279b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff279d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff278020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff2781b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff278340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff2784d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff278660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff2787f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff278980"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff278b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff278ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff278e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff277120"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff2772b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fa9ff277670" loc="84:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fa9ff277670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff2779f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff277b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff277d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff276020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff2761b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff276340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff2764d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff276660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff2767f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff276980"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff276b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff276ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff276e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff275120"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff2752b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fa9ff2b3020" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fa9ff2b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa9ff2b33a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa9ff2b3530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa9ff2b36c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa9ff2b3850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa9ff2b39e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa9ff2b3b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa9ff2b3d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa9ff2b2020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa9ff2b21b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa9ff2b2340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa9ff2b24d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa9ff2b2660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa9ff2b27f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa9ff2b2a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa9ff2b2c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa9ff2b2da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa9ff2b1020"/>
        <function-ref name="isUart" scoped="" ref="0x7fa9ff2b11b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa9ff2b1340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa9ff2b14d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa9ff2b1660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa9ff2b17f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa9ff2b1980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa9ff2b1b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9ff2b1ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa9ff2b0220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa9ff2b03b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa9ff2b0540"/>
        <function-ref name="tx" scoped="" ref="0x7fa9ff2b06d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa9ff2b0860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa9ff2b09f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa9ff2b0b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa9ff2b0d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa9ff2af020"/>
        <function-ref name="rx" scoped="" ref="0x7fa9ff2af1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa9ff2af340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa9ff2af4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa9ff2af660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa9ff2af7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa9ff2af980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fa9ff2855b0" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fa9ff2855b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa9ff285930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa9ff285ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa9ff285c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa9ff285de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa9ff2ac020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa9ff2ac1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa9ff2ac340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa9ff2ac4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9ff2ac660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa9ff2ac7f0"/>
        <function-ref name="getData" scoped="" ref="0x7fa9ff2ac980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa9ff2acb10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa9ff2acca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa9ff2ab020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa9ff2ab1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fa9ff2ab340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa9ff2ab4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa9ff2ab660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa9ff2ab7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa9ff2ab980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa9ff2abb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa9ff2abca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa9ff2abe30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa9ff284020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa9ff2841b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa9ff284540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa9ff2846d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa9ff284860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa9ff2849f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa9ff284b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa9ff284d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa9ff283020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa9ff2831b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa9ff283340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa9ff2834d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa9ff283660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa9ff2837f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa9ff283980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa9ff283b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa9ff283ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa9ff283e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa9ff282020"/>
        <function-ref name="setData" scoped="" ref="0x7fa9ff2821b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa9ff282340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa9ff2824d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa9ff282660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa9ff2827f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa9ff282980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa9ff282b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa9ff281420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa9ff2815b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa9ff281740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa9ff2818d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa9ff281a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa9ff281bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa9ff281d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa9ff280020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa9ff2801b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa9ff280340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fa9ff27e670" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fa9ff27e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff27e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff27eb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff27ed10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff27c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff27c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff27c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff27c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff27c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff27c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff27c980"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff27cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff27cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff27ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff27b120"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff27b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa9ff2ae750" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa9ff2ae750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ff2aead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fa9ff280700" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fa9ff280700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff280a80"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff280c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff280da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff27f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff27f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff27f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff27f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff27f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff27f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff27f980"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff27fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff27fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff27fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff27e120"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff27e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9fde62d90" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fde62d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9fde61180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fde61310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fa9fde5a020" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa9fde5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9fde5a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9fde535d0" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fde535d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9fde53950"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fde53ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fa9fde5a630" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa9fde5a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa9fde5a9b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa9fde5ab40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa9fde5acd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa9fde5ae60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa9fde59020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa9fde591b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa9fde59340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa9fde594d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9fde59660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa9fde597f0"/>
        <function-ref name="getData" scoped="" ref="0x7fa9fde59980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa9fde59b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa9fde59ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa9fde58020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa9fde581b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fa9fde58340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa9fde584d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa9fde58660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa9fde587f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa9fde58980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa9fde58b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa9fde58ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa9fde58e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa9fde57020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa9fde571b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa9fde57540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa9fde576d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa9fde57860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa9fde579f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa9fde57b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa9fde57d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa9fde56020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa9fde561b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa9fde56340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa9fde564d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa9fde56660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa9fde567f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa9fde56980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa9fde56b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa9fde56ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa9fde56e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa9fde55020"/>
        <function-ref name="setData" scoped="" ref="0x7fa9fde551b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa9fde55340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa9fde554d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa9fde55660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa9fde557f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa9fde55980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa9fde55b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa9fde54420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa9fde545b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa9fde54740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa9fde548d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa9fde54a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa9fde54bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa9fde54d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa9fde53020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa9fde531b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa9fde53340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fa9fde5b760" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9fde5b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9fde5bae0"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9fde5bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fde62140" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fde62140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fde624c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fde62650"/>
        <function-ref name="request" scoped="" ref="0x7fa9fde627e0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fde62970"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fde62b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fa9fde61d40" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9fde61d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa9fde5f0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa9fde5f270"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa9fde5f400"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa9fde5f590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa9fde5f720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa9fde5f8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa9fde5fa40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa9fde5fbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa9fde5fd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa9fde5e020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa9fde5e1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa9fde5e340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa9fde5e4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa9fde5e760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa9fde5e8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa9fde5ea80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa9fde5ec10"/>
        <function-ref name="isUart" scoped="" ref="0x7fa9fde5eda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa9fde5d020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa9fde5d1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa9fde5d340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa9fde5d4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa9fde5d660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa9fde5d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fde5d980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa9fde5dd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa9fde5c020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa9fde5c1b0"/>
        <function-ref name="tx" scoped="" ref="0x7fa9fde5c340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa9fde5c4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa9fde5c660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa9fde5c7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa9fde5c980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa9fde5cb10"/>
        <function-ref name="rx" scoped="" ref="0x7fa9fde5cca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa9fde5ce30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa9fde5b020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa9fde5b1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa9fde5b340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa9fde5b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9fde615a0" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fde615a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fde61920"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fde61ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9ff1d52c0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9ff1d52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9ff1d5640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9ff1d57d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9ff1d48a0" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff1d48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9ff1d4c20"/>
        <function-ref name="configure" scoped="" ref="0x7fa9ff1d4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa9ff1d94d0" loc="39:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa9ff1d94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9ff1d9850"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9ff1d99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff1d6020" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff1d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff1d63a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff1d6530"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff1d66c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff1d6850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff1d69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa9ff1d83f0" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa9ff1d83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ff1d8770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9ff1d5ad0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff1d5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9ff1d5e50"/>
        <function-ref name="userId" scoped="" ref="0x7fa9ff1d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa9ff1bfbf0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff1bfbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9ff1be020"/>
        <function-ref name="userId" scoped="" ref="0x7fa9ff1be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa9ff1d2d60" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa9ff1d2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9ff1d1180"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9ff1d1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fa9ff1bf5e0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fa9ff1bf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ff1bf960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa9ff1d1710" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa9ff1d1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9ff1d1ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fa9ff1d1d80" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fa9ff1d1d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9ff1bf180"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9ff1bf310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9ff1bb6c0" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9ff1bb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9ff1bba60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9ff1bbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9ff1b83e0" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9ff1b83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9ff1b8780"/>
        <function-ref name="configure" scoped="" ref="0x7fa9ff1b8910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa9ff1bbe40" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9ff1bbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff1ba1e0"/>
        <function-ref name="requested" scoped="" ref="0x7fa9ff1ba370"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff1ba500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff1ba690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9ff1ba820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff1bc890" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff1bc890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff1bcc30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff1bcdc0"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff1bb020"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff1bb1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff1bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9ff1baa70" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9ff1baa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9ff1badf0"/>
        <function-ref name="userId" scoped="" ref="0x7fa9ff1b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fddcd020" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fddcd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fddcd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa9fddcd630" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa9fddcd630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fddcd9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa9fddcdb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa9fddcdcd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fddcde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9fddc96c0" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fddc96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9fddc9a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fddc9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9fddc7400" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fddc7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9fddc77a0"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fddc7930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa9fddc7bc0" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa9fddc7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fddc6020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa9fddc61b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa9fddc6340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fddc64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa9fddc9e40" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fddc9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fddc81e0"/>
        <function-ref name="requested" scoped="" ref="0x7fa9fddc8370"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fddc8500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fddc8690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fddc8820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fddc6720" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fddc6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fddc6aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fddc6c30"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fddc6dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fddc5020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fddc51b0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fddc5340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fddc54d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fddc5b10"/>
        <function-ref name="set" scoped="" ref="0x7fa9fddc57f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fddc5660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fddc5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fddca850" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fddca850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fddcabf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fddcad80"/>
        <function-ref name="request" scoped="" ref="0x7fa9fddc9020"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fddc91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fddc9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9fddc8a70" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fddc8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fddc8df0"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fddc7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa9fddc5de0" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fa9fddc5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fddc4180"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fddc4310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fa9ff1b1350" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa9ff1b1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa9ff1b16d0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa9ff1b1860"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa9ff1b19f0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa9ff1b1b80"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa9ff1b1d10"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa9ff1ae020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa9ff1ae1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa9ff1ae340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9ff1ae4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa9ff1ae660"/>
        <function-ref name="getData" scoped="" ref="0x7fa9ff1ae7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa9ff1ae980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa9ff1aeb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa9ff1aeda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa9ff1ad020"/>
        <function-ref name="getIV" scoped="" ref="0x7fa9ff1ad1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa9ff1ad340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa9ff1ad4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa9ff1ad660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa9ff1ad7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa9ff1ad980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa9ff1adb10"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa9ff1adca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa9ff1ade30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa9ff1ac020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa9ff1ac3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa9ff1ac540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa9ff1ac6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa9ff1ac860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa9ff1ac9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa9ff1acb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa9ff1acd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa9ff1ab020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa9ff1ab1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa9ff1ab340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa9ff1ab4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa9ff1ab660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa9ff1ab7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa9ff1ab980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa9ff1abb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa9ff1abca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa9ff1abe30"/>
        <function-ref name="setData" scoped="" ref="0x7fa9ff1aa020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa9ff1aa1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa9ff1aa340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa9ff1aa4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa9ff1aa660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa9ff1aa7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa9ff1aa980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa9ff1a9020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa9ff1a91b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa9ff1a9340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa9ff1a94d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa9ff1a9660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa9ff1a97f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa9ff1a9980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa9ff1a9b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa9ff1a9ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa9ff1a9e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fa9ff19e0c0" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fa9ff19e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa9ff19e440"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa9ff19e5d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa9ff19e760"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa9ff19e8f0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa9ff19ea80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa9ff19ec10"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa9ff19eda0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa9ff19d020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa9ff19d1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa9ff19d340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa9ff19d4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa9ff19d660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa9ff19d7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa9ff19da80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa9ff19dc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa9ff19dda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa9ff19c020"/>
        <function-ref name="isUart" scoped="" ref="0x7fa9ff19c1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa9ff19c340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa9ff19c4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa9ff19c660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa9ff19c7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa9ff19c980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa9ff19cb10"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9ff19cca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa9ff19b220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa9ff19b3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa9ff19b540"/>
        <function-ref name="tx" scoped="" ref="0x7fa9ff19b6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa9ff19b860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa9ff19b9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa9ff19bb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa9ff19bd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa9ff19a020"/>
        <function-ref name="rx" scoped="" ref="0x7fa9ff19a1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa9ff19a340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa9ff19a4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa9ff19a660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa9ff19a7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa9ff19a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fa9ff198cb0" loc="43:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fa9ff198cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff1970a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff197230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff1973c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff197550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff1976e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff197870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff197a00"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff197b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff197d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff196020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff1961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff196340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff1964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff196760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff1968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fa9ff1a5020" loc="39:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fa9ff1a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa9ff1a53a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa9ff1a5530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa9ff1a56c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa9ff1a5850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa9ff1a59e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa9ff1a5b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa9ff1a5d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa9ff1a4020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9ff1a41b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa9ff1a4340"/>
        <function-ref name="getData" scoped="" ref="0x7fa9ff1a44d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa9ff1a4660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa9ff1a47f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa9ff1a4a80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa9ff1a4c10"/>
        <function-ref name="getIV" scoped="" ref="0x7fa9ff1a4da0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa9ff1a3020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa9ff1a31b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa9ff1a3340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa9ff1a34d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa9ff1a3660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa9ff1a37f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa9ff1a3980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa9ff1a3b10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa9ff1a3ca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa9ff1a2220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa9ff1a23b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa9ff1a2540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa9ff1a26d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa9ff1a2860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa9ff1a29f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa9ff1a2b80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa9ff1a2d10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa9ff1a1020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa9ff1a11b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa9ff1a1340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa9ff1a14d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa9ff1a1660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa9ff1a17f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa9ff1a1980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa9ff1a1b10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa9ff1a1ca0"/>
        <function-ref name="setData" scoped="" ref="0x7fa9ff1a1e30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa9ff1a0020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa9ff1a01b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa9ff1a0340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa9ff1a04d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa9ff1a0660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa9ff1a07f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa9ff1a0d80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa9ff19f020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa9ff19f1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa9ff19f340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa9ff19f4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa9ff19f660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa9ff19f7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa9ff19f980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa9ff19fb10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa9ff19fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fa9ff19ad40" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fa9ff19ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9ff1990e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9ff199270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9ff199400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9ff199590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9ff199720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9ff1998b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9ff199a40"/>
        <function-ref name="get" scoped="" ref="0x7fa9ff199bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9ff199d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9ff198020"/>
        <function-ref name="set" scoped="" ref="0x7fa9ff1981b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9ff198340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9ff1984d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9ff198760"/>
        <function-ref name="clr" scoped="" ref="0x7fa9ff1988f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa9ff083c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9ff083c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff082210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa9ff08eda0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa9ff08eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff08d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa9ff087b50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9ff087b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff085020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa9ff081670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9ff081670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0819f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff081b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa9ff07ae50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa9ff07ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff078210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa9ff081e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa9ff081e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff080210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa9ff06d2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa9ff06d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff06d670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff06d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa9ff06f2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa9ff06f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff06f670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff06f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa9ff08b120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa9ff08b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff08b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa9ff075670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa9ff075670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0759f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff075b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa9ff0702f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9ff0702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff070670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff070800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa9ff085c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa9ff085c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff084020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa9ff084c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa9ff084c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff083020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa9ff07b670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa9ff07b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff07b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff07bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa9ff07de50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa9ff07de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff07c210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff07c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa9ff080670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa9ff080670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0809f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff080b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa9ff08f760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff08f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa9ff08fae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa9ff08fc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa9ff08fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa9ff08aaa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9ff08aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff08ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa9ff089120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa9ff089120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0895a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa9ff074a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa9ff074a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff074df0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff073020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa9ff089870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa9ff089870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff089bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa9ff070ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9ff070ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff070e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff06f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa9ff08bdc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9ff08bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff08a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa9ff076e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa9ff076e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff075210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa9ff084480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa9ff084480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff084800"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff084990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa9ff085480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9ff085480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff085800"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff085990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa9ff08e750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa9ff08e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff08ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa9ff077e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa9ff077e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff076210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa9ff078670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa9ff078670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0789f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff078b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa9ff076670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa9ff076670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0769f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff076b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa9ff06ead0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa9ff06ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff06ee50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff06d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa9ff06fad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa9ff06fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff06fe50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff06e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa9ff07c670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa9ff07c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff07c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff07cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa9ff078e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa9ff078e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff077210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa9ff072ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa9ff072ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff072e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff070020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa9ff07e670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa9ff07e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff07e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff07eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa9ff06dad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa9ff06dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9ff06de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9ff06c020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff06c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9ff06c340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff06c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa9ff08e100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa9ff08e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff08e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa9ff087370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa9ff087370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0876f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff087880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa9ff083480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa9ff083480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff083800"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff083990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa9ff07be50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa9ff07be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff07a210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff07a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa9ff080e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa9ff080e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff07e210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff07e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa9ff07a670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa9ff07a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff07a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff07ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa9ff082670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa9ff082670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0829f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff082b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa9ff08d450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa9ff08d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff08d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa9ff082e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9ff082e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff081210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff090a80" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff090a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff090e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff08f020"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff08f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff08f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff08f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa9ff088020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa9ff088020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa9ff088cc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa9ff088cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0870a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa9ff0722f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa9ff0722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff072670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff072800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa9ff073ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa9ff073ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff073e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff072020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa9ff08a450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9ff08a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff08a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa9ff0732f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa9ff0732f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff073670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff073800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa9ff06e2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa9ff06e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff06e670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff06e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa9ff07ce50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa9ff07ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff07b210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff07b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa9ff077670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa9ff077670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0779f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff077b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa9ff08daa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa9ff08daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff08de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa9ff08b770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa9ff08b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff08baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa9ff07ee50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa9ff07ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff07d210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff07d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa9ff088670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa9ff088670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0889f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa9ff07d670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa9ff07d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff07d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff07db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa9ff075e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa9ff075e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff074610"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0747a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa9ff06c7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa9ff06c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9ff06cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9ff06ccb0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff06ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9ff06b020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff06b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa9ff057c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9ff057c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff055210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa9ff061da0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa9ff061da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff060180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa9ff05ab50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9ff05ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff059020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa9ff054670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9ff054670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0549f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff054b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa9ff04de50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa9ff04de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04c210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa9ff054e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa9ff054e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff053210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa9ff0402f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa9ff0402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff040670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff040800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa9ff0432f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa9ff0432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff043670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff043800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa9ff05f120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa9ff05f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff05f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa9ff048670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa9ff048670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0489f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff048b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa9ff0442f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9ff0442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff044670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff044800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa9ff059c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa9ff059c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff058020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa9ff058c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa9ff058c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff057020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa9ff04e670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa9ff04e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa9ff051e50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa9ff051e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04f210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa9ff053670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa9ff053670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0539f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff053b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa9ff062760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9ff062760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa9ff062ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa9ff062c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa9ff062e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa9ff05eaa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9ff05eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff05ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa9ff05c120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa9ff05c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff05c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa9ff047a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa9ff047a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff047df0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff046020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa9ff05c870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa9ff05c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff05cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa9ff044ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9ff044ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff044e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff043020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa9ff05fdc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9ff05fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff05e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa9ff04ae50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa9ff04ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff048210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa9ff058480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa9ff058480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff058800"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff058990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa9ff059480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9ff059480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff059800"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff059990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa9ff061750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa9ff061750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff061ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa9ff04be50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa9ff04be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04a210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa9ff04c670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa9ff04c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa9ff04a670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa9ff04a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa9ff041ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa9ff041ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff041e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff040020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa9ff043ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa9ff043ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff043e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff041020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa9ff04f670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa9ff04f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa9ff04ce50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa9ff04ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04b210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa9ff045ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa9ff045ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff045e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff044020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa9ff052670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa9ff052670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0529f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff052b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa9ff040ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa9ff040ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9ff040e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9ff03f020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff03f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9ff03f340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff03f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa9ff061100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa9ff061100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff061480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa9ff05a370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa9ff05a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff05a6f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff05a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa9ff057480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa9ff057480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff057800"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff057990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa9ff04ee50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa9ff04ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04d210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa9ff053e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa9ff053e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff052210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa9ff04d670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa9ff04d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa9ff055670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa9ff055670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0559f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff055b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa9ff060450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa9ff060450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff0607d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa9ff055e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9ff055e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff054210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9ff0649e0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9ff0649e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9ff064d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9ff062020"/>
        <function-ref name="request" scoped="" ref="0x7fa9ff0621b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9ff062340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9ff0624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa9ff05b020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa9ff05b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff05b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa9ff05bcc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa9ff05bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff05a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa9ff0452f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa9ff0452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff045670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff045800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa9ff046ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa9ff046ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff046e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff045020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa9ff05e450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9ff05e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff05e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa9ff0462f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa9ff0462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff046670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff046800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa9ff0412f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa9ff0412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff041670"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff041800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa9ff04fe50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa9ff04fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04e210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa9ff04b670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa9ff04b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff04b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff04bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa9ff060aa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa9ff060aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff060e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa9ff05f770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa9ff05f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff05faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa9ff052e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa9ff052e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff051210"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa9ff05b670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa9ff05b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9ff05b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa9ff051670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa9ff051670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0519f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff051b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa9ff048e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa9ff048e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff047610"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0477a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa9ff03f7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa9ff03f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9ff03fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9ff03fcb0"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff03fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9ff03e020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9ff03e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fa9ff037b20" loc="54:../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa9ff037b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa9ff034020"/>
        <function-ref name="changed" scoped="" ref="0x7fa9ff0341b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa9ff034340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa9ff0344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fa9ff036d20" loc="13:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa9ff036d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fa9ff0200e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fa9ff01c310" loc="5:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa9ff01c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fa9ff01c690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fa9ff019880" loc="8:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fa9ff019880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff019c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fa9ff00e020" loc="8:../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fa9ff00e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff00e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fa9ff004bd0" loc="14:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fa9ff004bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff007020"/>
        <function-ref name="write" scoped="" ref="0x7fa9ff0071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fa9ff007530" loc="15:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fa9ff007530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9ff0078b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9ff007a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fa9ff008140" loc="11:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fa9ff008140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9ff0084c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fa9ff00dc50" loc="8:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fa9ff00dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feff4020"/>
        <function-ref name="write" scoped="" ref="0x7fa9feff41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fa9feff4540" loc="11:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fa9feff4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9feff48c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9feff4a50"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9feff4be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9feff4d70"/>
        <function-ref name="get" scoped="" ref="0x7fa9feff2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9feff21b0"/>
        <function-ref name="set" scoped="" ref="0x7fa9feff2340"/>
        <function-ref name="clr" scoped="" ref="0x7fa9feff24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fa9fefe9910" loc="15:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fa9fefe9910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f09e0"/>
            <typename><typedef-ref name="TMicro" ref="0x7faa004f0d50"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fa9fefed780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fa9fefef150" loc="11:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fa9fefef150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fefef4d0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fefef660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fa9fefef9f0" loc="14:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fa9fefef9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fefefd70"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fefee020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fefee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fefee340"/>
        <function-ref name="get" scoped="" ref="0x7fa9fefee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fefee660"/>
        <function-ref name="set" scoped="" ref="0x7fa9fefee7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fefee980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fa9feff1c90" loc="41:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fa9feff1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f09e0"/>
            <typename><typedef-ref name="TMicro" ref="0x7faa004f0d50"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fa9fefc9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fa9fefc7a90" loc="54:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fa9fefc7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f09e0"/>
            <typename><typedef-ref name="TMicro" ref="0x7faa004f0d50"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fa9fefc68d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa9fefb4020" loc="55:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9fefb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f09e0"/>
            <typename><typedef-ref name="TMicro" ref="0x7faa004f0d50"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fefb4e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fefb3800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fefb3340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fefb3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fa9fefaf530" loc="46:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fa9fefaf530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f09e0"/>
            <typename><typedef-ref name="TMicro" ref="0x7faa004f0d50"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fefae3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fefaed50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fefae890"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fefac260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa9fefa7020" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa9fefa7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fefa73a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa9fefa7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa9fefa76c0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fefa7850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa9fefa79e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fefa7b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fefa7d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fefa6020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fefa61b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa9fefa6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa9fefa64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa9fefabe50" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9fefabe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f09e0"/>
            <typename><typedef-ref name="TMicro" ref="0x7faa004f0d50"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fefaaca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fefa9670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fefa91b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fefa9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fa9feff5590" loc="3:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fa9feff5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9feff5910"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9feff5aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9feff5c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9feff5dc0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fefa2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fefa21b0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fefa2340"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fefa24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa9fefa0c50" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa9fefa0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fef9f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fef9f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9fef9f340"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fef9f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fef9f660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9fef9f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fef9f980"/>
        <function-ref name="get" scoped="" ref="0x7fa9fef9fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9fef9fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9fef9fe30"/>
        <function-ref name="set" scoped="" ref="0x7fa9fef9e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9fef9e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9fef9e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9fef9e5d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fef9e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa9fefa19e0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa9fefa19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fefa1d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fefa0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fefa01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fefa0340"/>
        <function-ref name="get" scoped="" ref="0x7fa9fefa04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fefa0660"/>
        <function-ref name="set" scoped="" ref="0x7fa9fefa07f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fefa0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa9fefa3a10" loc="14:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa9fefa3a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fefa3d90"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fef99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa9fef8acb0" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9fef8acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa9fef890a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa9fef89230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa9fef893c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa9fef89550"/>
        <function-ref name="setCca" scoped="" ref="0x7fa9fef896e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa9fef89870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fa9fef86990" loc="47:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa9fef86990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa9fef86d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fa9fef8a020" loc="45:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa9fef8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fef8a3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fef8a530"/>
        <function-ref name="modify" scoped="" ref="0x7fa9fef8a6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fef8a850"/>
        <function-ref name="resend" scoped="" ref="0x7fa9fef8a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa9fef8d6c0" loc="44:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa9fef8d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fef8da40"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fef8dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fa9fef88150" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fa9fef88150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa9fef884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa9fef7a970" loc="51:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9fef7a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa9fef7acf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa9fef7ae80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa9fef79030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa9fef791c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fa9fef79350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa9fef794e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fa9fef72950" loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa9fef72950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa9fef6f020"/>
        <function-ref name="clear" scoped="" ref="0x7fa9fef6f750"/>
        <function-ref name="isValid" scoped="" ref="0x7fa9fef70780"/>
        <function-ref name="set" scoped="" ref="0x7fa9fef6fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fa9fef5a020" loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9fef5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fef5a3a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fef5a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fa9fef5a890" loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa9fef5a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fef5ac10"/>
        <function-ref name="write" scoped="" ref="0x7fa9fef5ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fa9fef79900" loc="52:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa9fef79900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa9fef79c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fa9fef5e530" loc="72:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa9fef5e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fef5e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fa9fef6d880" loc="60:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fa9fef6d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa9fef6dc00"/>
        <function-ref name="disable" scoped="" ref="0x7fa9fef6dd90"/>
        <function-ref name="captured" scoped="" ref="0x7fa9fef6c020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa9fef6c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fa9fef78ae0" loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fa9fef78ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fef74390"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fef75360"/>
        <function-ref name="startAt" scoped="" ref="0x7fa9fef75ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fef75820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa9fef74850"/>
        <function-ref name="start" scoped="" ref="0x7fa9fef77970"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fef77e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa9fef74d00" loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fef74d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa9fef730a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa9fef73230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa9fef733c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa9fef73550"/>
        <function-ref name="getPower" scoped="" ref="0x7fa9fef736e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa9fef73870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fa9fef60550" loc="68:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9fef60550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fef608d0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fef60a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fa9fef60e00" loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa9fef60e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fef5f1c0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fef5f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fa9fef54d40" loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fa9fef54d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fef570e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fa9fef57270"/>
        <function-ref name="sfd" scoped="" ref="0x7fa9fef57400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9fef7bbc0" loc="50:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9fef7bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fef7a020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fef7a1b0"/>
        <function-ref name="modify" scoped="" ref="0x7fa9fef7a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fef7a4d0"/>
        <function-ref name="resend" scoped="" ref="0x7fa9fef7a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fa9fef62d10" loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9fef62d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa9fef610e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa9fef61270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa9fef61400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fa9fef5ec60" loc="73:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9fef5ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fef5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fa9fef65820" loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa9fef65820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fef65ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fef65d30"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fef64020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fef641b0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fef64340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fef644d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fef64660"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fef647f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fef7cc60" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fef7cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fef7b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa9fef73bb0" loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fef73bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fef72020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa9fef721b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa9fef72340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fa9fef67be0" loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa9fef67be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fef6d020"/>
        <function-ref name="isSet" scoped="" ref="0x7fa9fef6d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fef6d340"/>
        <function-ref name="set" scoped="" ref="0x7fa9fef6d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fa9fef5c3e0" loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9fef5c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fef5c960"/>
        <function-ref name="write" scoped="" ref="0x7fa9fef5caf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa9fef62020" loc="65:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa9fef62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fef623a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fef62530"/>
        <function-ref name="request" scoped="" ref="0x7fa9fef626c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fef62850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fef629e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fa9fef6c500" loc="61:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fa9fef6c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fef6c980"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fef6cb10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fef6cca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fef6ce30"/>
        <function-ref name="get" scoped="" ref="0x7fa9fef65020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fef651b0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fef65340"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fef654d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fa9fef59130" loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa9fef59130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fef594b0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fef59640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fa9fef599c0" loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa9fef599c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fef59d40"/>
        <function-ref name="write" scoped="" ref="0x7fa9fef58020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fa9fef5f6d0" loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa9fef5f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fef5fa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fa9fef64b40" loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fa9fef64b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fef63020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fef631b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fef63340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fef634d0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fef63660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fef637f0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fef63980"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fef63b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fef576c0" loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fef576c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fef57a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fef57bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fef57d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fef56020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fef561b0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fef56340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fef564d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fef56b10"/>
        <function-ref name="set" scoped="" ref="0x7fa9fef56660"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fef567f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fef56980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fa9fef5b5e0" loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9fef5b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fef5b960"/>
        <function-ref name="write" scoped="" ref="0x7fa9fef5baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa9fef7b320" loc="49:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa9fef7b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fef7b6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fef7b830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fa9fef61780" loc="67:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa9fef61780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9fef61b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9fef61c90"/>
        <function-ref name="write" scoped="" ref="0x7fa9fef61e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9fef60020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9fef601b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fa9fef5fde0" loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa9fef5fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fef5e180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fa9fef5ce80" loc="76:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa9fef5ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fef5b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fa9fef780f0" loc="53:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fa9fef780f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa9fef78470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa9feebac60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9feebac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb8210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa9feec3020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa9feec3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feec33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa9feebdc70" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9feebdc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feebc020"/>
        <function-ref name="write" scoped="" ref="0x7fa9feebc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa9feeb7670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9feeb7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb79f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa9feeb0e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa9feeb0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeaf210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeaf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa9feeb7e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa9feeb7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb6210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa9feea32f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa9feea32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea3670"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa9feea62f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa9feea62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea6670"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa9feec2370" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa9feec2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feec26f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa9feeab670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa9feeab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeab9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeabb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa9feea72f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9feea72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea7670"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa9feebcc60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa9feebcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feebb020"/>
        <function-ref name="write" scoped="" ref="0x7fa9feebb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa9feebbc60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa9feebbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeba020"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa9feeb1670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa9feeb1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb19f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa9feeb4e50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa9feeb4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb2210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa9feeb6670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa9feeb6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb69f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa9feec58f0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9feec58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa9feec5c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa9feec5e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa9feec4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa9feec1d00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9feec1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feebf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa9feebf370" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa9feebf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feebf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa9feeaaa70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa9feeaaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeaadf0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa9feebfac0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa9feebfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feebfe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa9feea7ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9feea7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea7e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa9feec1060" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9feec1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feec13e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa9feeade50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa9feeade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeab210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa9feebb480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa9feebb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feebb800"/>
        <function-ref name="write" scoped="" ref="0x7fa9feebb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa9feebc480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9feebc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feebc800"/>
        <function-ref name="write" scoped="" ref="0x7fa9feebc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa9feec4940" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa9feec4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feec4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa9feeaee50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa9feeaee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feead210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feead3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa9feeaf670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa9feeaf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeaf9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeafb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa9feead670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa9feead670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feead9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeadb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa9feea4ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa9feea4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea4e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa9feea6ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa9feea6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea6e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa9feeb2670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa9feeb2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb29f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa9feeafe50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa9feeafe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeae210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa9feea8ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa9feea8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea8e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa9feeb5670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa9feeb5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb59f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa9feea3ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa9feea3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9feea3e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9feea2020"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea21b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9feea2340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9feea24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa9feec42f0" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa9feec42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feec4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa9feebd490" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa9feebd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feebd810"/>
        <function-ref name="write" scoped="" ref="0x7fa9feebd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa9feeba480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa9feeba480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeba800"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeba990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa9feeb1e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa9feeb1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb0210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa9feeb6e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa9feeb6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb5210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa9feeb0670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa9feeb0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb09f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa9feeb8670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa9feeb8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb89f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa9feec3670" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa9feec3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feec39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa9feeb8e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9feeb8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb7210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9feec7c30" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9feec7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9feec5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9feec51b0"/>
        <function-ref name="request" scoped="" ref="0x7fa9feec5340"/>
        <function-ref name="granted" scoped="" ref="0x7fa9feec54d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9feec5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa9feebe160" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa9feebe160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feebe4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa9feebee00" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa9feebee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feebd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa9feea82f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa9feea82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea8670"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa9feea9ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa9feea9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea9e50"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa9feec16b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9feec16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feec1a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa9feea92f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa9feea92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea9670"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa9feea42f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa9feea42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feea4670"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa9feeb2e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa9feeb2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb1210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa9feeae670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa9feeae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeae9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeaeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa9feec3cc0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa9feec3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feec20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa9feec29c0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa9feec29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feec2d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa9feeb5e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa9feeb5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb4210"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa9feebe7b0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa9feebe7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9feebeb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa9feeb4670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa9feeb4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeb49f0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeb4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa9feeabe50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa9feeabe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9feeaa610"/>
        <function-ref name="write" scoped="" ref="0x7fa9feeaa7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa9feea27a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa9feea27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9feea2b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9feea2cb0"/>
        <function-ref name="write" scoped="" ref="0x7fa9feea2e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9feea1020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9feea11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fa9fee96df0" loc="42:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fa9fee96df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fee931c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fa9fee93350"/>
        <function-ref name="sfd" scoped="" ref="0x7fa9fee934e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9fee937c0" loc="43:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9fee937c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fee93b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fa9fee92020" loc="44:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fa9fee92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa9fee923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa9fee965c0" loc="41:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa9fee965c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fee96940"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fee96ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fa9fee8b380" loc="54:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fa9fee8b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fee8b700"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fee8b890"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fee8ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fee8bbb0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fee8bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fee89020"/>
        <function-ref name="set" scoped="" ref="0x7fa9fee891b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fee89340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fa9fee83b90" loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa9fee83b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa9fee82020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa9fee821b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa9fee82340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa9fee824d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa9fee82660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa9fee827f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa9fee82980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa9fee82b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa9fee82ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa9fee82e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa9fee81020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa9fee811b0"/>
        <function-ref name="sync" scoped="" ref="0x7fa9fee81340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa9fee815d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa9fee81760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fa9fee6c9d0" loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fa9fee6c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fee6cd50"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fee6b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fa9fee81d70" loc="65:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa9fee81d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa9fee7f330"/>
        <function-ref name="clear" scoped="" ref="0x7fa9fee7fa60"/>
        <function-ref name="isValid" scoped="" ref="0x7fa9fee80ba0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fee7d210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fa9fee896b0" loc="55:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fa9fee896b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fee89a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fee89bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fee89d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fee88020"/>
        <function-ref name="get" scoped="" ref="0x7fa9fee881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fee88340"/>
        <function-ref name="set" scoped="" ref="0x7fa9fee884d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fee88660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fa9fee7ccb0" loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9fee7ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fee7b0a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fee7b230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fa9fee7b590" loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa9fee7b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fee7b910"/>
        <function-ref name="write" scoped="" ref="0x7fa9fee7baa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fa9fee7a6d0" loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa9fee7a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fee7aa50"/>
        <function-ref name="write" scoped="" ref="0x7fa9fee7abe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa9fee84330" loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee84330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa9fee846b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa9fee84840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa9fee849d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa9fee84b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fa9fee84cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa9fee84e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fa9fee8e550" loc="49:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fa9fee8e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fee8e8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fa9fee8ea60"/>
        <function-ref name="sfd" scoped="" ref="0x7fa9fee8ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fa9fee853a0" loc="60:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa9fee853a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fee85720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fa9fee8c020" loc="53:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa9fee8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fee8c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fee8c530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fee8c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fee8c850"/>
        <function-ref name="get" scoped="" ref="0x7fa9fee8c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fee8cb70"/>
        <function-ref name="set" scoped="" ref="0x7fa9fee8cd00"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fee8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fa9fee79020" loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9fee79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fee793a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fee79530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fee8f620" loc="47:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fee8f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fee8f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa9fee831e0" loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee831e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fee83560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa9fee836f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa9fee83880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9fee8d020" loc="50:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9fee8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fee8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa9fee876e0" loc="58:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa9fee876e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fee87a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fee87bf0"/>
        <function-ref name="request" scoped="" ref="0x7fa9fee87d80"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fee86020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fee861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fa9fee7be00" loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa9fee7be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fee7a1c0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fee7a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fa9fee86530" loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa9fee86530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9fee868b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9fee86a40"/>
        <function-ref name="write" scoped="" ref="0x7fa9fee86bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9fee86d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9fee85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fa9fee798b0" loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa9fee798b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fee79e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fa9fee8d7c0" loc="51:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fa9fee8d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa9fee8db40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fee78150" loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fee78150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fee784d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fee78660"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fee787f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fee78980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fee78b10"/>
        <function-ref name="get" scoped="" ref="0x7fa9fee78ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fee78e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fee774d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fee77020"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fee771b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fee77340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fa9fee7c3e0" loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9fee7c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fee7c760"/>
        <function-ref name="write" scoped="" ref="0x7fa9fee7c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fa9fee7db10" loc="67:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa9fee7db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fee7c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fa9fee88a50" loc="56:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa9fee88a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9fee88dd0"/>
        <function-ref name="disable" scoped="" ref="0x7fa9fee87020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa9fee871b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa9fee87340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fa9fee85ad0" loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9fee85ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fee84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa9fee8fca0" loc="48:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa9fee8fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fee8e0a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fee8e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa9fee0ba70" loc="44:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa9fee0ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa9fee0bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa9fee0f660" loc="41:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee0f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa9fee0f9e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa9fee0fb70"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa9fee0fd00"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa9fee0c020"/>
        <function-ref name="getPower" scoped="" ref="0x7fa9fee0c1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa9fee0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fa9fee0a550" loc="46:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa9fee0a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa9fee09b00"/>
        <function-ref name="clear" scoped="" ref="0x7fa9fee082a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fa9fee093d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fee089d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fa9fee0b0c0" loc="43:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fee0b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fee0b440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa9fee0b5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa9fee0b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fa9fee02480" loc="48:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa9fee02480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fee02800"/>
        <function-ref name="isSet" scoped="" ref="0x7fa9fee02990"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fee02b20"/>
        <function-ref name="set" scoped="" ref="0x7fa9fee02cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa9fee06660" loc="47:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa9fee06660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa9fee05ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fa9fee04460"/>
        <function-ref name="isValid" scoped="" ref="0x7fa9fee055b0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fee04b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa9fee0c6e0" loc="42:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa9fee0c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9fee0ca60"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9fee0cbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9fee0cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa9fedfc020" loc="49:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa9fedfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa9fedfc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa9fee01d10" loc="46:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fee01d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa9fedfe0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa9fedfe270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa9fedfe400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa9fedfe590"/>
        <function-ref name="getPower" scoped="" ref="0x7fa9fedfe720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa9fedfe8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa9fedf34a0" loc="56:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9fedf34a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fedf3820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9fedf39b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fedf3b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fedf3cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9fedf3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fa9fedfca80" loc="51:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa9fedfca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa9fedfa020"/>
        <function-ref name="clear" scoped="" ref="0x7fa9fedfa750"/>
        <function-ref name="isValid" scoped="" ref="0x7fa9fedfb8d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fedfae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fa9fedfd640" loc="48:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fedfd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fedfd9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa9fedfdb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa9fedfdce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fa9fedf48b0" loc="53:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa9fedf48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fedf4c30"/>
        <function-ref name="isSet" scoped="" ref="0x7fa9fedf4dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fedf3020"/>
        <function-ref name="set" scoped="" ref="0x7fa9fedf31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fa9fedf23b0" loc="57:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fa9fedf23b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fedf1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fa9fedf16e0" loc="58:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fa9fedf16e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fedf03d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa9fedf8af0" loc="52:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa9fedf8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa9fedf60d0"/>
        <function-ref name="clear" scoped="" ref="0x7fa9fedf6800"/>
        <function-ref name="isValid" scoped="" ref="0x7fa9fedf7970"/>
        <function-ref name="set" scoped="" ref="0x7fa9fedf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa9fedfec50" loc="47:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa9fedfec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9fedfd020"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9fedfd1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9fedfd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa9feda1cf0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fa9feda1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9feda0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa9fed9f020" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9fed9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fed9fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fed9d800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fed9d340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fed9dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa9fed9a0b0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa9fed9a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f2230"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa004f2da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa9fed96630"/>
        <function-ref name="fired" scoped="" ref="0x7fa9fed99b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa9fed98920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa9fed984a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa9fed95020"/>
        <function-ref name="gett0" scoped="" ref="0x7fa9fed96ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa9fed98020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa9fed9aca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa9fed96020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa9fed991b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fed99680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa9fed85620" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa9fed85620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed85ba0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed85d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa9fed90940" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa9fed90940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed90cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa9fed88620" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa9fed88620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed889a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed88b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa9fed83060" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa9fed83060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed833e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed83570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa9fed7b840" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa9fed7b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed7bbc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed7bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa9fed83840" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa9fed83840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed83bc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed83d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa9fed70c60" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa9fed70c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed6f020"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa9fed72c60" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa9fed72c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed71020"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa9fed8ecc0" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa9fed8ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa9fed77060" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa9fed77060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed773e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed77570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa9fed73c60" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa9fed73c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed72020"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa9fed87620" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa9fed87620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed879a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed87b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa9fed86620" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa9fed86620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed869a0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed86b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa9fed7d060" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa9fed7d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed7d3e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed7d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa9fed7f840" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa9fed7f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed7fbc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed7fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa9fed81060" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa9fed81060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed813e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed81570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa9fed912b0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa9fed912b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa9fed91630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa9fed917c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa9fed91950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa9fed8c6b0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa9fed8c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa9fed8cd00" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa9fed8cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa9fed76480" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa9fed76480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed76800"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed76990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa9fed8b490" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa9fed8b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa9fed72480" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa9fed72480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed72800"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed72990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa9fed8d9c0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa9fed8d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa9fed78840" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa9fed78840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed78bc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed78d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa9fed87e00" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa9fed87e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed861c0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed86350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa9fed88e00" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa9fed88e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed871c0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed87350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa9fed902f0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa9fed902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed90670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa9fed79840" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa9fed79840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed79bc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed79d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa9fed7a060" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa9fed7a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed7a3e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed7a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa9fed78060" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa9fed78060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed783e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed78570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa9fed70480" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa9fed70480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed70800"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed70990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa9fed71480" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa9fed71480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed71800"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed71990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa9fed7e060" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa9fed7e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed7e3e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed7e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa9fed7a840" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa9fed7a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed7abc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed7ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa9fed73480" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa9fed73480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed73800"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed73990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa9fed80060" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa9fed80060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed803e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed80570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa9fed6f480" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa9fed6f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9fed6f800"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9fed6f990"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed6fb20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9fed6fcb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9fed6fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa9fed91c20" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa9fed91c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa9fed8ae00" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa9fed8ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed881c0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed88350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa9fed86e00" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa9fed86e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed851c0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed85350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa9fed7d840" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa9fed7d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed7dbc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed7dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa9fed81840" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa9fed81840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed81bc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed81d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa9fed7b060" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa9fed7b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed7b3e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed7b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa9fed84060" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa9fed84060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed843e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed84570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa9fed8e020" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa9fed8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa9fed84840" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa9fed84840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed84bc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed84d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fed92520" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fed92520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fed928a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fed92a30"/>
        <function-ref name="request" scoped="" ref="0x7fa9fed92bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fed92d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fed91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa9fed8bae0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa9fed8bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa9fed8a7b0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa9fed8a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa9fed74c60" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa9fed74c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed73020"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa9fed74480" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa9fed74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed74800"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed74990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa9fed8c060" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa9fed8c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa9fed76c60" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa9fed76c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed74020"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa9fed71c60" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa9fed71c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed70020"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa9fed7e840" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa9fed7e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed7ebc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed7ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa9fed79060" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa9fed79060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed793e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed79570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa9fed8e670" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa9fed8e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa9fed8d370" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa9fed8d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa9fed80840" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa9fed80840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed80bc0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed80d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa9fed8a160" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa9fed8a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa9fed8a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa9fed7f060" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa9fed7f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed7f3e0"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed7f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa9fed77840" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa9fed77840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa9fed76020"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa9fed6d160" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa9fed6d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa9fed6d4e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa9fed6d670"/>
        <function-ref name="write" scoped="" ref="0x7fa9fed6d800"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa9fed6d990"/>
        <function-ref name="readDone" scoped="" ref="0x7fa9fed6db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fa9fed44a20" loc="46:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa9fed44a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa9fed44da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fa9fed41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fa9fed42920" loc="45:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fa9fed42920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fed44560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fed48990" loc="44:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fed48990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fed48d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fa9fed3da20" loc="48:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa9fed3da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa9fed3dda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fa9fed3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fa9fed3e940" loc="47:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fa9fed3e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fed3d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fed3e080" loc="46:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fed3e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fed3e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa9fed46aa0" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa9fed46aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa9fed46e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa9fed3f020"/>
        <function-ref name="isState" scoped="" ref="0x7fa9fed3f1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa9fed3f340"/>
        <function-ref name="requestState" scoped="" ref="0x7fa9fed3f4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa9fed3f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa9fed22020" loc="44:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa9fed22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fed223a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fed22530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fed226c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fed22850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fed229e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9fed23220" loc="40:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9fed23220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fed235a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fed23730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fed238c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fed23a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fed23be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa9fed1de60" loc="45:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa9fed1de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fed1b210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fed1b3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fed1b530"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fed1b6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fed1b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9fed21a10" loc="40:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9fed21a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fed21d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fed1d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fed1d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fed1d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fed1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fa9fed1a8f0" loc="47:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa9fed1a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa9fed1ac70"/>
        <function-ref name="rand32" scoped="" ref="0x7fa9fed1ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fed1d750" loc="41:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fed1d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fed1dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa9fed19170" loc="48:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fed19170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fed194f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa9fed19680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa9fed19810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fa9fed1bae0" loc="46:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa9fed1bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa9fed1be60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa9fed1a020"/>
        <function-ref name="isState" scoped="" ref="0x7fa9fed1a1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa9fed1a340"/>
        <function-ref name="requestState" scoped="" ref="0x7fa9fed1a4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa9fed1a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa9fed1e690" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa9fed1e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa9fed1ea10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa9fed1eba0"/>
        <function-ref name="isState" scoped="" ref="0x7fa9fed1ed30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa9fed08020"/>
        <function-ref name="requestState" scoped="" ref="0x7fa9fed081b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa9fed08340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa9fed02950" loc="47:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa9fed02950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fed02cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9fed05a90" loc="42:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9fed05a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fed05e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fa9fed02200" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa9fed02200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fed02580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa9fecfd3f0" loc="49:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa9fecfd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fecfd770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fecfeb50" loc="45:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fecfeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fecfd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9fed01e20" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9fed01e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fecfe1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa9fecfda70" loc="50:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fecfda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fecfddf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa9fecfc020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa9fecfc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fa9fecfe550" loc="44:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa9fecfe550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fecfe8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa9fecce020" loc="75:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa9fecce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fecce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa9fecce6b0" loc="76:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa9fecce6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9feccea30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feccebc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fecced50"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9feccd020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9feccd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9fecd38e0" loc="65:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9fecd38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fecd3c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fecd3df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fecd1020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fecd11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fecd1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fa9fecd1c90" loc="68:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fa9fecd1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fecd00a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fecd0230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fecd03c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fecd0550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fecd06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9fecd15e0" loc="66:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9fecd15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fecd1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fecd4be0" loc="64:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fecd4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fecd3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fecd31b0"/>
        <function-ref name="request" scoped="" ref="0x7fa9fecd3340"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fecd34d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fecd3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fa9fecd0a50" loc="69:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fa9fecd0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fecd0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fa9feccf170" loc="71:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fa9feccf170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9feccf4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9feccf680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feccf810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feccf9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9feccfb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa9fecc4d70" loc="58:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa9fecc4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fecc3180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fecc3310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fecc34a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fecc3630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fecc37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa9fecc3b10" loc="59:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa9fecc3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fecc2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fa9fec95db0" loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fa9fec95db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fec94180"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fec94310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa9fecc22f0" loc="60:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fecc22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa9fecc2670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa9fecc2800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa9fecc2990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa9fecc2b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fa9fecc2cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa9fecc2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fa9fecc7a20" loc="51:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fa9fecc7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fecc7da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fecc6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fecc61b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fecc6340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fecc64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa9fecc1b70" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa9fecc1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fecc0020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa9fecc01b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa9fecc0340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fecc04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa9fecc1170" loc="61:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fecc1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fecc14f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa9fecc1680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa9fecc1810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fa9fecc7370" loc="49:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fa9fecc7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fecc76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fecc97b0" loc="46:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fecc97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fecc9b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fecc9cc0"/>
        <function-ref name="request" scoped="" ref="0x7fa9fecc9e50"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fecc8020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fecc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fa9fecc84d0" loc="48:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fa9fecc84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fecc8850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fecc89e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fecc8b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fecc8d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fecc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fa9fecc6840" loc="52:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fa9fecc6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fecc6bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fa9fecc4020" loc="54:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fa9fecc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fecc43a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9fecc4530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fecc46c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fecc4850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9fecc49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fec75dd0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fec75dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fec74180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa9fec74410" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa9fec74410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fec74790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa9fec74920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa9fec74ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fec74c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa9fec69b80" loc="46:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9fec69b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9fec68020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9fec681b0"/>
        <function-ref name="start" scoped="" ref="0x7fa9fec68340"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fec684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa9fec66860" loc="51:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa9fec66860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fec66be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fec66d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fec65020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fec651b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fec65340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa9fec65690" loc="52:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa9fec65690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fec65a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9fec6dce0" loc="43:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9fec6dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fec6a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fec6a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fec6a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fec6a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fec6a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa9fec69080" loc="45:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9fec69080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa9fec69400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa9fec69590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa9fec69720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa9fec698b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fa9fec68800" loc="47:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fa9fec68800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa9fec68b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa9fec68d10"/>
        <function-ref name="isState" scoped="" ref="0x7fa9fec66020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa9fec661b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa9fec66340"/>
        <function-ref name="forceState" scoped="" ref="0x7fa9fec664d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fa9fec65d90" loc="53:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fa9fec65d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9fec64180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9fec64310"/>
        <function-ref name="start" scoped="" ref="0x7fa9fec644a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fec64630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9fec6a980" loc="44:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9fec6a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fec6ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa9fec612d0" loc="41:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa9fec612d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa9fec61650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa9fec617e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa9fec61970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa9fec61b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa9fec63580" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa9fec63580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa9fec63900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa9fec63a90"/>
        <function-ref name="isState" scoped="" ref="0x7fa9fec63c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa9fec63db0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa9fec62020"/>
        <function-ref name="forceState" scoped="" ref="0x7fa9fec621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa9fec54d70" loc="45:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa9fec54d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fec53180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fec53310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fec534a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fec53630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fec537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9fec57340" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9fec57340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fec576c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fec57850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fec579e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fec57b70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fec57d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa9fec54020" loc="41:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa9fec54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa9fec543a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa9fec54530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa9fec546c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa9fec54850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa9fec549e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fa9fec4f1a0" loc="44:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9fec4f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9fec4f520"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9fec4f6b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9fec4f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa9fec52400" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa9fec52400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa9fec52780"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa9fec52910"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa9fec52aa0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa9fec52c30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa9fec52dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa9fec2f690" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa9fec2f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fec2fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa9fec30860" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa9fec30860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fec30be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fec30d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fec2f020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fec2f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fec2f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fa9fec2d610" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa9fec2d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa9fec2d990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa9fec2db20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa9fec2dcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa9fec2de40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa9fec2c020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa9fec2c1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa9fec2c340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa9fec2c4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa9fec2c660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa9fec2c7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa9fec2c980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa9fec2cb10"/>
        <function-ref name="sync" scoped="" ref="0x7fa9fec2cca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa9fec2b020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa9fec2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa9fec328b0" loc="54:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa9fec328b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa9fec32c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa9fec32dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa9fec30020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa9fec301b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fa9fec30340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa9fec304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa9fec33ce0" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fa9fec33ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa9fec320a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fa9fec2a1f0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fa9fec2a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa9fec2a570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa9fec2a700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa9fec2a890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa9fec2aa20"/>
        <function-ref name="setCca" scoped="" ref="0x7fa9fec2abb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa9fec2ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa9fec34a80" loc="52:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9fec34a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fec34e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9fec33020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fec331b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fec33340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9fec334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa9fec3ae80" loc="48:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9fec3ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fec37220"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fec373b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fec37540"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fec376d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fec37860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa9fec36db0" loc="50:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fa9fec36db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fec35180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa9fec2fce0" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa9fec2fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa9fec2e0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa9fec2e230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa9fec2e3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa9fec2e550"/>
        <function-ref name="getPower" scoped="" ref="0x7fa9fec2e6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa9fec2e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fa9fec2b4d0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa9fec2b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa9fec2b950"/>
        <function-ref name="changed" scoped="" ref="0x7fa9fec2bae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa9fec2bc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa9fec2be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa9fec2eb70" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa9fec2eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fec2d020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa9fec2d1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa9fec2d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9fec361d0" loc="49:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9fec361d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fec36550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fec29d30" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fec29d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fec280e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fec28270"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fec28400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fec28590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fec28720"/>
        <function-ref name="get" scoped="" ref="0x7fa9fec288b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fec28a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fec271b0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fec28bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fec28d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fec27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa9fec35430" loc="51:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9fec35430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9fec357b0"/>
        <function-ref name="source" scoped="" ref="0x7fa9fec35940"/>
        <function-ref name="address" scoped="" ref="0x7fa9fec35ad0"/>
        <function-ref name="destination" scoped="" ref="0x7fa9fec35c60"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9fec35df0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9fec34020"/>
        <function-ref name="type" scoped="" ref="0x7fa9fec341b0"/>
        <function-ref name="setType" scoped="" ref="0x7fa9fec34340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9fec344d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9fec34660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9fec347f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fa9fec290f0" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fa9fec290f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fec29470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fec29600"/>
        <function-ref name="request" scoped="" ref="0x7fa9fec29790"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fec29920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fec29ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa9feb17020" loc="49:../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9feb17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9feb173a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feb17530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feb176c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9feb17850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9feb179e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa9feb17c30" loc="50:../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9feb17c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9feb16020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9feb161b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feb16340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feb164d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9feb16660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa9feb168b0" loc="51:../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9feb168b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9feb16c30"/>
        <function-ref name="source" scoped="" ref="0x7fa9feb16dc0"/>
        <function-ref name="address" scoped="" ref="0x7fa9feb15020"/>
        <function-ref name="destination" scoped="" ref="0x7fa9feb151b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9feb15340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9feb154d0"/>
        <function-ref name="type" scoped="" ref="0x7fa9feb15660"/>
        <function-ref name="setType" scoped="" ref="0x7fa9feb157f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9feb15980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9feb15b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9feb15ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa9feb14020" loc="52:../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa9feb14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9feb143a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9feb14530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9feb146c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa9fdc64b60" loc="49:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9fdc64b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fdc63020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fdc631b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fdc63340"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fdc634d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fdc63660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa9fdc638b0" loc="50:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9fdc638b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fdc63c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9fdc63dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fdc61020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fdc611b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9fdc61340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa9fdc61590" loc="51:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9fdc61590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9fdc61910"/>
        <function-ref name="source" scoped="" ref="0x7fa9fdc61aa0"/>
        <function-ref name="address" scoped="" ref="0x7fa9fdc61c30"/>
        <function-ref name="destination" scoped="" ref="0x7fa9fdc61dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9fdc60020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9fdc601b0"/>
        <function-ref name="type" scoped="" ref="0x7fa9fdc60340"/>
        <function-ref name="setType" scoped="" ref="0x7fa9fdc604d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9fdc60660"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9fdc607f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9fdc60980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa9fdc60c10" loc="52:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa9fdc60c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9fdc5f020"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9fdc5f1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9fdc5f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa9fdc57e30" loc="44:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9fdc57e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fdc551e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fdc55370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fdc55500"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fdc55690"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fdc55820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fa9fdc55ad0" loc="46:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9fdc55ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fdc55e50"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fdc54020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fdc541b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fdc54340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fdc544d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa9fdc54720" loc="47:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9fdc54720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9fdc54aa0"/>
        <function-ref name="source" scoped="" ref="0x7fa9fdc54c30"/>
        <function-ref name="address" scoped="" ref="0x7fa9fdc54dc0"/>
        <function-ref name="destination" scoped="" ref="0x7fa9fdc53020"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9fdc531b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9fdc53340"/>
        <function-ref name="type" scoped="" ref="0x7fa9fdc534d0"/>
        <function-ref name="setType" scoped="" ref="0x7fa9fdc53660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9fdc537f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9fdc53980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9fdc53b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9feb7b930" loc="43:../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9feb7b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9feb7bcb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feb7be40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feb78020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9feb781b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9feb78340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fa9feb2b400" loc="48:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9feb2b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9feb2b7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feb2b930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feb2bac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9feb2bc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9feb2bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9feb2d4b0" loc="46:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9feb2d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9feb2d850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feb2d9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feb2db70"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9feb2dd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9feb2b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa9feb29720" loc="50:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9feb29720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9feb29aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9feb29c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feb29dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feb28020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9feb281b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fa9feb28480" loc="169:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fa9feb28480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9feb28800"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9feb28990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fa9feb28c60" loc="126:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fa9feb28c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9feb27020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9feb271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa9feb2a060" loc="49:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9feb2a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9feb2a3e0"/>
        <function-ref name="source" scoped="" ref="0x7fa9feb2a570"/>
        <function-ref name="address" scoped="" ref="0x7fa9feb2a700"/>
        <function-ref name="destination" scoped="" ref="0x7fa9feb2a890"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9feb2aa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9feb2abb0"/>
        <function-ref name="type" scoped="" ref="0x7fa9feb2ad40"/>
        <function-ref name="setType" scoped="" ref="0x7fa9feb29020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9feb291b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9feb29340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9feb294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa9feb0a5f0" loc="46:../../tos/system/AMReceiverC.nc">
      <component-ref qname="DemoAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9feb0a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9feb0a970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9feb0ab00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feb0ac90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feb0ae20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9feb09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9feb0a020" loc="45:../../tos/system/AMReceiverC.nc">
      <component-ref qname="DemoAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9feb0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9feb0a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa9feb09270" loc="47:../../tos/system/AMReceiverC.nc">
      <component-ref qname="DemoAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9feb09270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9feb095f0"/>
        <function-ref name="source" scoped="" ref="0x7fa9feb09780"/>
        <function-ref name="address" scoped="" ref="0x7fa9feb09910"/>
        <function-ref name="destination" scoped="" ref="0x7fa9feb09aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9feb09c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9feb09dc0"/>
        <function-ref name="type" scoped="" ref="0x7fa9feb08020"/>
        <function-ref name="setType" scoped="" ref="0x7fa9feb081b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9feb08340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9feb084d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9feb08660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa9fe755020" loc="49:../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9fe755020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe7553a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fe755530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fe7556c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fe755850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fe7559e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa9fe755c30" loc="50:../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9fe755c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fe753020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9fe7531b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fe753340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fe7534d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9fe753660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa9fe7538b0" loc="51:../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9fe7538b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9fe753c30"/>
        <function-ref name="source" scoped="" ref="0x7fa9fe753dc0"/>
        <function-ref name="address" scoped="" ref="0x7fa9fe752020"/>
        <function-ref name="destination" scoped="" ref="0x7fa9fe7521b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9fe752340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9fe7524d0"/>
        <function-ref name="type" scoped="" ref="0x7fa9fe752660"/>
        <function-ref name="setType" scoped="" ref="0x7fa9fe7527f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9fe752980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9fe752b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9fe752ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa9fe751020" loc="52:../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa9fe751020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9fe7513a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9fe751530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9fe7516c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa9fdc03900" loc="44:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9fdc03900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fdc03c80"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fdc03e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fdc02020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fdc021b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fdc02340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fa9fdc025f0" loc="46:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9fdc025f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fdc02970"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fdc02b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fdc02c90"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fdc02e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fdc01020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa9fdc01270" loc="47:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9fdc01270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9fdc015f0"/>
        <function-ref name="source" scoped="" ref="0x7fa9fdc01780"/>
        <function-ref name="address" scoped="" ref="0x7fa9fdc01910"/>
        <function-ref name="destination" scoped="" ref="0x7fa9fdc01aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9fdc01c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9fdc01dc0"/>
        <function-ref name="type" scoped="" ref="0x7fa9fdc00020"/>
        <function-ref name="setType" scoped="" ref="0x7fa9fdc001b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9fdc00340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9fdc004d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9fdc00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9feaf4390" loc="44:../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9feaf4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9feaf4710"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feaf48a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feaf4a30"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9feaf4bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9feaf4d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fa9feaf1be0" loc="48:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9feaf1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9feaf0020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feaf01b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feaf0340"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9feaf04d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9feaf0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9feaf2dd0" loc="46:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9feaf2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9feaf11c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feaf1350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feaf14e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9feaf1670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9feaf1800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa9feaed020" loc="50:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9feaed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9feaed3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9feaed530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feaed6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feaed850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9feaed9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fa9feaedcb0" loc="169:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fa9feaedcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9feaec0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9feaec230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fa9feaec500" loc="126:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fa9feaec500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9feaec880"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9feaeca10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa9feaf08b0" loc="49:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9feaf08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9feaf0c30"/>
        <function-ref name="source" scoped="" ref="0x7fa9feaf0dc0"/>
        <function-ref name="address" scoped="" ref="0x7fa9feaee020"/>
        <function-ref name="destination" scoped="" ref="0x7fa9feaee1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9feaee340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9feaee4d0"/>
        <function-ref name="type" scoped="" ref="0x7fa9feaee660"/>
        <function-ref name="setType" scoped="" ref="0x7fa9feaee7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9feaee980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9feaeeb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9feaeeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa9feaeaa90" loc="46:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9feaeaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9feaeae10"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9feae7020"/>
        <function-ref name="start" scoped="" ref="0x7fa9feae71b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9feae7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa9feae7b10" loc="47:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9feae7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9feae6020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feae61b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feae6340"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9feae64d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9feae6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa9feae5470" loc="49:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9feae5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9feae57f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9feae5980"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feae5b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feae5ca0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9feae5e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9feae6e40" loc="48:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9feae6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9feae51e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9feae2300" loc="53:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9feae2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9feae2680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9feae2810"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9feae29a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9feae2b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9feae2cc0"/>
        <function-ref name="get" scoped="" ref="0x7fa9feae2e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9feae1020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9feae1660"/>
        <function-ref name="set" scoped="" ref="0x7fa9feae11b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9feae1340"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9feae14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa9feae3800" loc="51:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9feae3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9feae3b80"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9feae3d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9feae2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa9feae4120" loc="50:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9feae4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9feae44a0"/>
        <function-ref name="source" scoped="" ref="0x7fa9feae4630"/>
        <function-ref name="address" scoped="" ref="0x7fa9feae47c0"/>
        <function-ref name="destination" scoped="" ref="0x7fa9feae4950"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9feae4ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9feae4c70"/>
        <function-ref name="type" scoped="" ref="0x7fa9feae4e00"/>
        <function-ref name="setType" scoped="" ref="0x7fa9feae3020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9feae31b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9feae3340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9feae34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa9fea864a0" loc="54:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa9fea864a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fea86820"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fea869b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fea86b40"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fea86cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fea86e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa9fea85120" loc="55:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa9fea85120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fea854a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa9feadf300" loc="47:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9feadf300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9feadf6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9feadf830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9feadf9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9feadfb50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9feadfce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa9fea88d60" loc="50:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9fea88d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fea87180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9fea87310"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fea874a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fea87630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9fea877c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9fea8a0d0" loc="48:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9fea8a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fea8a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa9fea87a10" loc="51:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa9fea87a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa9fea87d90"/>
        <function-ref name="noAck" scoped="" ref="0x7fa9fea86020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa9fea861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa9fea8a6c0" loc="49:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa9fea8a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa9fea8aa40"/>
        <function-ref name="source" scoped="" ref="0x7fa9fea8abd0"/>
        <function-ref name="address" scoped="" ref="0x7fa9fea8ad60"/>
        <function-ref name="destination" scoped="" ref="0x7fa9fea88020"/>
        <function-ref name="setSource" scoped="" ref="0x7fa9fea881b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa9fea88340"/>
        <function-ref name="type" scoped="" ref="0x7fa9fea884d0"/>
        <function-ref name="setType" scoped="" ref="0x7fa9fea88660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa9fea887f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa9fea88980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa9fea88b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa9fea83b90" loc="50:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9fea83b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9fea80020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9fea801b0"/>
        <function-ref name="start" scoped="" ref="0x7fa9fea80340"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fea804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9fea7f790" loc="52:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9fea7f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa005078e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fea7fb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fea7fca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fea7fe30"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fea7e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fea7e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fea83540" loc="49:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fea83540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fea838c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9fea80c60" loc="51:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9fea80c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa005078e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fea7f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fea7c2b0" loc="56:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fea7c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fea7c630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fea7c7c0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fea7c950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fea7cae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fea7cc70"/>
        <function-ref name="get" scoped="" ref="0x7fa9fea7ce00"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fea7b020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fea7b660"/>
        <function-ref name="set" scoped="" ref="0x7fa9fea7b1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fea7b340"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fea7b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7fa9fea78970" loc="55:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fa9fea78970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa005078e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fa9fea78cf0"/>
        <function-ref name="offset" scoped="" ref="0x7fa9fea78e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fa9fea7c030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa9fea747c0" loc="66:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa9fea747c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9fea74b40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9fea74cd0"/>
        <function-ref name="start" scoped="" ref="0x7fa9fea74e60"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fea72020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fa9fea0e6e0" loc="332:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7fa9fea0e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fea0ea60"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fea0ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fa9fea62860" loc="74:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fa9fea62860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fea62be0"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fea62d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fa9fea454f0" loc="191:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7fa9fea454f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fea45870"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fea45a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fea74170" loc="65:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fea74170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fea744f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fa9fea5e480" loc="75:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7fa9fea5e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fa9fea5e800"/>
        <function-ref name="flush" scoped="" ref="0x7fa9fea5e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fa9fea11c70" loc="322:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7fa9fea11c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fea10020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fea101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fa9fea6c020" loc="72:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fa9fea6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fa9fea6c3a0"/>
        <function-ref name="resetSend" scoped="" ref="0x7fa9fea6c530"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fa9fea6c6c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fa9fea6c850"/>
        <function-ref name="putData" scoped="" ref="0x7fa9fea6c9e0"/>
        <function-ref name="putDone" scoped="" ref="0x7fa9fea6cb70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fa9fea6cd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fea68020" loc="73:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fea68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fea683a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fea68530"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fea686c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fea68850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fea689e0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fea68b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fea68d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fea624d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fea62020"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fea621b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fea62340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fa9fea0aa00" loc="341:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fa9fea0aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fea0ad80"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fea09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fa9fea6d720" loc="67:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fa9fea6d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fa9fea6daa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7fa9fea6dc30"/>
        <function-ref name="startSend" scoped="" ref="0x7fa9fea6ddc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fa9fea71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fa9fea69c40" loc="68:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fa9fea69c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fa9fea70020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fa9fea701b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fa9fea70340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7fa9fe93f020" loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7fa9fe93f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fe93f3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fe93f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa9fe944de0" loc="51:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa9fe944de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa005078e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe9431c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fe943350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fe9434e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fe943670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fe943800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7fa9fe93f800" loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7fa9fe93f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fe93fb80"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fe93fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa9fe9446c0" loc="50:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa9fe9446c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa005078e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa9fe944a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7fa9fe943c20" loc="54:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7fa9fe943c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa005078e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fa9fe942020"/>
        <function-ref name="offset" scoped="" ref="0x7fa9fe9421b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fa9fe942340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fe941920" loc="57:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fe941920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fe941ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fe941e30"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fe940020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fe9401b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fe940340"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe9404d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fe940660"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fe940ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fe940980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fe9407f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fe940b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fa9fe942e80" loc="56:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fa9fe942e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fa9fe941220"/>
        <function-ref name="nextByte" scoped="" ref="0x7fa9fe9413b0"/>
        <function-ref name="startSend" scoped="" ref="0x7fa9fe941540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fa9fe9416d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fa9fe942590" loc="55:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fa9fe942590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fa9fe942910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fa9fe942aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fa9fe942c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fa9fe92fd20" loc="50:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fa9fe92fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe9380e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fa9fe938270"/>
        <function-ref name="receive" scoped="" ref="0x7fa9fe938400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fa9fe938590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fa9fe938720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fa9fe9388b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fe938a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fa9fe93de00" loc="48:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fa9fe93de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fa9fe93a1c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7fa9fe93a350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fa9fe93a4e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fa9fe93a670"/>
        <function-ref name="putData" scoped="" ref="0x7fa9fe93a800"/>
        <function-ref name="putDone" scoped="" ref="0x7fa9fe93a990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fa9fe93ab20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fe938cc0" loc="51:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fe938cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fe9370a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fe937230"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fe9373c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fe937550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fe9376e0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe937870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fe937a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fe92c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fe937b90"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fe937d20"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fe92c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fa9fe910020" loc="6:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fa9fe910020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe9103a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fa9fe910530"/>
        <function-ref name="receive" scoped="" ref="0x7fa9fe9106c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fa9fe910850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fa9fe912890" loc="5:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fa9fe912890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe912c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fa9fe912da0"/>
        <function-ref name="receive" scoped="" ref="0x7fa9fe911020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fa9fe9111b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fa9fe911340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fa9fe9114d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fe911660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa9fe912080" loc="4:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa9fe912080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fe912400"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe912590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9fe786c70" loc="45:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe786c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9fe785020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fe7851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fa9fe784440" loc="47:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fa9fe784440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe7847c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fa9fe784950"/>
        <function-ref name="receive" scoped="" ref="0x7fa9fe784ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fa9fe784c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fa9fe783020" loc="49:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa9fe783020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa9fe7833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fa9fe785440" loc="46:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fa9fe785440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe7857c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fa9fe785950"/>
        <function-ref name="receive" scoped="" ref="0x7fa9fe785ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fa9fe785c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fa9fe785e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fa9fe784020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fe7841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fe786020" loc="44:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fe786020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe7863a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe786530"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe7866c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe786850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe7869e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa9fe900a30" loc="42:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe900a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9fe900db0"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fe8fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fa9fe8fc020" loc="44:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fa9fe8fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe8fc3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fa9fe8fc530"/>
        <function-ref name="receive" scoped="" ref="0x7fa9fe8fc6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fa9fe8fc850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fa9fe8f9450" loc="47:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa9fe8f9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa9fe8f97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fa9fe8fe860" loc="43:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fa9fe8fe860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe8febe0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fa9fe8fed70"/>
        <function-ref name="receive" scoped="" ref="0x7fa9fe8fd020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fa9fe8fd1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fa9fe8fd340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fa9fe8fd4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fe8fd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fa9fe8fb1d0" loc="46:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fa9fe8fb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe8fb550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe8fb6e0"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe8fb870"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe8fba00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe8fbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fe9017a0" loc="41:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fe9017a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe901b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe901cb0"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe901e40"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe900020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe9001b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fa9fe8f81d0" loc="48:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa9fe8f81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9fe8f8550"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9fe8f86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa9fe88ddc0" loc="44:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe88ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9fe88c180"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fe88c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fa9fe88b890" loc="46:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fa9fe88b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe88bc30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fa9fe88bdc0"/>
        <function-ref name="receive" scoped="" ref="0x7fa9fe88a020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fa9fe88a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fa9fe8893e0" loc="49:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa9fe8893e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa9fe889780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fa9fe889a50" loc="50:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fa9fe889a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa9fe889dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa9fe888020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa9fe8881b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa9fe888340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa9fe8884d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa9fe888660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa9fe8887f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa9fe888980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa9fe888b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa9fe888ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa9fe888e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa9fe887020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa9fe8871b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa9fe887440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa9fe8875d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa9fe887760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa9fe8878f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fa9fe887a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa9fe887c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa9fe887da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa9fe886020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa9fe8861b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa9fe886340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa9fe8864d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fe886660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa9fe8869f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa9fe886b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa9fe886d10"/>
        <function-ref name="tx" scoped="" ref="0x7fa9fe885020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa9fe8851b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa9fe885340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa9fe8854d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa9fe885660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa9fe8857f0"/>
        <function-ref name="rx" scoped="" ref="0x7fa9fe885980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa9fe885b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa9fe885ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa9fe885e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa9fe884020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa9fe8841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fa9fe88c6d0" loc="45:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fa9fe88c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe88ca70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fa9fe88cc00"/>
        <function-ref name="receive" scoped="" ref="0x7fa9fe88cd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fa9fe88b020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fa9fe88b1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fa9fe88b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fe88b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa9fe882020" loc="52:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9fe882020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fe882e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fe881800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fe881340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fe881cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fa9fe88a5b0" loc="48:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fa9fe88a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe88a950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe88aae0"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe88ac70"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe88ae00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe889020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fe88d020" loc="43:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fe88d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe88d3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe88d550"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe88d6e0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe88d870"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe88da00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fa9fe8845b0" loc="51:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa9fe8845b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9fe884950"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9fe884ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fe880120" loc="53:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fe880120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fe8804a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fe880630"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fe8807c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fe880950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fe880ae0"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe880c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fe880e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fe87f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fe87f1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fe87f020"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fe87f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fa9fe872080" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9fe872080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9fe872400"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9fe872590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fa9fe87ab70" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa9fe87ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fe877020"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe8771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fa9fe8774d0" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9fe8774d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa9fe877850"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa9fe8779e0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa9fe877b70"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa9fe877d00"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa9fe876020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa9fe8761b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa9fe876340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa9fe8764d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa9fe876660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa9fe8767f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa9fe876980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa9fe876b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa9fe876ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa9fe875020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa9fe8751b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa9fe875340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa9fe8754d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fa9fe875660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa9fe8757f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa9fe875980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa9fe875b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa9fe875ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa9fe875e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa9fe874020"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fe8741b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa9fe874540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa9fe8746d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa9fe874860"/>
        <function-ref name="tx" scoped="" ref="0x7fa9fe8749f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa9fe874b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa9fe874d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa9fe873020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa9fe8731b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa9fe873340"/>
        <function-ref name="rx" scoped="" ref="0x7fa9fe8734d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa9fe873660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa9fe8737f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa9fe873980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa9fe873b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa9fe873ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fa9fe8651f0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fa9fe8651f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fe865570"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fe865700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9fe865890"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fe865a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fe865bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9fe865d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fe864020"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe8641b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9fe864340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9fe8644d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fe864660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9fe8647f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9fe864980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9fe864c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fe864da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa9fe86a910" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa9fe86a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9fe86ac90"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9fe86ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fa9fe8621f0" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fa9fe8621f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fe862570"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fe862700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9fe862890"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fe862a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fe862bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9fe862d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fe861020"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe8611b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9fe861340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9fe8614d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fe861660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9fe8617f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9fe861980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9fe861c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fe861da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fa9fe8601f0" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fa9fe8601f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fe860570"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fe860700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9fe860890"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fe860a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fe860bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9fe860d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fe85f020"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe85f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9fe85f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9fe85f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fe85f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9fe85f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9fe85f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9fe85fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fe85fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fa9fe86fcc0" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fa9fe86fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa9fe86e0a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa9fe86e230"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa9fe86e3c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa9fe86e550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa9fe86e6e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa9fe86e870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa9fe86ea00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa9fe86eb90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa9fe86ed20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa9fe86d020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa9fe86d1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa9fe86d340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa9fe86d4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa9fe86d760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa9fe86d8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa9fe86da80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa9fe86dc10"/>
        <function-ref name="isUart" scoped="" ref="0x7fa9fe86dda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa9fe86c020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa9fe86c1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa9fe86c340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa9fe86c4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa9fe86c660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa9fe86c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fe86c980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa9fe86cd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa9fe86b020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa9fe86b1b0"/>
        <function-ref name="tx" scoped="" ref="0x7fa9fe86b340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa9fe86b4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa9fe86b660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa9fe86b7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa9fe86b980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa9fe86bb10"/>
        <function-ref name="rx" scoped="" ref="0x7fa9fe86bca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa9fe86be30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa9fe86a020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa9fe86a1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa9fe86a340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa9fe86a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fa9fe86f410" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa9fe86f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fe86f790"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe86f920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fa9fe8671f0" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fa9fe8671f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fe867570"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fe867700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9fe867890"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fe867a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fe867bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9fe867d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fe866020"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe8661b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9fe866340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9fe8664d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fe866660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9fe8667f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9fe866980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9fe866c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fe866da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fa9fe869210" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fa9fe869210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa9fe869590"/>
        <function-ref name="isInput" scoped="" ref="0x7fa9fe869720"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa9fe8698b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa9fe869a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa9fe869bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa9fe869d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa9fe868020"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe8681b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa9fe868340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa9fe8684d0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fe868660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa9fe8687f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa9fe868980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa9fe868c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa9fe868da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa9fe7e0080" loc="43:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa9fe7e0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa004f0230"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa004f05a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa9fe7df020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa9fe7df9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa9fe7df4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa9fe7dfe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9fdb475d0" loc="43:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fdb475d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9fdb47950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fdb47ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9fdb417c0" loc="48:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fdb417c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9fdb41b40"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fdb41cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fa9fdb41020" loc="46:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa9fdb41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9fdb413a0"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9fdb41530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fdb48880" loc="42:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fdb48880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fdb48c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fdb48d90"/>
        <function-ref name="request" scoped="" ref="0x7fa9fdb47020"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fdb471b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fdb47340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fa9fdb465a0" loc="45:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa9fdb465a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa9fdb46920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa9fdb46ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa9fdb46c40"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa9fdb46dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa9fdb45020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa9fdb451b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa9fdb45340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa9fdb454d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa9fdb45660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa9fdb457f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa9fdb45980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa9fdb45b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa9fdb45ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa9fdb44020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa9fdb441b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa9fdb44340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa9fdb444d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fa9fdb44660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa9fdb447f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa9fdb44980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa9fdb44b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa9fdb44ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa9fdb44e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa9fdb43020"/>
        <function-ref name="getMode" scoped="" ref="0x7fa9fdb431b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa9fdb43540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa9fdb436d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa9fdb43860"/>
        <function-ref name="tx" scoped="" ref="0x7fa9fdb439f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa9fdb43b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa9fdb43d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa9fdb42020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa9fdb421b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa9fdb42340"/>
        <function-ref name="rx" scoped="" ref="0x7fa9fdb424d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa9fdb42660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa9fdb427f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa9fdb42980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa9fdb42b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa9fdb42ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9fdb47d70" loc="44:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fdb47d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fdb46180"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fdb46310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9fe7c5510" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe7c5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9fe7c5890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fe7c5a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9fe7c4af0" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe7c4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9fe7c4e70"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fe7c3030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa9fe7c7510" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa9fe7c7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9fe7c7890"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9fe7c7a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fe7c6280" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fe7c6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe7c6600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe7c6790"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe7c6920"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe7c6ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe7c6c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9fe7c5d20" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe7c5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fe7c40e0"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fe7c4270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa9fe7bf120" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe7bf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fe7bf4a0"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fe7bf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa9fe7c2230" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa9fe7c2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9fe7c25d0"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9fe7c2760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fa9fe7c0ad0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fa9fe7c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9fe7c0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa9fe7c2b60" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa9fe7c2b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa9fe7c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fa9fe7c02f0" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fa9fe7c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa9fe7c0670"/>
        <function-ref name="txDone" scoped="" ref="0x7fa9fe7c0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9fe7bcbd0" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fe7bcbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9fe7bb020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fe7bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9fe7ba930" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fe7ba930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9fe7bacd0"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fe7bae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa9fe7bb400" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fe7bb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe7bb780"/>
        <function-ref name="requested" scoped="" ref="0x7fa9fe7bb910"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe7bbaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe7bbc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fe7bbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fe7bde30" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fe7bde30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe7bc210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe7bc3a0"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe7bc530"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe7bc6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe7bc850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9fe7ba060" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe7ba060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fe7ba3e0"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fe7ba570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fdaddca0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fdaddca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fdadc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa9fdadc330" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa9fdadc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fdadc6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa9fdadc840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa9fdadc9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fdadcb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa9fdad93a0" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa9fdad93a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa9fdad9740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fdad98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa9fdad6210" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa9fdad6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa9fdad65b0"/>
        <function-ref name="configure" scoped="" ref="0x7fa9fdad6740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa9fdad69d0" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa9fdad69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fdad6d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa9fdad5020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa9fdad51b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fdad5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa9fdad9b20" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fdad9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fdad7020"/>
        <function-ref name="requested" scoped="" ref="0x7fa9fdad71b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fdad7340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fdad74d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fdad7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fdad5590" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fdad5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fdad5910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fdad5aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fdad5c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fdad5dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fdad4020"/>
        <function-ref name="get" scoped="" ref="0x7fa9fdad41b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fdad4340"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fdad4980"/>
        <function-ref name="set" scoped="" ref="0x7fa9fdad4660"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fdad44d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fdad47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa9fdada540" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fdada540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fdada8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fdadaa70"/>
        <function-ref name="request" scoped="" ref="0x7fa9fdadac00"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fdadad90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fdad9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa9fdad78b0" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fdad78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fdad7c30"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fdad7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa9fdad4c50" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fa9fdad4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fdad3020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fdad31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa9fe7a0400" loc="72:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa9fe7a0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa9fe7a0780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa9fe7a09d0" loc="73:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fe7a09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe7a0d50"/>
        <function-ref name="requested" scoped="" ref="0x7fa9fe79f020"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe79f1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe79f340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fe79f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fa9fe7b4b20" loc="70:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa9fe7b4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fe7a0020"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe7a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa9fe79f720" loc="74:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fe79f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fe79faa0"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fe79fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa9fdaa4b00" loc="62:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa9fdaa4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa9fdaa4e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa9fdaa20f0" loc="63:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa9fdaa20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fdaa2470"/>
        <function-ref name="requested" scoped="" ref="0x7fa9fdaa2600"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fdaa2790"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fdaa2920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa9fdaa2ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fa9fdaa43a0" loc="60:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa9fdaa43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fdaa4720"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fdaa48b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa9fdaa2d00" loc="64:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa9fdaa2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa9fdaa10a0"/>
        <function-ref name="userId" scoped="" ref="0x7fa9fdaa1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fa9fe77f8e0" loc="3:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa9fe77f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa9fe77fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa9fe77e020" loc="4:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa9fe77e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa9fe77e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa9fe77e530"/>
        <function-ref name="request" scoped="" ref="0x7fa9fe77e6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa9fe77e850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa9fe77e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa9fe77f080" loc="2:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa9fe77f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa9fe77f400"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe77f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7fa9fe76c8c0" loc="47:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7fa9fe76c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fa9fe76cc40"/>
        <function-ref name="offset" scoped="" ref="0x7fa9fe76cdd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fa9fe769020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fa9fe74d720" loc="43:../../tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa9fe74d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fa9fe7295f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fe7283a0"/>
        <function-ref name="element" scoped="" ref="0x7fa9fe728a10"/>
        <function-ref name="full" scoped="" ref="0x7fa9fe72a810"/>
        <function-ref name="maxSize" scoped="" ref="0x7fa9fe729170"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fe729ca0"/>
        <function-ref name="empty" scoped="" ref="0x7fa9fe72a390"/>
        <function-ref name="size" scoped="" ref="0x7fa9fe72ac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa9fe7215a0" loc="93:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa9fe7215a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fa9fe71e4a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fa9fe71c260"/>
        <function-ref name="element" scoped="" ref="0x7fa9fe71c8d0"/>
        <function-ref name="full" scoped="" ref="0x7fa9fe720680"/>
        <function-ref name="maxSize" scoped="" ref="0x7fa9fe71e020"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa9fe71eb50"/>
        <function-ref name="empty" scoped="" ref="0x7fa9fe720200"/>
        <function-ref name="size" scoped="" ref="0x7fa9fe720b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fa9fe71b020" loc="94:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa9fe71b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa9fe71b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fe71b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fe71b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa9fe71b850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa9fe71b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa9fe71bc70" loc="95:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa9fe71bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa9fe71a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa9fe71a1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa9fe71a340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa9fe71a4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa9fe71a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7fa9fe714020" loc="114:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7fa9fe714020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa9fe7143a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa9fe714530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fe722470" loc="89:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fe722470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fe7227f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa9fe71a8e0" loc="96:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa9fe71a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa9fe71ac60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa9fe71adf0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa9fe719020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa9fe7191b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa9fe719340"/>
        <function-ref name="get" scoped="" ref="0x7fa9fe7194d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa9fe719660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa9fe719ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa9fe7197f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa9fe719980"/>
        <function-ref name="led2On" scoped="" ref="0x7fa9fe719b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7fa9fe71fc90" loc="90:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fa9fe71fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fa9fe7210a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fa9fe6fd7d0" loc="43:../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fa9fe6fd7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fa9fe6fdb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa9fe6faad0" loc="94:../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa9fe6faad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa9fe6fae50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fa9fe6f7170" loc="95:../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fa9fe6f7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fa9fe6f74f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fa9fe6ef220" loc="39:../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fa9fe6ef220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa9fe6ef5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fa9fe6ef940" loc="40:../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fa9fe6ef940"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa9fe6efcc0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa9fe6efe50"/>
        <function-ref name="start" scoped="" ref="0x7fa9fe6ee020"/>
        <function-ref name="stop" scoped="" ref="0x7fa9fe6ee1b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faa004df350" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faa004df350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7faa004d81f0" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7faa004dda60" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7faa004da820" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7faa004da250" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7faa004da590" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7faa004dca60" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7faa004d7270" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7faa004d8980" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7faa004dc270" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7faa004de020" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7faa004dfc40" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7faa004d9820" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7faa004d9250" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7faa004d9590" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7faa004deae0" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7faa004de860" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faa004dd350" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7faa004efae0" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7faa004c0ce0" loc="65:../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa004c0a60" loc="65:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7faa004bcd80" loc="78:../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa004bcb00" loc="78:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7faa004b72f0" loc="126:../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa004b9b60" loc="126:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa004b7020" loc="126:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faa004b9270" loc="106:../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7faa004ba2f0" loc="94:../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa004bbcf0" loc="94:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa004ba060" loc="94:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7faa004a92a0" loc="113:../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faa004a9020" loc="113:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7faa004a7790" loc="138:../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faa004a7510" loc="138:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7faa004aa590" loc="104:../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faa004a9af0" loc="130:../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7faa004b3460" loc="80:../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7faa004bfad0" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7faa004bfe50" loc="80:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa004b31c0" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7faa004adbb0" loc="135:../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa004ad5b0" loc="135:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa004ad8e0" loc="135:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faa004b0d00" loc="123:../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7faa004b27d0" loc="96:../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa004b2550" loc="96:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faa004afcf0" loc="110:../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa004af710" loc="110:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7faa004afa60" loc="110:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7faa009d9270" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7faa009d9ac0" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7faa004a5b10" loc="78:../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
              <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa004a51b0" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7faa004a5500" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa004a5830" loc="78:../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../tos/interfaces/Read.nc">
      <documentation loc="33:../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7faa004c8b20" loc="49:../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7faa004c8b20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7faa004c5420" loc="55:../../tos/interfaces/Read.nc">
        <documentation loc="50:../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7faa004c42b0" loc="63:../../tos/interfaces/Read.nc">
        <documentation loc="57:../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7faa004c8b20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7faa004c5ba0" loc="63:../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7faa004c4020" loc="63:../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7faa004c8b20"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7faa004e8270" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7faa004e8a20" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7faa004e6270" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7faa004e51f0" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7faa004e4940" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faa004e3190" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7faa004e6a00" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faa004e3d00" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7faa004e3a80" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7faa004e9a60" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7faa004e59d0" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7faa004e4190" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7faa00475dc0" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7faa00445e60" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7faa00447070" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7faa00445740" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7faa00448950" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7faa004477e0" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7faa0044bb10" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7faa00448270" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7faa00445020" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7faa00667020" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7faa0092cc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7faa003f3020" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7faa003f4cc0" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7faa003f7390" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faa0043d910"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7faa0043c390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7faa003f3890" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7faa003f17b0" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7faa003f4560" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7faa003f1020" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7faa003f7b30" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7faa003f5350" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7faa003f5da0" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faa0043d910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7faa0043c390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7faa003f5b20" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faa0043d910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7faa0043c390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7faa003e50e0" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7faa003e3730" loc="84:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7faa003e34b0" loc="84:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7faa003e12e0" loc="91:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7faa003e1060" loc="91:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7faa003e4ca0" loc="73:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7faa003e43e0" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7faa003e5a90" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7faa003e5810" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7faa003ec3e0" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7faa003ecd60" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7faa003ecae0" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7faa003eb790" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7faa003eb510" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7faa003ea2a0" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7faa003ea020" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7faa003ea990" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7faa003fc810" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7faa003fa2a0" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7faa003fa020" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7faa003fb020" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faa00402aa0" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7faa003fb760" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7faa003ff9b0" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7faa003fc120" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7faa003ff270" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7faa003fe0e0" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7faa003fe9f0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7faa003fe770" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7faa003facb0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7faa003faa30" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7faa003bf9f0" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7faa0058aa80" loc="85:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7faa005891f0" loc="86:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7faa0058a2b0" loc="79:../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7faa007a3810" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7faa009e5020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7faa009e4020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7faa009e5790" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7faa00292e30" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7faa002915c0" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7faa00292020" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7faa00290480" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faa00292720" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7faa00291ce0" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faa00294120" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7faa002947f0" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7faa00266020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7faa00266770" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7faa002612e0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7faa00261060" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7faa00269770" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7faa00265780" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7faa00261bd0" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7faa00265020" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faa00267820" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7faa00262020" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7faa00267020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faa0026c8b0" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7faa00264020" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7faa002627c0" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7faa002647e0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7faa00269020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faa00016570" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faa00016570"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7faa00013020" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faa0000e070" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faa0000e070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7faa0000e2b0" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa0000e2b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7faa0000ae00" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa0000e2b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7faa0000ce40" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7faa0000a460" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa0000e2b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa0000e2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7faa0000be60" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa0000e2b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7faa0000a1d0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa0000e2b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7faa0000b640" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7faa00009620" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa0000e2b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7faa0000ee10" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa0000e2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7faa0000eb90" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa0000e2b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faa0000c680" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa9fff1c100" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa9fff1c100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa9fff1c340" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa9fff1c340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fa9fff1cc60" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa9fff1c340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fa9fff1bd70" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fa9fff1b510" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fa9fff1a500" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7fa9ffdebe40" loc="41:../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7fa9ffdd0040" loc="84:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa9ffdd2a40" loc="84:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fa9ffdd2d80" loc="84:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7fa9ffdd0880" loc="92:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7fa9ffdd2270" loc="76:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7fa9ffdd4bc0" loc="61:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7fa9ffdce2a0" loc="109:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fa9ffdce020" loc="109:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fa9ffddb970" loc="47:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7fa9ffdced40" loc="116:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa9ffdceac0" loc="116:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7fa9ffdcf6d0" loc="100:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa9ffdcf110" loc="100:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fa9ffdcf440" loc="100:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7fa9ffdd4390" loc="54:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa9ffdd4110" loc="54:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7fa9ffdd39e0" loc="69:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa9ffdd3410" loc="69:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fa9ffdd3750" loc="69:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fa9ffdd94b0" loc="120:../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fa9ffdda4d0" loc="97:../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fa9ffdddb20" loc="88:../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fa9ffddacc0" loc="102:../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fa9ffdd7020" loc="128:../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fa9ffd8b190" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa9ffd8c960" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fa9ffd8c1f0" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fa9ffd8f8d0" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fa9ffcd2cc0" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa9ffcd0840" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa9ffcd2530" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fa9ffcd0020" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fa9ffcd1cb0" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fa9ffcd5d60" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fa9ffcd14f0" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fa9ffbc7ae0" loc="53:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fa9ffbc44e0" loc="61:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fa9ffbbad20" loc="65:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fa9ffbba500" loc="59:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fa9ffbc1be0" loc="56:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fa9ffbc0ca0" loc="73:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fa9ffbc1350" loc="46:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fa9ffbc0470" loc="65:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fa9ffbbf620" loc="81:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fa9ffbbd3b0" loc="90:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fa9ffbbdc10" loc="98:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fa9ffbb1de0" loc="79:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa9ffbbed90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa9ffbb1b60" loc="79:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa9ffbbed90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fa9ffbb6e00" loc="53:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fa9ffbb3960" loc="62:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa9ffbbed90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa9ffbb36e0" loc="62:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa9ffbbed90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fa9ffbb12b0" loc="70:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fa9ffbbed90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fa9ffb44120" loc="62:../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fa9ffb41ca0" loc="95:../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa9ffb3e4e0" loc="105:../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fa9ffaec510" loc="57:../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa9ffaec510"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7fa9ffae89a0" loc="89:../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa9ffaec510"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa9ffae8020" loc="89:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fa9ffae83a0" loc="90:../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa9ffaec510"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fa9ffae8700" loc="90:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7fa9ffaeb420" loc="68:../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa9ffaec510"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa9ffaece10" loc="68:../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa9ffaec510"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fa9ffaeb190" loc="68:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fa9ffaea680" loc="78:../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7fa9ffaea400" loc="78:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fa9ffae7020" loc="102:../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa9ffae6950" loc="102:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7fa9ffae6d00" loc="102:../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7fa9ffac74b0" loc="45:../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fa9ffac74b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7fa9ffac7e80" loc="58:../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fa9ffac74b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fa9ffabc390" loc="52:../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa9ffabc390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fa9ffabcc90" loc="58:../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fa9ffabaa20" loc="66:../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa9ffabc390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa9ffaba470" loc="66:../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fa9ffaba790" loc="66:../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa9ffabc390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fa9ffaa7df0" loc="189:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7fa9ffaafaa0" loc="84:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa9ffaaf820" loc="84:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7fa9ffaad020" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa9ffaae990" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7fa9ffaaed00" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7fa9ffaa8a70" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa9ffaa97e0" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fa9ffaa80d0" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fa9ffaa8450" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fa9ffaa87c0" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7fa9ffaa3770" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fa9ffaa30d0" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fa9ffaa3460" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7fa9ffaaa3c0" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa9ffaac150" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fa9ffaac9f0" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fa9ffaacd80" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fa9ffaaa110" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7fa9ffaa5ad0" loc="206:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ffaa5850" loc="206:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fa9ffa54ce0" loc="97:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fa9ffa54020" loc="86:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ffadea50"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fa9ffadd020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa9ffa56970" loc="86:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fa9ffae0e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fa9ffae0550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7fa9ffa56d60" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ffadea50"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fa9ffadd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7fa9ffa55110" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7fa9ffa554b0" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fa9ffa55860" loc="88:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fa9ffa55bd0" loc="88:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fa9ffa53d40" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fa9ffa53720" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fa9ffa53ab0" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7fa9ffa50780" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7fa9ffa4f020" loc="54:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fa9ffa47da0" loc="95:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa9ffa446a0" loc="105:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7fa9ffa37ac0" loc="63:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa9ffacd5f0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7fa9ffacc090"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7fa9ffa34c30" loc="82:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ffadea50"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7fa9ffadd020"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa9ffa349b0" loc="82:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7fa9ffa31350" loc="106:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7fa9ffa2f550" loc="118:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7fa9ffa31d50" loc="112:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7fa9ffa31ad0" loc="112:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7fa9ffa36350" loc="68:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa9ffaca710"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7fa9ffac9020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7fa9ffa34130" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ffadea50"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fa9ffadd020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa9ffa36ac0" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7fa9ffa36e80" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ffadea50"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fa9ffadd020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fa9ffa2e600" loc="128:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7fa9ffa38760" loc="51:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa9ffacd5f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fa9ffacc090"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7fa9ffa384e0" loc="51:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa9ffacd5f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fa9ffacc090"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7fa9ffa33750" loc="89:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa9ffa334d0" loc="89:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7fa9ffa322a0" loc="95:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fa9ffa32020" loc="95:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7fa9ffa32b10" loc="101:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7fa9ffa2fd10" loc="123:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7fa9ffa2eda0" loc="133:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7fa9ffa372a0" loc="57:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa9ffaca710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fa9ffac9020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7fa9ffa37020" loc="57:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa9ffaca710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fa9ffac9020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fa9ff6e9920" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa9ff6e9920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa9ff6e9b60" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa9ff6e9b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fa9ff6ce970" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa9ff6e9b60"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6ce6f0" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fa9ff6cdb40" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6cd8c0" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fa9ff6d0750" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6d04d0" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa9ff6cf020" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa9ff6e9b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6cb8a0" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fa9ff6cbc00" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa9ff6e9b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fa9ff6bf030" loc="65:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6c09e0" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fa9ff6c0d70" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fa9ff6be2a0" loc="71:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6be020" loc="71:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fa9ff6c01f0" loc="57:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fa9ff6c27f0" loc="52:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fa9ff6c2570" loc="52:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fa9ff6d7ad0" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6d7850" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fa9ff6d4cd0" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6d4a50" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fa9ff6d3020" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6d5ce0" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fa9ff6dcd30" loc="177:../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7faa00508180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa9ff6dcab0" loc="177:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fa9ff6e5a10" loc="88:../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa9ff6e5790" loc="88:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fa9ff6ebe50" loc="68:../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fa9ff6e7950" loc="78:../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa9ff6e76d0" loc="78:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fa9ff6e23a0" loc="121:../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa9ff6e3d70" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa9ff6e2110" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fa9ff6e4e50" loc="103:../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa9ff6e4870" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa9ff6e4bc0" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fa9ff6e0810" loc="147:../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa9ff6e0590" loc="147:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fa9ff6ddb90" loc="162:../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa9ff6dd5e0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fa9ff6dd900" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7faa00509d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fa9ff6e1600" loc="136:../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa9ff6e1380" loc="136:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fa9ff6da2f0" loc="187:../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faa00508180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa9ff6dbcf0" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fa9ff6da060" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faa00508180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fa9ff6d9190" loc="195:../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7faa00508180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fa9ff697430" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6971b0" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fa9ff699720" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6994a0" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fa9ff69cdc0" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fa9ff69cb40" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fa9ff69c2a0" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fa9ff69c020" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fa9ff69a880" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fa9ff69a600" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fa9ff6985e0" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff698360" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fa9ff68be60" loc="59:../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fa9ff68b850" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fa9ff68bbd0" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fa9ff6a50c0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa9ff6a7aa0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fa9ff6a7df0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fa9ff6a26d0" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa9ff6a20d0" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fa9ff6a2440" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fa9ff6a5ba0" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7faa00c77110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa9ff6a5920" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fa9ff6a3600" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa9ff6a3380" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fa9ff6a72a0" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa9ff6a7020" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fa9ff6a4720" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa9ff6a44a0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fa9ff68f630" loc="65:../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff68f3b0" loc="65:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fa9ff6936f0" loc="46:../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6930d0" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fa9ff693460" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fa9ff6905f0" loc="59:../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff690370" loc="59:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fa9ff692af0" loc="53:../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6924d0" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fa9ff692860" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fa9ff68e630" loc="71:../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff68e3b0" loc="71:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fa9ff69e0b0" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6a9dd0" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../tos/interfaces/Send.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa9ff682930" loc="75:../../tos/interfaces/Send.nc">
        <documentation loc="57:../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff682370" loc="75:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9ff6826a0" loc="75:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa9ff67b160" loc="125:../../tos/interfaces/Send.nc">
        <documentation loc="115:../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff67dae0" loc="125:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9ff67de10" loc="125:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa9ff67d270" loc="112:../../tos/interfaces/Send.nc">
        <documentation loc="102:../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa9ff680c40" loc="89:../../tos/interfaces/Send.nc">
        <documentation loc="77:../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff6809c0" loc="89:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa9ff67e360" loc="100:../../tos/interfaces/Send.nc">
        <documentation loc="91:../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff681d10" loc="100:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa9ff67e0d0" loc="100:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa9ff65e900" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa9ff65e340" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fa9ff65e670" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa9ff65dc10" loc="65:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fa9ff659410" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fa9ff65a5e0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fa9ff65ae20" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9ff659170" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa9ff65bdc0" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa9ff65b7e0" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa9ff65bb30" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fa9ff65d3d0" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fa9ff65d150" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../tos/interfaces/Random.nc">
      <documentation loc="34:../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fa9ff655820" loc="52:../../tos/interfaces/Random.nc">
        <documentation loc="48:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fa9ff655020" loc="46:../../tos/interfaces/Random.nc">
        <documentation loc="42:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fa9ff650ae0" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff650820" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fa9ff650020" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7faa00543510"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7faa00542e60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff651be0" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fa9ff64ede0" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7faa00540990"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7faa0053e2e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9ff64eae0" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fa9ff6644c0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fa9ff661570" loc="97:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fa9ff662d50" loc="90:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fa9ff668b70" loc="51:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fa9ff665be0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fa9ff664d30" loc="76:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fa9ff662580" loc="83:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fa9ff665420" loc="56:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../tos/interfaces/State.nc">
      <documentation loc="33:../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fa9ff648480" loc="71:../../tos/interfaces/State.nc">
        <documentation loc="68:../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fa9ff64ba80" loc="56:../../tos/interfaces/State.nc">
        <documentation loc="53:../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fa9ff649c90" loc="66:../../tos/interfaces/State.nc">
        <documentation loc="63:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fa9ff649a10" loc="66:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fa9ff649270" loc="61:../../tos/interfaces/State.nc">
        <documentation loc="58:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fa9ff64c730" loc="45:../../tos/interfaces/State.nc">
        <documentation loc="40:../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fa9ff64c4b0" loc="45:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fa9ff64b2a0" loc="51:../../tos/interfaces/State.nc">
        <documentation loc="47:../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fa9ff64b020" loc="51:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fa9ff5ed020" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fa9ff5ee9f0" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fa9ff5eed40" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fa9ff5ef960" loc="93:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fa9ff5ef020" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fa9ff5f0820" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fa9ff5f0c00" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fa9ff5f62a0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa9ff5f6020" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fa9ff5ee270" loc="98:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fa9ff5f3d70" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fa9ff5f3af0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fa9ff5f43e0" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fa9ff5f4160" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fa9ff5ec270" loc="117:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fa9ff5f0020" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fa9ff5f2c50" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fa9ff5eda20" loc="112:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fa9ff5f4b60" loc="66:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fa9ff6bb670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fa9ff6bbdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fa9ff5f3390" loc="71:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fa9ff5f7850" loc="54:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fa9ff5f69f0" loc="60:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fa9ff5f2530" loc="77:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa9ff5c8a70" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7faa00546710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff5c87f0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa9ff5c65c0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7faa00546710"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff5c6340" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fa9ff5dc640" loc="48:../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fa9ff6bb670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fa9ff6bbdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fa9ff5d1420" loc="50:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fa9ff5d0390" loc="60:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fa9ff5d1c00" loc="55:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7faa00508180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fa9ff5d2b80" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faa00508180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fa9ff5d25a0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faa00508180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fa9ff5d28f0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa00508560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fa9ff5c3c50" loc="53:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7faa00546710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa9ff5cdc00" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7faa00546710"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fa9ff5d4d70" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fa9ff5cd610" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa9ff5cd960" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa9ff5cb3b0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7faa00546710"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fa9ff5cc530" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fa9ff5ccda0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa9ff5cb110" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fa9ff4b6bb0" loc="54:../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa9ff4b5d70" loc="66:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fa9ff4b55c0" loc="61:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa9ff4b5340" loc="61:../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fa9ff4b6350" loc="53:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fa9ff4840e0" loc="24:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fa9ff484930" loc="31:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fa9ff4831f0" loc="39:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fa9ff45db00" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff45d520" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa9ff45d870" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fa9ff458dd0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff458490" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa9ff4587e0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa9ff458b30" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa9ff4596b0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7faa00546710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff4590d0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa9ff459420" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fa9ff45e6f0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7faa00546710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff45e110" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa9ff45e460" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fa9ff45a2c0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff45c8f0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa9ff45cc40" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa9ff45a020" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa9ff43edf0" loc="76:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fa9ff43e480" loc="76:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fa9ff43e810" loc="76:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9ff43eb50" loc="76:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa9ff43b3c0" loc="88:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fa9ff43a6a0" loc="88:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fa9ff43aa30" loc="88:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9ff43ad70" loc="88:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa9ff43b110" loc="89:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fa9ff442c80" loc="45:../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fa9ff442a00" loc="45:../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fa9ff354bf0" loc="39:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fa9ff391020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fa9ff391440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fa9ff353aa0" loc="62:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff353820" loc="62:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fa9ff352e60" loc="74:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff352be0" loc="74:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fa9ff352350" loc="68:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa9ff351920" loc="81:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff3516a0" loc="81:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fa9ff3412a0" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff341020" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fa9ff342720" loc="49:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fa9ff31daf0" loc="213:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fa9ff329790" loc="143:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fa9ff335610" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ff3ad080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fa9ff3ad8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa9ff335390" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ff3ad080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fa9ff3ad8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fa9ff32b870" loc="123:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fa9ff333a90" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ff3a8080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fa9ff3a88c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa9ff333810" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ff3a8080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fa9ff3a88c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fa9ff322e70" loc="180:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fa9ff31f480" loc="197:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fa9ff333070" loc="65:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ff3ab020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fa9ff3ab7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fa9ff3322b0" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ff3a8080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fa9ff3a88c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fa9ff32e020" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fa9ff32fd30" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fa9ff32f610" loc="95:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fa9ff322740" loc="179:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fa9ff334840" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ff3ab020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fa9ff3ab7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa9ff3345c0" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ff3ab020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fa9ff3ab7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fa9ff330420" loc="85:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fa9ff3215d0" loc="181:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fa9ff330e00" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fa9ff330b80" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fa9ff32d910" loc="113:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fa9ff32b0e0" loc="118:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fa9ff324840" loc="177:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fa9ff326790" loc="163:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fa9ff32a7e0" loc="133:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fa9ff322020" loc="178:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fa9ff327020" loc="148:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fa9ff321cf0" loc="182:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fa9ff32e800" loc="103:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fa9ff3b4dc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fa9ff3af680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fa9ff3204c0" loc="187:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fa9ff31d350" loc="207:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fa9ff332c50" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fa9ff3329d0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fa9ff31c4d0" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff31c250" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fa9ff335df0" loc="55:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa9ff3ad080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fa9ff3ad8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fa9ff32a020" loc="128:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fa9ff327770" loc="153:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fa9ff324020" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa9ff376e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fa9ff3742b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa9ff325cf0" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa9ff376e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fa9ff3742b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fa9ff3252a0" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fa9ff391020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fa9ff391440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa9ff325020" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fa9ff391020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fa9ff391440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fa9ff31cd90" loc="231:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fa9ff320cb0" loc="192:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fa9ff32d070" loc="108:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fa9ff31fbe0" loc="202:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fa9ff326020" loc="158:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fa9ff329020" loc="138:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fa9ff2b5600" loc="39:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fa9ff28d070" loc="80:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fa9ff2a1b10" loc="31:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fa9ff295d50" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fa9ff295ad0" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fa9ff2a8270" loc="11:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fa9ff291350" loc="71:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fa9ff29acf0" loc="49:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fa9ff2a2c50" loc="28:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fa9ff29f9c0" loc="34:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fa9ff2a3c00" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fa9ff2a3980" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fa9ff2a4120" loc="21:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fa9ff29d790" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fa9ff294c80" loc="66:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fa9ff28f8f0" loc="78:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fa9ff295390" loc="61:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fa9ff28ab60" loc="91:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fa9ff285270" loc="100:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fa9ff2a70e0" loc="14:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fa9ff29d020" loc="38:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fa9ff29b910" loc="45:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fa9ff2a2500" loc="27:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fa9ff2a9020" loc="7:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fa9ff296ba0" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fa9ff296920" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fa9ff2ad7d0" loc="6:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fa9ff293b80" loc="69:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fa9ff28d7d0" loc="81:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fa9ff287350" loc="94:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fa9ff286a90" loc="97:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fa9ff290270" loc="74:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fa9ff28c020" loc="83:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fa9ff294520" loc="65:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fa9ff28bbb0" loc="87:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fa9ff2a7800" loc="15:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fa9ff298020" loc="53:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fa9ff28b020" loc="86:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fa9ff28f190" loc="77:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fa9ff29a520" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fa9ff29a2a0" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fa9ff287af0" loc="95:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fa9ff2961f0" loc="57:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fa9ff291ac0" loc="72:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fa9ff2a9aa0" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa9ff362b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fa9ff361020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa9ff2a9820" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa9ff362b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fa9ff361020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fa9ff29e870" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fa9ff2a6980" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa9ff2a6700" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fa9ff29b120" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9ff29de70" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fa9ff28a3b0" loc="90:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fa9ff2a3270" loc="24:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fa9ff2a6020" loc="18:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fa9ff2989e0" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fa9ff298760" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fa9ff2a89a0" loc="12:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fa9ff28c740" loc="84:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fa9ff2909e0" loc="75:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fa9ff293420" loc="68:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fa9ff299740" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fa9ff2994c0" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fa9ff29e120" loc="35:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fa9ff2a13b0" loc="29:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fa9ff2862b0" loc="96:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fa9ff2a4aa0" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa9ff2a4820" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fa9ff288350" loc="92:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fa9ff29f270" loc="32:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fa9ff288b10" loc="93:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa9ff0195e0" loc="13:../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa9ff019360" loc="13:../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa9ff005b00" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fa9ff0051c0" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fa9ff005530" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9ff005860" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa9ff004880" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa9ff0042c0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9ff0045f0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa9fefea4d0" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa9fefea4d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa9fefea710" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa9fefea710"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fa9fefe92a0" loc="66:../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa9fefea710"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa9fefe9020" loc="66:../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa9fefea710"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fa9fef86580" loc="43:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fa9fef549e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fa9fef54020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fa9fef54750" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fa9fef557f0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fa9fef55020" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa9fef58d30" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa00c76920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fa9fef693d0" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9fef69150" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fa9fef6b3d0" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9fef6b150" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa9fef67350" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9fef670d0" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa9fef68390" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9fef68110" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fa9fed455e0" loc="53:../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa9fed455e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fa9fed422a0" loc="64:../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa9fed455e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fa9fed42020" loc="64:../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa9fed455e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7fa9fea78020" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9fea79960" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7fa9fea79ce0" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7fa9fea7a020" loc="15:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7fa9fea79020" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa9fea7a8b0" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa004f90c0"/>
                <typename><typedef-ref name="message_t" ref="0x7faa004f86f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7fa9fea7ac20" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fa9fea5e190" loc="54:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fa9fea619e0" loc="49:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fa9fea67270" loc="56:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fa9fea666c0" loc="72:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fa9fea64390" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9fea64110" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fa9fea65020" loc="79:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fa9fea67de0" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9fea67b60" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fa9fea64bf0" loc="100:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fa9fea658d0" loc="85:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fa9fea6fc10" loc="71:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fa9fea6e590" loc="81:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fa9fea6f2a0" loc="62:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fa9fea6f020" loc="62:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fa9fea6d2a0" loc="91:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa9fea6d020" loc="91:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fa9fea6b020" loc="62:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fa9fea6bc40" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa9fea6b9c0" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fa9fea69730" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa9fea694b0" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa9fe939dd0" loc="48:../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa9fe939800" loc="48:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9fe939b40" loc="48:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fa9fe931ac0" loc="79:../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fa9fe931840" loc="79:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fa9fe930930" loc="90:../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa9fe930360" loc="90:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9fe9306a0" loc="90:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fa9fe932740" loc="65:../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fa9fe92f2c0" loc="99:../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa9fe92e920" loc="99:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9fe92ec60" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa9fe92f020" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fa9fe931070" loc="72:../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa9fe934720" loc="57:../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa9fe935db0" loc="57:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa9fe934130" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa00c76520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa9fe934480" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa9fe90e5b0" loc="50:../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fa9fe90e330" loc="50:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7fa9fe90edf0" loc="59:../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fa9fe90dcf0" loc="69:../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fa9fe90d700" loc="69:../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fa9fe90da60" loc="69:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7fa9fe90bb50" loc="79:../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fa9fe903420" loc="39:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa9ff376e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fa9ff3742b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fa9fe74a1e0" loc="43:../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa9fe74a1e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7fa9fe7489e0" loc="80:../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa9fe74a1e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7fa9fe7464a0" loc="97:../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa009e0c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa9fe74a1e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fa9fe746220" loc="97:../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa9fe74a1e0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7faa00c7cc30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7faa00c7cc30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7fa9fe744440" loc="108:../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa9fe74a1e0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa9fe7441c0" loc="108:../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7fa9fe749270" loc="57:../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fa9fe748270" loc="72:../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fa9fe745610" loc="88:../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa9fe74a1e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fa9fe74aa90" loc="50:../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa009e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fa9fe7499f0" loc="65:../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa00c76160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7fa9fe71f940" loc="49:../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7fa9fe71f6c0" loc="49:../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
